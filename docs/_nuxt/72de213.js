(self.webpackChunknuxt_app=self.webpackChunknuxt_app||[]).push([["997"],{1172:function(st,ke,S){"use strict";S.r(ke),S.d(ke,{transposeImpl:()=>pn,lessEqualImpl:()=>mn,maximumImpl:()=>Fn,scatterImpl:()=>Ms,sparseFillEmptyRowsImpl:()=>mr,uniqueImpl:()=>js,stridedSliceImpl:()=>Ts,gatherNdImpl:()=>Be,equalImpl:()=>X,bincountReduceImpl:()=>N,lessImpl:()=>Yt,notEqualImpl:()=>xn,squaredDifferenceImpl:()=>tn,simpleAbsImpl:()=>he,stringToHashBucketFastImpl:()=>_n,bincountImpl:()=>z,rangeImpl:()=>Ws,stringSplitImpl:()=>In,addImpl:()=>qe,raggedTensorToTensorImpl:()=>cr,floorImpl:()=>at,prodImpl:()=>en,raggedRangeImpl:()=>Us,staticRegexReplaceImpl:()=>fs,sigmoidImpl:()=>pr,tileImpl:()=>Ks,maxImpl:()=>Pn,castImpl:()=>ge,expImpl:()=>Pe,expm1Impl:()=>me,sliceImpl:()=>Cs,bitwiseAndImpl:()=>P,floorDivImpl:()=>mt,sparseSegmentReductionImpl:()=>gr,rsqrtImpl:()=>ws,ceilImpl:()=>Re,sqrtImpl:()=>zs,stringNGramsImpl:()=>Lt,negImpl:()=>vt,logImpl:()=>kn,greaterEqualImpl:()=>It,concatImpl:()=>k,greaterImpl:()=>ot,multiplyImpl:()=>Te,minimumImpl:()=>Ie,raggedGatherImpl:()=>lr,gatherV2Impl:()=>Xe,sparseReshapeImpl:()=>hs,subImpl:()=>Dn,topKImpl:()=>Hs,linSpaceImpl:()=>cs});var u=S(5924);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(de){const ae=new Float32Array(de.length);for(let ne=0;ne<de.length;++ne)ae[ne]=Math.abs(de[ne]);return ae}const R=de=>{const{x:ae}=de.inputs,ne=de.backend;assertNotComplex(ae,"abs");let fe=new Float32Array(util.sizeFromShape(ae.shape));const xe=ne.data.get(ae.dataId).values;return fe=he(xe),ne.makeOutput(fe,ae.shape,ae.dtype)},W=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(de){return(ae,ne,fe,xe,be)=>{const Ce=u.Wap.assertAndGetBroadcastShape(ae,ne),_e=Ce.length,Ee=u.D5U.computeStrides(Ce),Le=u.D5U.sizeFromShape(Ce),i=u.D5U.getTypedArrayFromDType(be,Le),s=ae.length,o=ne.length,m=u.D5U.computeStrides(ae),$=u.D5U.computeStrides(ne),O=u.Wap.getBroadcastDims(ae,Ce),L=u.Wap.getBroadcastDims(ne,Ce);if(O.length+L.length===0)for(let U=0;U<i.length;++U)i[U]=de(fe[U%fe.length],xe[U%xe.length]);else for(let U=0;U<i.length;++U){const ue=u.D5U.indexToLoc(U,_e,Ee),Me=ue.slice(-s);O.forEach(ut=>Me[ut]=0);const Ke=u.D5U.locToIndex(Me,s,m),Ze=ue.slice(-o);L.forEach(ut=>Ze[ut]=0);const tt=u.D5U.locToIndex(Ze,o,$);i[U]=de(fe[Ke],xe[tt])}return[i,Ce]}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(de,ae){Array.isArray(de)||(de=[de]),de.forEach(ne=>{ne!=null&&u.D5U.assert(ne.dtype!=="complex64",()=>`${ae} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y(de){const{inputs:ae,backend:ne}=de,{real:fe,imag:xe}=ae,be=ne.data.get(fe.dataId).values,Ce=ne.data.get(xe.dataId).values,_e=ne.makeTensorInfo(fe.shape,"complex64"),Ee=ne.data.get(_e.dataId);return Ee.complexTensorInfos={real:ne.makeTensorInfo(fe.shape,"float32",be),imag:ne.makeTensorInfo(xe.shape,"float32",Ce)},_e}const V=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function se(de,ae,ne="float32"){if(ne==="complex64"){const xe=se(de,ae,"float32"),be=se(de,ae,"float32");return Y({inputs:{real:xe,imag:be},backend:de})}const fe=u.D5U.makeZerosTypedArray(u.D5U.sizeFromShape(ae),ne);return de.makeTensorInfo(ae,ne,fe)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J(de){const{inputs:ae,backend:ne}=de,{x:fe}=ae;return ne.incRef(fe.dataId),{dataId:fe.dataId,shape:fe.shape,dtype:fe.dtype}}const D=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b(de){const{inputs:ae,backend:ne}=de,{input:fe}=ae,xe=ne.data.get(fe.dataId).complexTensorInfos.real,be=ne.data.get(xe.dataId).values;return ne.makeTensorInfo(xe.shape,xe.dtype,be)}const te=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ge(de,ae,ne,fe){if(fe==="int32"){const xe=Int32Array.from(de);return[ae,"int32",xe]}if(fe==="bool"){const xe=u.D5U.toTypedArray([0],ne),[be,Ce]=x((_e,Ee)=>_e!==Ee?1:0)(ae,[],de,xe,"bool");return[Ce,"bool",be]}throw new Error(`Error in Cast: failed to cast ${ne} to ${fe}`)}function $e(de){const{inputs:ae,backend:ne,attrs:fe}=de,{x:xe}=ae,{dtype:be}=fe;if(be==="complex64"){if(xe.dtype==="complex64")return J({inputs:{x:xe},backend:ne});const i=se(ne,xe.shape,xe.dtype),s=$e({inputs:{x:xe},backend:ne,attrs:{dtype:"float32"}}),o=Y({inputs:{real:s,imag:i},backend:ne});return ne.disposeIntermediateTensorInfo(i),ne.disposeIntermediateTensorInfo(s),o}if(xe.dtype==="complex64"){const i=b({inputs:{input:xe},backend:ne}),s=$e({inputs:{x:i},backend:ne,attrs:{dtype:be}});return ne.disposeIntermediateTensorInfo(i),s}if(!u.D5U.hasEncodingLoss(xe.dtype,be)){const i=J({inputs:{x:xe},backend:ne});return{dataId:i.dataId,shape:i.shape,dtype:be}}const Ce=ne.data.get(xe.dataId).values,[_e,Ee,Le]=ge(Ce,xe.shape,xe.dtype,be);return ne.makeTensorInfo(_e,Ee,Le)}const Fe=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(de,ae,ne,fe){return ne==null?({inputs:xe,backend:be})=>{const{a:Ce,b:_e}=xe,Ee=be;I([Ce,_e],de);const Le=Ee.data.get(Ce.dataId).values,i=Ee.data.get(_e.dataId).values,s=Ce.dtype==="string"?u.Wap.fromUint8ToStringArray(Le):Le,o=Ce.dtype==="string"?u.Wap.fromUint8ToStringArray(i):i,m=fe||Ce.dtype,[$,O]=ae(Ce.shape,_e.shape,s,o,m);return Ee.makeTensorInfo(O,m,$)}:({inputs:xe,backend:be})=>{const{a:Ce,b:_e}=xe,Ee=be;if(Ce.dtype==="complex64"||_e.dtype==="complex64"){const Le=$e({inputs:{x:Ce},backend:Ee,attrs:{dtype:"complex64"}}),i=Ee.data.get(Le.dataId),s=i.complexTensorInfos.real,o=i.complexTensorInfos.imag,m=Ee.data.get(s.dataId).values,$=Ee.data.get(o.dataId).values,O=$e({inputs:{x:_e},backend:Ee,attrs:{dtype:"complex64"}}),L=Ee.data.get(O.dataId),U=L.complexTensorInfos.real,ue=L.complexTensorInfos.imag,Me=Ee.data.get(U.dataId).values,Ke=Ee.data.get(ue.dataId).values,[Ze,tt,ut]=ne(Ce.shape,_e.shape,m,$,Me,Ke),_t=Ee.makeTensorInfo(ut,"float32",Ze),wt=Ee.makeTensorInfo(ut,"float32",tt),ft=Y({inputs:{real:_t,imag:wt},backend:Ee});return Ee.disposeIntermediateTensorInfo(Le),Ee.disposeIntermediateTensorInfo(O),Ee.disposeIntermediateTensorInfo(_t),Ee.disposeIntermediateTensorInfo(wt),ft}else{const Le=Ee.data.get(Ce.dataId).values,i=Ee.data.get(_e.dataId).values,s=fe||Ce.dtype,[o,m]=ae(Ce.shape,_e.shape,Le,i,s);return Ee.makeTensorInfo(m,s,o)}}}function Ge(de){return(ae,ne,fe,xe,be,Ce)=>{const _e=u.Wap.assertAndGetBroadcastShape(ae,ne),Ee=u.D5U.sizeFromShape(_e),Le=_e.length,i=u.D5U.computeStrides(_e),s=u.D5U.getTypedArrayFromDType("float32",Ee),o=u.D5U.getTypedArrayFromDType("float32",Ee),m=u.Wap.getBroadcastDims(ae,_e),$=u.Wap.getBroadcastDims(ne,_e),O=u.Wap.mergeRealAndImagArrays(fe,xe),L=u.Wap.mergeRealAndImagArrays(be,Ce),U=ae.length,ue=u.D5U.computeStrides(ae),Me=ne.length,Ke=u.D5U.computeStrides(ne);if(m.length+$.length===0)for(let Ze=0;Ze<s.length;Ze++){const tt=Ze%O.length,ut=Ze%L.length,_t=de(O[tt*2],O[tt*2+1],L[ut*2],L[ut*2+1]);s[Ze]=_t.real,o[Ze]=_t.imag}else for(let Ze=0;Ze<s.length;Ze++){const tt=u.D5U.indexToLoc(Ze,Le,i),ut=tt.slice(-U);m.forEach(Kt=>ut[Kt]=0);const _t=u.D5U.locToIndex(ut,U,ue),wt=tt.slice(-Me);$.forEach(Kt=>wt[Kt]=0);const ft=u.D5U.locToIndex(wt,Me,Ke),St=de(O[_t*2],O[_t*2+1],L[ft*2],L[ft*2+1]);s[Ze]=St.real,o[Ze]=St.imag}return[s,o,_e]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qe=x((de,ae)=>de+ae),He=Ge((de,ae,ne,fe)=>({real:de+ne,imag:ae+fe})),j=Ve(u.mm_,qe,He),ye=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z(de,ae,ne,fe,xe){const be=u.D5U.sizeFromShape(fe),Ce=u.D5U.makeZerosTypedArray(xe,ne);for(let _e=0;_e<de.length;_e++){const Ee=de[_e];if(Ee<0)throw new Error("Input x must be non-negative!");Ee>=xe||(be>0?Ce[Ee]+=ae[_e]:Ce[Ee]+=1)}return Ce}function N(de,ae,ne,fe=!1){const xe=de.shape[0],be=de.shape[1],Ce=(0,u.f3b)([xe,ne],ae.dtype);for(let _e=0;_e<xe;_e++)for(let Ee=0;Ee<be;Ee++){const Le=de.get(_e,Ee);if(Le<0)throw new Error("Input x must be non-negative!");Le>=ne||(fe?Ce.set(1,_e,Le):ae.size>0?Ce.set(Ce.get(_e,Le)+ae.get(_e,Ee),_e,Le):Ce.set(Ce.get(_e,Le)+1,_e,Le))}return Ce}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P=x((de,ae)=>de&ae),C=Ve(u.hCO,P),Z=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function re(de){return(ae,ne,fe)=>{const xe=u.D5U.getArrayFromDType(ne,ae.length);for(let be=0;be<ae.length;++be)xe[be]=de(ae[be],fe);return xe}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p(de,ae,ne){const fe=re(ae);return Se(de,fe,ne)}function Se(de,ae,ne){return({inputs:fe,attrs:xe,backend:be})=>{const{x:Ce}=fe;I(Ce,de);const _e=be,Ee=_e.data.get(Ce.dataId).values;let Le;if(Ce.dtype==="string"){if(!Array.isArray(Ee))throw new Error("String tensor's value was not an instance of Array");Le=u.Wap.fromUint8ToStringArray(Ee)}else Le=Ee;const i=ne||Ce.dtype,s=ae(Le,i,xe);return _e.makeTensorInfo(Ce.shape,i,s)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Re=re(de=>Math.ceil(de)),M=Se(u.gJX,Re),ee=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k(de,ae,ne,fe){const xe=u.D5U.getArrayFromDType(ne,u.D5U.sizeFromShape(ae));if(fe&&ne!=="string"){let be=0;de.forEach(Ce=>{const _e=u.D5U.sizeFromShape(Ce.shape);xe.set(Ce.vals,be),be+=_e})}else{let be=0;de.forEach(Ce=>{const _e=ne==="string"?u.Wap.fromUint8ToStringArray(Ce.vals):Ce.vals;let Ee=0;for(let Le=0;Le<Ce.shape[0];++Le){const i=Le*ae[1]+be;for(let s=0;s<Ce.shape[1];++s)xe[i+s]=_e[Ee++]}be+=Ce.shape[1]})}return xe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X=x((de,ae)=>de===ae?1:0),H=Ve(u.hdR,X,null,"bool"),we=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pe=re(de=>Math.exp(de)),Ye=Se(u.NEP,Pe,"float32"),Oe=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const me=re(de=>Math.expm1(de)),Ue=Se(u.Y0y,me),je=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const at=re(de=>Math.floor(de)),rt=Se(u.OR,at),Qe=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mt=x((de,ae)=>Math.floor(de/ae)),yt=Ve(u.jeX,mt,null,"int32"),oe=null;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(de,ae,ne,fe,xe,be,Ce,_e,Ee){const Le=(0,u.f3b)([fe,be],ne);for(let i=0;i<fe;i++){const s=[];let o=0;for(let m=0;m<xe;m++){const $=de[i*xe+m];o+=$*Ce[m],s.push($)}if(o<0||o>=Ee/be)throw new Error(`Invalid indices: ${s} does not index into ${_e}`);for(let m=0;m<be;m++)Le.values[i*be+m]=ae.get(...ae.indexToLoc(o*be+m))}return Le}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xe(de,ae,ne){const fe=(0,u.f3b)(ne,de.dtype);for(let xe=0;xe<fe.size;++xe){const Ce=fe.indexToLoc(xe).slice(),_e=Ce[0],Ee=Ce[2],Le=ae.locToIndex([_e,Ee]);Ce[2]=ae.values[Le];const i=de.locToIndex(Ce);0<=i&&i<de.values.length&&(fe.values[xe]=de.values[i])}return fe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ot=x((de,ae)=>de>ae?1:0),bt=Ve(u.iZT,ot,null,"bool"),Ct=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const It=x((de,ae)=>de>=ae?1:0),Ot=Ve(u.Acj,It,null,"bool"),zt=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yt=x((de,ae)=>de<ae?1:0),ln=Ve(u.vtC,Yt,null,"bool"),cn=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mn=x((de,ae)=>de<=ae?1:0),Qn=Ve(u.CAk,mn,null,"bool"),ls=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(de,ae,ne){const fe=(ae-de)/(ne-1),xe=u.D5U.makeZerosTypedArray(ne,"float32");xe[0]=de;for(let be=1;be<xe.length;be++)xe[be]=xe[be-1]+fe;return xe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kn=re(de=>Math.log(de)),zn=Se(u.ZbH,kn),an=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(de,ae,ne,fe){const xe=u.D5U.getTypedArrayFromDType(fe,u.D5U.sizeFromShape(ne));for(let be=0;be<xe.length;++be){const Ce=be*ae;let _e=de[Ce];for(let Ee=0;Ee<ae;++Ee){const Le=de[Ce+Ee];(Number.isNaN(Le)||Le>_e)&&(_e=Le)}xe[be]=_e}return xe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fn=x((de,ae)=>Math.max(de,ae)),qn=Ve(u.BMI,Fn),Bn=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ie=x((de,ae)=>Math.min(de,ae)),ze=Ve(u.q8u,Ie),q=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Te=x((de,ae)=>de*ae),We=Ge((de,ae,ne,fe)=>({real:de*ne-ae*fe,imag:de*fe+ae*ne})),ct=Ve(u.wYn,Te,We),ht=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vt(de,ae,ne){const fe=u.D5U.createScalarValue(-1,ne);return Te([],ae,fe,de,ne)}function Qt(de){const{inputs:ae,backend:ne}=de,{x:fe}=ae;assertNotComplex(fe,"neg");const xe=ne.data.get(fe.dataId).values,[be,Ce]=vt(xe,fe.shape,fe.dtype);return ne.makeTensorInfo(Ce,fe.dtype,be)}const Gt=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xn=x((de,ae)=>de!==ae?1:0),Tt=Ve(u.yQU,xn,null,"bool"),Ft=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(de,ae,ne,fe){const[xe,be]=u.Wap.computeOutAndReduceShapes(de,fe),Ce=(0,u.x8V)(ae,"int32"),_e=u.D5U.makeZerosTypedArray(u.D5U.sizeFromShape(xe),Ce),Ee=u.D5U.sizeFromShape(be);for(let Le=0;Le<_e.length;++Le){const i=Le*Ee;let s=1;for(let o=0;o<Ee;++o)s*=ne[i+o];_e[Le]=s}return{outVals:_e,outShape:xe,outDtype:Ce}}function ds(de){const{inputs:ae,backend:ne,attrs:fe}=de,{x:xe}=ae,{axis:be,keepDims:Ce}=fe;assertNotComplex(xe,"prod");const _e=xe.shape.length,Ee=util.parseAxisParam(be,xe.shape),Le=backend_util.getAxesPermutation(Ee,_e);let i=Ee,s=xe;const o=[];Le!=null&&(s=transpose({inputs:{x:xe},backend:ne,attrs:{perm:Le}}),o.push(s),i=backend_util.getInnerMostAxes(i.length,_e));const m=ne.data.get(s.dataId).values,{outVals:$,outShape:O,outDtype:L}=en(s.shape,s.dtype,m,i);let U=O;return Ce&&(U=backend_util.expandShapeToKeepDim(O,Ee)),o.forEach(ue=>ne.disposeIntermediateTensorInfo(ue)),ne.makeTensorInfo(U,L,$)}const ir=null;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ln(de,ae,ne){de.forEach((fe,xe)=>{if(fe<0||fe>=ne){const be=u.D5U.indexToLoc(xe,ae.length,u.D5U.computeStrides(ae)).join(",");throw new Error(`indices[${be}] = ${fe} is not in [0, ${ne})`)}})}function Gn(de,ae){for(let ne=0;ne<de.length;++ne){const fe=de[ne],xe=ne===de.length-1?ae:de[ne+1].length;if(fe.length===0)throw new Error("Ragged splits may not be empty");if(fe[0]<0)throw new Error("Ragged splits must be non-negative");if(fe[fe.length-1]>xe)throw new Error("Ragged splits must not point past values");for(let be=1;be<fe.length;++be)if(fe[be-1]>fe[be])throw new Error("Ragged splits must be sorted in ascending order")}}function ur(de,ae,ne,fe){const xe=[];let be=0;const Ce=ae.length-1+ne.length,_e=new Array(Ce).fill(null).map(()=>[0]);Gn(ne,fe);let Ee=1;for(let Le=0;Le<ae.length-1;++Le){Ee*=ae[Le];const i=ae[Le+1];for(let s=1;s<Ee+1;++s)_e[Le].push(s*i)}for(let Le=0;Le<de.length;++Le){let i=de[Le],s=de[Le]+1;for(let o=0;o<ne.length;++o){const m=ne[o],$=o+ae.length-1;if($>=0){const O=_e[$],L=O[O.length-1]-m[i];for(let U=i;U<s;++U)_e[$].push(m[U+1]+L)}i=m[i],s=m[s]}s!==i&&(xe.push([i,s]),be+=s-i)}return{outSplits:_e,valueSlices:xe,numValues:be}}function vs(de){const ae=[];for(let ne=0;ne<de.length;++ne){const fe=de[ne].length,xe=u.D5U.getArrayFromDType("int32",fe);ae.push(xe),de[ne].forEach((be,Ce)=>xe[Ce]=be)}return ae}function Es(de,ae){const ne=de.slice(0,ae);for(;ne.length<ae;)ne.push(1);for(let fe=ae;fe<de.length;fe++)ne[ae-1]*=de[fe];return ne}function Bs(de,ae,ne,fe,xe,be){const Ce=Es(ae,2)[1],_e=Es(be,2)[1];let Ee=0;for(const Le of ne)for(let i=Le[0];i<Le[1];++i){for(let s=0;s<fe;++s)xe[Ee*_e+s]=de[i*Ce+s];++Ee}}function Ls(de,ae,ne,fe,xe){const be=ae.slice();be[0]=xe;const Ce=u.D5U.getArrayFromDType(ne,u.D5U.sizeFromShape(be)),_e=de.length,Ee=_e===0?0:_e/ae[0];return Bs(de,ae,fe,Ee,Ce,be),[Ce,be]}function lr(de,ae,ne,fe,xe,be,Ce,_e){if(de.length===0)throw new Error("paramsNestedSplits must be non empty");if(ae[0].length===0)throw new Error("Split tensors must not be scalars");const Ee=ae[0][0]-1;if(Ln(be,Ce,Ee),fe.length===0)throw new Error("params.rank must be nonzero");const Le=fe[0],{outSplits:i,valueSlices:s,numValues:o}=ur(be,Ce,de,Le),m=vs(i),$=Ls(ne,fe,xe,s,o);return[m,$[0],$[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn=2147483647;function Us(de,ae,ne,fe,xe,be,Ce){if(ae.length>1)throw new Error("starts must be a scalar or vector");if(xe.length>1)throw new Error("limits must be a scalar or vector");if(Ce.length>1)throw new Error("deltas must be a scalar or vector");const _e=ae.length===0,Ee=xe.length===0,Le=Ce.length===0,i=[];_e||i.push(ae[0]),Ee||i.push(xe[0]),Le||i.push(Ce[0]);for(let L=1;L<i.length;++L)if(i[L]!==i[L-1])throw new Error("starts, limits, and deltas must have the same shape");const s=i.length===0?1:i[0],o=u.D5U.getArrayFromDType("int32",s+1);o[0]=0;for(let L=0;L<s;++L){const U=_e?de[0]:de[L],ue=Ee?fe[0]:fe[L],Me=Le?be[0]:be[L];if(Me===0)throw new Error("Requires delta != 0");let Ke;if(Me>0&&ue<U||Me<0&&ue>U)Ke=0;else if(Ke=Math.ceil(Math.abs((ue-U)/Me)),Ke>Zn)throw new Error(`Requires ((limit - start) / delta) <= ${Zn}`);o[L+1]=o[L]+Ke}const m=o[s],$=u.D5U.getArrayFromDType(ne,m);let O=0;for(let L=0;L<s;++L){const U=o[L+1]-o[L];let ue=_e?de[0]:de[L];const Me=Le?be[0]:be[L];for(let Ke=0;Ke<U;++Ke)$[O++]=ue,ue+=Me}return[o,$]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var gn=u.Wap.RowPartitionType;class Jn{constructor(ae,ne,fe,xe,be,Ce,_e,Ee,Le,i){this.shape=ae,this.shapeShape=ne,this.values=fe,this.valuesShape=xe,this.valuesDType=be,this.defaultValue=Ce,this.defaultValueShape=_e,this.rowPartitionValues=Ee,this.rowPartitionValuesShapes=Le,this.rowPartitionTypes=u.Wap.getRowPartitionTypesHelper(i),this.raggedRank=u.Wap.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(ae){return this.rowPartitionTypes[0]===gn.FIRST_DIM_SIZE?this.rowPartitionTypes[ae+1]:this.rowPartitionTypes[ae]}getRowPartitionTensor(ae){return this.rowPartitionTypes[0]===gn.FIRST_DIM_SIZE?this.rowPartitionValues[ae+1]:this.rowPartitionValues[ae]}getMaxWidth(ae){const ne=this.getRowPartitionTensor(ae-1);switch(this.getRowPartitionTypeByDimension(ae-1)){case gn.VALUE_ROWIDS:return Jn.getMaxWidthValueRowID(ne);case gn.ROW_SPLITS:return Jn.getMaxWidthRowSplit(ne);default:throw new Error(`Cannot handle partition type ${gn[this.getRowPartitionTypeByDimension(ae-1)]}`)}}static getMaxWidthRowSplit(ae){const ne=ae.length;if(ne===0||ne===1)return 0;let fe=0;for(let xe=0;xe<ne-1;++xe){const be=ae[xe+1]-ae[xe];be>fe&&(fe=be)}return fe}static getMaxWidthValueRowID(ae){const ne=ae.length;if(ne===0)return 0;let fe=0,xe=ae[0],be=0;for(let Ce=1;Ce<ne;++Ce){const _e=ae[Ce];_e!==xe&&(xe=_e,be=Math.max(Ce-fe,be),fe=Ce)}return Math.max(ne-fe,be)}tensorShapeFromTensor(ae,ne,fe=!0){if(ne.length===0){if(ae[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return ps(ae,fe)}calculateOutputSize(ae){const ne=this.valuesShape,fe=this.defaultValueShape;u.Wap.validateDefaultValueShape(fe,ne);const xe=this.tensorShapeFromTensor(this.shape,this.shapeShape),Ce=u.Wap.combineRaggedTensorToTensorShapes(this.raggedRank,xe,ne);Ce[0]<0&&(Ce[0]=ae);for(let _e=1;_e<=this.raggedRank;++_e)Ce[_e]<0&&(Ce[_e]=this.getMaxWidth(_e));return Ce}calculateFirstParentOutputIndex(ae,ne,fe){const xe=Math.min(ae,fe),be=[];let Ce=0;for(let _e=0;_e<xe;++_e,Ce+=ne)be.push(Ce);for(let _e=xe;_e<ae;++_e)be.push(-1);return u.D5U.assert(be.length===ae,()=>"Final length of result must be equal to firstDimension."),be}calculateOutputIndexRowSplit(ae,ne,fe,xe){const be=ae.length,Ce=[];for(let _e=0;_e<be-1;++_e){const Ee=ae[_e+1]-ae[_e];let Le=Math.min(xe,Ee),i=ne[_e];i===-1&&(Le=0);for(let s=0;s<Le;++s)Ce.push(i),i+=fe;for(let s=0;s<Ee-Le;++s)Ce.push(-1)}if(be>0&&Ce.length!==ae[be-1])throw new Error("Invalid row split size.");return Ce}calculateOutputIndexValueRowID(ae,ne,fe,xe){const be=ae.length,Ce=[];if(be===0)return[];let _e=0,Ee=ae[0];if(Ee>=ne.length)throw new Error(`Got currentValueRowId=${Ee}, which is not less than ${ne.length}`);let Le=ne[Ee];Ce.push(Le);for(let i=1;i<be;++i){const s=ae[i];if(s===Ee)Le>=0&&(++_e,_e<xe?Le+=fe:Le=-1);else{if(_e=0,Ee=s,s>=ne.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${ne.length}`);Le=ne[s]}Ce.push(Le)}if(Ce.length!==ae.length)throw new Error("Invalid row ids.");return Ce}calculateOutputIndex(ae,ne,fe,xe){const be=this.getRowPartitionTensor(ae),Ce=this.getRowPartitionTypeByDimension(ae);switch(Ce){case gn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(be,ne,fe,xe);case gn.ROW_SPLITS:if(be.length-1>ne.length)throw new Error(`Row partition size is greater than output size: ${be.length-1} > ${ne.length}`);return this.calculateOutputIndexRowSplit(be,ne,fe,xe);default:throw new Error(`Unsupported partition type: ${gn[Ce]}`)}}getFirstDimensionSize(){const ae=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const ne=this.rowPartitionTypes[0];switch(ne){case gn.FIRST_DIM_SIZE:return ae[0];case gn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case gn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${gn[ne]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const ne=this.getFirstDimensionSize(),fe=this.calculateOutputSize(ne),xe=new Array(this.raggedRank+1);xe[xe.length-1]=1;for(let Ee=xe.length-2;Ee>=0;--Ee)xe[Ee]=xe[Ee+1]*fe[Ee+1];const be=ps(fe,!1),Ce=u.D5U.getArrayFromDType(this.valuesDType,u.D5U.sizeFromShape(be));if(xe[0]*fe[0]>0){let Ee=this.calculateFirstParentOutputIndex(ne,xe[0],fe[0]);for(let Le=1;Le<=this.raggedRank;++Le)Ee=this.calculateOutputIndex(Le-1,Ee,xe[Le],fe[Le]);this.setOutput(this.raggedRank,Ee,Ce,be)}return[be,Ce]}setOutput(ae,ne,fe,xe){if(fe.length===0)return;const be=this.values,Ce=fe;let _e=xe.slice();_e=_e.slice(ae+1);const Ee=u.D5U.sizeFromShape(_e),Le=ne.length;let i=this.defaultValue;if(i.length!==Ee&&i.length!==1){const $=this.defaultValueShape;(0,u.lub)(()=>{const O=(0,u.XLQ)(i,$);i=(0,u.UFq)(O,_e).dataSync()})}let s=0,o=0,m=0;for(let $=0;$<=Le;++$){let O=$<Le?ne[$]:-1;if(O===m){++m;continue}if(o<m){const L=be.subarray(s*Ee),U=Ce.subarray(o*Ee),ue=(m-o)*Ee;Vs(U,L,ue)}if($>=Le){const L=fe.length;O=Math.floor(L/Ee)}if(O>m)if(this.defaultValue.length===1)Ce.subarray(m*Ee,O*Ee).fill(this.defaultValue[0]),m=O;else for(;O>m;){const L=Ce.slice(m*Ee);Vs(L,i,Ee),++m}O<0?(s=$+1,o=m):(s=$,o=m,m=o+1)}}}function Vs(de,ae,ne){for(let fe=0;fe<ne;fe++)de[fe]=ae[fe]}function ps(de,ae){const ne=[];for(let fe of de){if(fe<0){if(!ae)throw new Error(`Dimension ${fe} must be >= 0`);if(fe<-1)throw new Error(`Dimension ${fe} must be >= -1`);fe=-1}ne.push(fe)}return ne}function cr(de,ae,ne,fe,xe,be,Ce,_e,Ee,Le){return new Jn(de,ae,ne,fe,xe,be,Ce,_e,Ee,Le).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(de,ae,ne,fe){const xe=de===ae,be=de<ae&&ne<0,Ce=ae<de&&ne>1;if(xe||be||Ce)return u.D5U.makeZerosTypedArray(0,fe);const _e=Math.abs(Math.ceil((ae-de)/ne)),Ee=u.D5U.makeZerosTypedArray(_e,fe);ae<de&&ne===1&&(ne=-1),Ee[0]=de;for(let Le=1;Le<Ee.length;Le++)Ee[Le]=Ee[Le-1]+ne;return Ee}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ws=re(de=>1/Math.sqrt(de)),dr=Se(u.bV0,ws),Br=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ms(de,ae,ne,fe,xe,be,Ce,_e,Ee,Le){const i=[fe/xe,xe],s=de.values,o=ae.values;if(fe===0)return(0,u.f3b)(ne,ae.dtype);const m=Ee instanceof u.YDk?Ee:(0,u.f3b)(i,ae.dtype);typeof Ee=="string"||typeof Ee=="number"?m.values.fill(Ee):typeof Ee=="boolean"&&m.values.fill(+Ee);for(let $=0;$<be;$++){const O=[];let L=0;for(let U=0;U<Ce;U++){const ue=s[$*Ce+U];O.push(ue),L+=ue*_e[U]}if(L<0||L>=fe/xe)throw new Error(`Invalid indices: ${O} does not index into ${ne}`);for(let U=0;U<xe;U++)Le?m.values[L*xe+U]+=o[$*xe+U]:m.values[L*xe+U]=ae.rank===0?o[0]:o[$*xe+U]}return m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pr=re(de=>1/(1+Math.exp(-de))),hr=p(u.a5O,de=>1/(1+Math.exp(-de))),Lr=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cs(de,ae,ne,fe,xe){const be=u.kuN.isSliceContinous(fe,ae,ne),Ce=u.D5U.sizeFromShape(ne),_e=u.D5U.computeStrides(fe);if(be){const s=u.kuN.computeFlatOffset(ae,_e);return xe==="string"?de.slice(s,s+Ce):de.subarray(s,s+Ce)}const Ee=xe==="string"?u.Wap.fromUint8ToStringArray(de):de,Le=(0,u.f3b)(fe,xe,Ee),i=(0,u.f3b)(ne,xe);for(let s=0;s<i.size;++s){const o=i.indexToLoc(s),m=o.map(($,O)=>$+ae[O]);i.set(Le.get(...m),...o)}return xe==="string"?u.Wap.fromStringArrayToUint8(i.values):i.values}function Kn(de){const{inputs:ae,backend:ne,attrs:fe}=de,{x:xe}=ae,{begin:be,size:Ce}=fe;assertNotComplex(xe,"slice");const[_e,Ee]=slice_util.parseSliceParams(xe,be,Ce);slice_util.assertParamsValid(xe,_e,Ee);const Le=ne.data.get(xe.dataId).values,i=Cs(Le,_e,Ee,xe.shape,xe.dtype);return ne.makeTensorInfo(Ee,xe.dtype,i)}const fr=null;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(de,ae,ne,fe,xe,be,Ce){const _e=ae[0],Ee=be[0],Le=new Array(Ee),i=new Array(_e),s=ae[1];if(Ee===0){if(_e!==0)throw new Error(u.Wap.getSparseFillEmptyRowsIndicesDenseShapeMismatch(_e));const L=u.D5U.getArrayFromDType(ne,0),U=u.D5U.getArrayFromDType(xe,0);return[L,[0,s],U,Le,i]}let o=!0,m=0;const $=new Array(Ee).fill(0);for(let L=0;L<_e;++L){const U=de[L*s];if(U<0)throw new Error(u.Wap.getSparseFillEmptyRowsNegativeIndexErrorMessage(L,U));if(U>=Ee)throw new Error(u.Wap.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(L,U,Ee));++$[U],o=o&&U>=m,m=U}let O=!0;for(let L=0;L<Ee;++L){const U=$[L]===0;Le[L]=U,O=O&&!U,$[L]=Math.max($[L],1),L>0&&($[L]+=$[L-1])}if(O&&o){const L=de,U=fe;for(let ue=0;ue<_e;++ue)i[ue]=ue;return[L,[_e,s],U,Le,i]}else{const L=$[Ee-1],U=u.D5U.getArrayFromDType(ne,L*s),ue=u.D5U.getArrayFromDType(xe,L),Me=new Array(Ee).fill(0);for(let Ke=0;Ke<_e;++Ke){const Ze=de[Ke*s],tt=Me[Ze],ut=(Ze===0?0:$[Ze-1])+tt;Me[Ze]++;for(let _t=0;_t<s;++_t)U[ut*s+_t]=de[Ke*s+_t];ue[ut]=fe[Ke],i[Ke]=ut}for(let Ke=0;Ke<Ee;++Ke)if(Me[Ke]===0){const tt=Ke===0?0:$[Ke-1];U[tt*s+0]=Ke;for(let ut=1;ut<s;++ut)U[tt*s+ut]=0;ue[tt]=Ce}return[U,[L,s],ue,Le,i]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hs(de,ae,ne,fe,xe){const be=u.D5U.sizeFromShape(fe),Ce=ae[0],_e=xe.length,Ee=[];let Le=1,i=-1;for(let L=0;L<_e;++L){const U=xe[L];if(U===-1){if(i!==-1)throw new Error(u.Wap.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(i,L));i=L,Ee.push(1)}else{if(U<0)throw new Error(u.Wap.getSparseReshapeNegativeOutputDimErrorMessage(L,U));Le*=U,Ee.push(U)}}if(i!==-1){if(Le<=0)throw new Error(u.Wap.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const L=Math.trunc(be/Le);if(Le*L!==be)throw new Error(u.Wap.getSparseReshapeInputOutputMultipleErrorMessage(fe,Ee));Ee[i]=L}if(u.D5U.sizeFromShape(Ee)!==be)throw new Error(u.Wap.getSparseReshapeInputOutputMismatchErrorMessage(fe,Ee));const o=fe.length,m=[];if(o>0){m[o-1]=1;for(let L=o-2;L>=0;--L)m[L]=m[L+1]*fe[L+1]}const $=[];if(_e>0){$[_e-1]=1;for(let L=_e-2;L>=0;--L)$[L]=$[L+1]*Ee[L+1]}const O=u.D5U.getArrayFromDType(ne,Ce*_e);for(let L=0;L<Ce;++L){let U=0;for(let ue=0;ue<o;++ue)U+=de[L*o+ue]*m[ue];for(let ue=0;ue<_e;++ue)O[L*_e+ue]=Math.trunc(U/$[ue]),U%=$[ue]}return[O,[Ce,_e],Ee]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gr(de,ae,ne,fe,xe,be=!1,Ce=0){const _e=fe.length,Ee=[ae[0],de.length/ae[0]],Le=Ee[1],s=_e>0?xe[_e-1]+1:0;if(s<0)throw new Error(u.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const o=ae.slice();o[0]=s;const m=o.reduce((Me,Ke)=>Me*Ke,1),$=u.D5U.getArrayFromDType(ne,m);if(_e===0)return s>0&&$.fill(Ce),[$,o];if(s<=0)throw new Error(u.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let O=0,L=1,U=0,ue=xe[O];for(;;){let Me=0;if(L<_e){if(Me=xe[L],ue===Me){++L;continue}if(ue>=Me)throw new Error(u.Wap.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(ue<0||ue>=s)throw new Error(u.Wap.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(ue,s));ue>U&&$.fill(Ce,U*Le,ue*Le);for(let Ke=O;Ke<L;++Ke){const Ze=fe[Ke];if(Ze<0||Ze>=Ee[0])throw new Error(u.Wap.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(Ke,fe[Ke],Ee[0]));for(let tt=0;tt<Le;tt++)$[ue*Le+tt]+=de[Ze*Le+tt]}if(be)for(let Ke=0;Ke<Le;Ke++)$[ue*Le+Ke]/=L-O;if(O=L,++L,U=ue+1,ue=Me,L>_e)break}return U<s&&$.fill(Ce,U*Le,s*Le),[$,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs=re(de=>Math.sqrt(de)),Ur=p(u.FKq,de=>Math.sqrt(de)),yr=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tn=x((de,ae)=>{const ne=de-ae;return ne*ne}),qt=Ve(u._tC,tn),Vr=null;/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fs=re((de,ae)=>{const{pattern:ne,replaceGlobal:fe,rewrite:xe}=ae;return de.replace(new RegExp(ne,fe?"g":""),xe)}),Wr=Se(u.e0R,fs),dn=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ts(de,ae,ne,fe){const xe=(0,u.f3b)(de,ae.dtype);for(let be=0;be<xe.size;be++){const Ce=xe.indexToLoc(be),_e=new Array(Ce.length);for(let Ee=0;Ee<_e.length;Ee++)_e[Ee]=Ce[Ee]*ne[Ee]+fe[Ee];xe.set(ae.get(..._e),...Ce)}return xe}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gs{constructor(ae,ne,fe,xe,be,Ce){this.separator=u.D5U.encodeString(ae),this.nGramWidths=ne,this.leftPad=u.D5U.encodeString(fe),this.rightPad=u.D5U.encodeString(xe),this.padWidth=be,this.preserveShort=Ce}getPadWidth(ae){return Math.min(this.padWidth<0?ae-1:this.padWidth,ae-1)}getNumNGrams(ae,ne){const fe=this.getPadWidth(ne);return Math.max(0,ae+2*fe-ne+1)}createNGrams(ae,ne,fe,xe,be,Ce){for(let _e=0;_e<be;++_e){const Ee=this.getPadWidth(Ce),Le=Math.max(0,Ee-_e),i=Math.max(0,Ee-(be-(_e+1))),s=Ce-(Le+i),o=ne+(Le>0?0:_e-Ee);let m=0;m+=Le*this.leftPad.length;for(let ue=0;ue<s;++ue)m+=ae[o+ue].length;m+=i*this.rightPad.length;const $=Le+i+s-1;m+=$*this.separator.length,fe[xe+_e]=new Uint8Array(m);const O=fe[xe+_e];let L=0;const U=ue=>ue.forEach(Me=>O[L++]=Me);for(let ue=0;ue<Le;++ue)U(this.leftPad),U(this.separator);for(let ue=0;ue<s-1;++ue)U(ae[o+ue]),U(this.separator);if(s>0){U(ae[o+s-1]);for(let ue=0;ue<i;++ue)U(this.separator),U(this.rightPad)}else{for(let ue=0;ue<i-1;++ue)U(this.rightPad),U(this.separator);U(this.rightPad)}}}compute(ae,ne){const fe=ae.length,xe=ne.length;if(xe>0){let Ee=ne[0];if(Ee!==0)throw new Error(`First split value must be 0, got ${Ee}`);for(let Le=1;Le<xe;++Le){let i=ne[Le]>=Ee;if(i=i&&ne[Le]<=fe,!i)throw new Error(`Invalid split value ${ne[Le]}, must be in [${Ee}, ${fe}]`);Ee=ne[Le]}if(Ee!==fe)throw new Error(`Last split value must be data size. Expected ${fe}, got ${Ee}`)}const be=xe-1,Ce=u.D5U.getArrayFromDType("int32",xe);if(fe===0||xe===0){const Ee=new Array(fe);for(let Le=0;Le<=be;++Le)Ce[Le]=0;return[Ee,Ce]}Ce[0]=0;for(let Ee=1;Ee<=be;++Ee){const Le=ne[Ee]-ne[Ee-1];let i=0;this.nGramWidths.forEach(s=>{i+=this.getNumNGrams(Le,s)}),this.preserveShort&&Le>0&&i===0&&(i=1),Ce[Ee]=Ce[Ee-1]+i}const _e=new Array(Ce[be]);for(let Ee=0;Ee<be;++Ee){const Le=ne[Ee];let i=Ce[Ee];if(this.nGramWidths.forEach(s=>{const o=ne[Ee+1]-ne[Ee],m=this.getNumNGrams(o,s);this.createNGrams(ae,Le,_e,i,m,s),i+=m}),this.preserveShort&&i===Ce[Ee]){const s=ne[Ee+1]-ne[Ee];if(s===0)continue;const o=s+2*this.padWidth;this.createNGrams(ae,Le,_e,i,1,o)}}return[_e,Ce]}}function Lt(de,ae,ne,fe,xe,be,Ce,_e){return new Gs(ne,fe,xe,be,Ce,_e).compute(de,ae)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(de,ae,ne,fe){if(!de.length)return;if(ae.length===0){for(let be=0;be<de.length;++be)fe.push(de.subarray(be,be+1));return}if(ae.length===1){const be=ae[0];let Ce=de.indexOf(be);for(;Ce!==-1;){const _e=de.subarray(0,Ce);(!ne||_e.length!==0)&&fe.push(_e),de=de.subarray(Ce+1),Ce=de.indexOf(be)}(!ne||de.length!==0)&&fe.push(de);return}let xe=0;for(let be=0;be<de.length+1;be++)if(be===de.length||ae.indexOf(de[be])!==-1){const Ce=de.subarray(xe,be);(!ne||Ce.length!==0)&&fe.push(Ce),xe=be+1}}function In(de,ae,ne){const fe=de.length,xe=[];let be=0,Ce=0;const _e=new Array(fe);for(let o=0;o<fe;++o){const m=xe.length;es(de[o],ae,ne,xe);const $=xe.length-m;_e[o]=$,be+=$,Ce=Math.max(Ce,$)}const Ee=u.D5U.getArrayFromDType("int32",be*2),Le=new Array(be),i=[fe,Ce];let s=0;for(let o=0;o<fe;++o)for(let m=0;m<_e[o];++m)Ee[s*2]=o,Ee[s*2+1]=m,Le[s]=xe[s],++s;return[Ee,Le,i]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(de,ae){const ne=u.D5U.getArrayFromDType("int32",de.length);for(let fe=0;fe<de.length;++fe)ne[fe]=u.D5U.fingerPrint64(de[fe]).modulo(ae).getLowBitsUnsigned();return ne}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dn=x((de,ae)=>de-ae),Ss=Ge((de,ae,ne,fe)=>({real:de-ne,imag:ae-fe})),ts=Ve(u.Tr8,Dn,Ss),xr=null;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ks(de,ae){const ne=new Array(de.rank);for(let xe=0;xe<ne.length;xe++)ne[xe]=de.shape[xe]*ae[xe];const fe=(0,u.f3b)(ne,de.dtype);for(let xe=0;xe<fe.values.length;++xe){const be=fe.indexToLoc(xe),Ce=new Array(de.rank);for(let Ee=0;Ee<Ce.length;Ee++)Ce[Ee]=be[Ee]%de.shape[Ee];const _e=de.locToIndex(Ce);fe.values[xe]=de.values[_e]}return fe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vt=(de,ae)=>{const ne=ae.value-de.value;return ne===0?de.index-ae.index:ne};function Hn(de,ae,ne=0,fe=de.length-1){for(;fe>ne;){if(fe-ne>600){const _e=fe-ne+1,Ee=ae-ne+1,Le=Math.log(_e),i=.5*Math.exp(2*Le/3),s=.5*Math.sqrt(Le*i*(_e-i)/_e)*Math.sign(Ee-_e/2),o=Math.max(ne,Math.floor(ae-Ee*i/_e+s)),m=Math.min(fe,Math.floor(ae+(_e-Ee)*i/_e+s));Hn(de,ae,o,m)}const xe=de[ae];let be=ne,Ce=fe;for(u.D5U.swap(de,ne,ae),Vt(de[fe],xe)>0&&u.D5U.swap(de,ne,fe);be<Ce;){for(u.D5U.swap(de,be,Ce),be++,Ce--;Vt(de[be],xe)<0;)be=be+1;for(;Vt(de[Ce],xe)>0;)Ce=Ce-1}Vt(de[ne],xe)===0?u.D5U.swap(de,ne,Ce):(Ce=Ce+1,u.D5U.swap(de,Ce,fe)),Ce<=ae&&(ne=Ce+1),ae<=Ce&&(fe=Ce-1)}}function Hs(de,ae,ne,fe,xe){const be=ae[ae.length-1],[Ce,_e]=[de.length/be,be],Ee=u.D5U.getTypedArrayFromDType(ne,Ce*fe),Le=u.D5U.getTypedArrayFromDType("int32",Ce*fe);for(let s=0;s<Ce;s++){const o=s*_e,m=de.subarray(o,o+_e);let $=new Array(m.length);m.forEach((ue,Me)=>$[Me]={value:ue,index:Me}),fe<$.length&&(Hn($,fe),$=$.slice(0,fe)),xe&&$.sort(Vt);const O=s*fe,L=Ee.subarray(O,O+fe),U=Le.subarray(O,O+fe);for(let ue=0;ue<fe;ue++)L[ue]=$[ue].value,U[ue]=$[ue].index}const i=ae.slice();return i[i.length-1]=fe,[(0,u.f3b)(i,ne,Ee),(0,u.f3b)(i,"int32",Le)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(de,ae,ne,fe,xe){const be=ae.length,Ce=u.D5U.sizeFromShape(ae),_e=u.D5U.computeStrides(ae),Ee=u.D5U.computeStrides(xe),Le=u.D5U.getTypedArrayFromDType(ne,u.D5U.sizeFromShape(xe));for(let i=0;i<Ce;++i){const s=u.D5U.indexToLoc(i,be,_e),o=new Array(s.length);for(let $=0;$<o.length;$++)o[$]=s[fe[$]];const m=u.D5U.locToIndex(o,be,Ee);Le[m]=de[i]}return Le}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function js(de,ae,ne,fe){const xe=u.D5U.parseAxisParam(ae,ne)[0],be=[1,ne[0],1];for(let $=0;$<xe;$++)be[0]*=ne[$];be[1]=ne[xe];for(let $=xe+1;$<ne.length;$++)be[2]*=ne[$];const Ce=new Map,_e=new Int32Array(ne[xe]),Ee=new u.YDk(be,fe,de),Le=[],i=be[0]===1&&be[2]===1;for(let $=0;$<ne[xe];$++){let O;if(i)O=de[$].toString();else{const U=[];for(let ue=0;ue<be[0];ue++)for(let Me=0;Me<be[2];Me++)U.push(Ee.get(ue,$,Me));O=U.join(",")}const L=Ce.get(O);if(L!=null)_e[$]=L;else{const U=Ce.size;Ce.set(O,U),_e[$]=U,Le.push($)}}const s=be.slice();s[1]=Ce.size;const o=new u.YDk(s,fe);Le.forEach(($,O)=>{for(let L=0;L<be[0];L++)for(let U=0;U<be[2];U++)o.set(Ee.get(L,$,U),L,O,U)});const m=ne.slice();return m[xe]=s[1],{outputValues:o.values,outputShape:m,indices:_e}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},8053:function(st,ke,S){"use strict";var u=S(5924);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const he={},R={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function W(n){delete he[n]}function x(n,e){he[n]=e}function I(n,e){if(!(n in he)||e!=null){const r=V(n,e);if(r!==null)he[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=he[n];return t==null||t.isContextLost()?(delete he[n],I(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),he[n])}function Y(n){if(!(0,u.OBj)().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function V(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??Y(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete he[n]},!1),(0,u.OBj)().getBool("SOFTWARE_WEBGL_ENABLED")&&(R.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",R)||t.getContext("experimental-webgl",R):t.getContext("webgl2",R)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var se;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(se||(se={}));var J;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(J||(J={}));var D;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(D||(D={}));function b(n,e){return[e,n]}function te(n,e){return n*e}function ge(n,e){return[e*4,n]}function $e(n){const e=u.D5U.sizeFromShape(n),t=Math.ceil(e/4);return u.D5U.sizeToSquarishShape(t)}function Fe(n,e){if(n%e!==0)throw new Error(`unpackedSize (${n}) must be a multiple of ${e}`);return n/e}function Ve(n,e,t){const r=n.length*t/4;if(e.length<r)throw new Error(`matrix length (${e.length}) must be >= ${r}`);let a=0;for(let l=0;l<n.length;l+=4)for(let c=0;c<t;c++)e[a++]=n[l+c]}function Ge(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function qe(n,e){const[t,r]=Ge(n,e);return t*r*4}function He(n,e){const t=n;let r,a,l,c,g,f,E,T,A,B;return(0,u.OBj)().getNumber("WEBGL_VERSION")===2?(r=t.R32F,a=t.R16F,l=t.RGBA16F,c=t.RGBA32F,g=t.RED,E=4,T=1,A=t.HALF_FLOAT,B=t.FLOAT,f=t.RGBA8):(r=n.RGBA,a=n.RGBA,l=n.RGBA,c=t.RGBA,g=n.RGBA,E=4,T=4,A=e!=null?e.HALF_FLOAT_OES:null,B=n.FLOAT,f=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:l,internalFormatPackedFloat:c,textureFormatFloat:g,downloadTextureFormat:f,downloadUnpackNumChannels:E,defaultNumChannels:T,textureTypeHalfFloat:A,textureTypeFloat:B}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j(n,e){const t=e();return(0,u.OBj)().getBool("DEBUG")&&ye(n),t}function ye(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+C(n,e))}const z=596e-10,N=65504;function P(n){return!!((0,u.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||z<Math.abs(n)&&Math.abs(n)<N)}function C(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Z(n,e){return ot(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function re(n,e){const t=ot(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(j(n,()=>n.shaderSource(t,e)),j(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function p(n,e){const t=ot(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(j(n,()=>n.shaderSource(t,e)),j(n,()=>n.compileShader(t)),(0,u.OBj)().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw Re(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const Se=/ERROR: [0-9]+:([0-9]+):/g;function Re(n,e){const t=Se.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],a=n.split(`
`),l=a.length.toString().length+2,c=a.map((A,B)=>u.D5U.rightPad((B+1).toString(),l)+A);let g=0;for(let A=0;A<c.length;A++)g=Math.max(c[A].length,g);const f=c.slice(0,r-1),E=c.slice(r-1,r),T=c.slice(r);console.log(f.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${u.D5U.rightPad(E[0],g)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(T.join(`
`))}function M(n){return ot(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function ee(n,e){if(j(n,()=>n.linkProgram(e)),!(0,u.OBj)().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function k(n,e){if(j(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function X(n,e){const t=ot(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return j(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),j(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function H(n,e){const t=ot(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return j(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),j(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function we(){return env().getNumber("WEBGL_VERSION")===2?1:4}function Pe(n){return ot(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function Ye(n,e){const t=(0,u.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,a=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function Oe(n){return ot(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function me(n,e,t,r,a,l,c){const g=n.getAttribLocation(e,t);return g===-1?!1:(j(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),j(n,()=>n.vertexAttribPointer(g,a,n.FLOAT,!1,l,c)),j(n,()=>n.enableVertexAttribArray(g)),!0)}function Ue(n,e,t){bt(n,t),j(n,()=>n.activeTexture(n.TEXTURE0+t)),j(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function je(n,e){bt(n,e),j(n,()=>n.activeTexture(n.TEXTURE0+e)),j(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function at(n,e,t){return ot(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function rt(n,e,t){return n.getUniformLocation(e,t)}function Qe(n,e,t,r){j(n,()=>Ue(n,e,r)),j(n,()=>n.uniform1i(t,r))}function mt(n){j(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,null)),j(n,()=>n.viewport(0,0,n.canvas.width,n.canvas.height)),j(n,()=>n.scissor(0,0,n.canvas.width,n.canvas.height))}function yt(n,e,t){j(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),j(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function oe(n,e){j(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),j(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Be(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Xe(n,e))}function Xe(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function ot(n,e,t){const r=j(n,()=>e());if(r==null)throw new Error(t);return r}function bt(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const a=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${a}.`)}}function Ct(n,e=2){return u.D5U.sizeFromShape(n.slice(0,n.length-e))}function It(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Ot(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Ct(n),...It(n)]),e}function zt(n,e=!1){let t=(0,u.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=(0,u.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&(0,u.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((g,f)=>f>=n.length-2?u.D5U.nearestLargerEven(n[f]):n[f]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=u.D5U.squeezeShape(n).newShape);let a=u.D5U.sizeFromShape(n),l=null;n.length<=1&&a<=t?l=[1,a]:n.length===2&&n[0]<=t&&n[1]<=t?l=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?l=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?l=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?l=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(l=[n[0],n[1]*n[2]*n[3]]);const c=l!=null&&Math.max(...l)>r&&Math.min(...l)<=(e?2:1)&&Math.min(...l)>0;if(l==null||c)if(e){const g=Ct(n);let f=2,E=2;n.length&&([f,E]=It(n)),a=g*(f/2)*(E/2),l=u.D5U.sizeToSquarishShape(a).map(T=>T*2)}else l=u.D5U.sizeToSquarishShape(a);return l}function Yt(n){return n%2===0}function ln(n,e){if(n=n.slice(-2),e=e.slice(-2),u.D5U.arraysEqual(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||Yt(t)&&Yt(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Yt(n[0])&&Yt(e[0])}let cn,mn;function Qn(n){if(cn==null){const e=I(n);cn=e.getParameter(e.MAX_TEXTURE_SIZE)}return cn}function ls(){cn=null}function cs(){mn=null}function kn(n){if(mn==null){const e=I(n);mn=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,mn)}function zn(n){if(n===0)return 0;let e;const t=I(n);return an(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:an(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function an(n,e){return n.getExtension(e)!=null}function Pn(n){try{if(I(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Fn(n){if(n===0)return!1;const e=I(n);if(n===1){if(!an(e,"OES_texture_float"))return!1}else if(!an(e,"EXT_color_buffer_float"))return!1;return Bn(e)}function qn(n){if(n===0)return!1;const e=I(n);if(n===1){if(!an(e,"OES_texture_float")||!an(e,"WEBGL_color_buffer_float"))return!1}else{if(an(e,"EXT_color_buffer_float"))return Bn(e);const r="EXT_color_buffer_half_float";if(an(e,r)){const a=e.getExtension(r);return Ie(e,a)}return!1}return Bn(e)}function Bn(n){const e=He(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const l=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,l),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const c=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(l),c}function Ie(n,e){const t=He(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const c=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,c),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const g=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(c),g}function ze(n){return n!==2?!1:I(n).fenceSync!=null}function q(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&u.D5U.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Te=(0,u.OBj)();Te.registerFlag("HAS_WEBGL",()=>Te.getNumber("WEBGL_VERSION")>0),Te.registerFlag("WEBGL_VERSION",()=>Pn(2)?2:Pn(1)?1:0),Te.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Te.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Te.get("WEBGL_VERSION")===2),Te.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Te.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Te.registerFlag("WEBGL_PACK",()=>Te.getBool("HAS_WEBGL")),Te.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_PACK_CLIP",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_PACK_REDUCE",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_LAZILY_UNPACK",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_CONV_IM2COL",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Te.getBool("WEBGL_PACK")),Te.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Qn(Te.getNumber("WEBGL_VERSION"))),Te.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>kn(Te.getNumber("WEBGL_VERSION"))),Te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Te.getNumber("WEBGL_VERSION");return n===0?0:zn(n)}),Te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Te.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!u.C2$.isMobile()),Te.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Fn(Te.getNumber("WEBGL_VERSION"))),Te.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Te.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Te.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Te.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>qn(Te.getNumber("WEBGL_VERSION"))),Te.registerFlag("WEBGL_FENCE_API_ENABLED",()=>ze(Te.getNumber("WEBGL_VERSION"))),Te.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Te.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Te.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),Te.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>u.C2$.isMobile()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),Te.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Te.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Te.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Te.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),Te.registerFlag("WEBGL_EXP_CONV",()=>!1),Te.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Te.getBool("IS_TEST")),Te.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),Te.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),Te.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),Te.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function We(){let n,e,t,r,a,l,c,g,f,E;return(0,u.OBj)().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",a="texture",l="outputColor",c="out vec4 outputColor;",g=(0,u.OBj)().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",f="",E=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",a="texture2D",l="gl_FragColor",c="",g=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,f=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,E=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:a,output:l,defineOutput:c,defineSpecialNaN:g,defineSpecialInf:f,defineRound:E}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(n,e,t="index"){const r=u.D5U.computeStrides(e);return r.map((a,l)=>{const c=`int ${n[l]} = ${t} / ${a}`,g=l===r.length-1?`int ${n[l+1]} = ${t} - ${n[l]} * ${a}`:`index -= ${n[l]} * ${a}`;return`${c}; ${g};`}).join("")}function ht(n,e,t="index"){const r=u.D5U.computeStrides(e);return r.map((a,l)=>{const c=`int ${n[l]} = ${t} / outShapeStrides[${l}]`,g=l===r.length-1?`int ${n[l+1]} = ${t} - ${n[l]} * outShapeStrides[${l}]`:`index -= ${n[l]} * outShapeStrides[${l}]`;return`${c}; ${g};`}).join("")}function vt(n,e){const t=n.length,r=n.map(l=>`${e}[${l}]`),a=new Array(t-1);a[t-2]=r[t-1];for(let l=t-3;l>=0;--l)a[l]=`(${a[l+1]} * ${r[l+1]})`;return a}function Qt(n,e,t="index"){const r=n.map((l,c)=>c),a=vt(r,e);return a.map((l,c)=>{const g=`int ${n[c]} = ${t} / ${a[c]}`,f=c===a.length-1?`int ${n[c+1]} = ${t} - ${n[c]} * ${a[c]}`:`index -= ${n[c]} * ${a[c]}`;return`${g}; ${f};`}).join("")}function Gt(n){return n.length===1?`${n[0]}`:`vec${n.length}(${n.join(",")})`}function xn(n,e){if(n.length!==e.length)throw new Error(`Vectors to be dotted must be of the same length -got ${n.length} and ${e.length}`);const t=[],r=Math.floor(n.length/4),a=n.length%4;for(let l=0;l<r;l++){const c=n.slice(l*4,l*4+4),g=e.slice(l*4,l*4+4);t.push(`${Gt(c)}, ${Gt(g)}`)}if(a!==0){let l=n.slice(r*4),c=e.slice(r*4);l.length===1&&(l=l.map(g=>`float(${g})`),c=c.map(g=>`float(${g})`)),t.push(`${Gt(l)}, ${Gt(c)}`)}return t.map((l,c)=>`dot(${l})`).join("+")}function Tt(n){const e=u.D5U.computeStrides(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Ft(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const en=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:ds}=u.Wap;function ir(n,e,t){const r=[];if(n.forEach(K=>{const Q=u.D5U.sizeFromShape(K.shapeInfo.logicalShape);if(K.shapeInfo.isUniform?r.push(`uniform float ${K.name}${Q>1?`[${Q}]`:""};`):(r.push(`uniform sampler2D ${K.name};`),r.push(`uniform int offset${K.name};`)),t.enableShapeUniforms){const{uniformShape:ce}=es(t.packedInputs,K.shapeInfo.logicalShape,K.shapeInfo.texShape);switch(ce.length){case 1:r.push(`uniform int ${K.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${K.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${K.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${K.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${K.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(K=>{r.push(`uniform ${K.type} ${K.name}${K.arrayIndex?`[${K.arrayIndex}]`:""};`)});const a=r.join(`
`),l=n.map(K=>ur(K,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),c=e.texShape,g=We(),f=Bs(g);let E,T,A=Zn(g);return e.isPacked?(E=vs(e.logicalShape,c,t.enableShapeUniforms),T=lr(g)):(E=Es(e.logicalShape,c,t.enableShapeUniforms),T=Ls(g)),t.packedInputs&&(A+=Vs),[A,f,T,a,E,l,t.userCode].join(`
`)}function Ln(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return mr(n,e);case 1:return gr(n,e);case 2:return Ur(n,e);case 3:return tn(n,e);case 4:return Vr(n,e);case 5:return fs(n);case 6:return Wr(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Gn(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return fr(n);case 1:return hs(n,e);case 2:return zs(n,e);case 3:return yr(n,e);default:return qt(n,e)}}function ur(n,e,t=!1,r){let a="";t?a+=Gn(n,r):a+=Ln(n,r);const l=n.shapeInfo.logicalShape,c=e.logicalShape;return l.length<=c.length&&(t?a+=Ts(n,e):a+=Gs(n,e)),a}function vs(n,e,t){switch(n.length){case 0:return ps();case 1:return cr(n,e,t);case 2:return Lr(n,e,t);case 3:return ws(n,e,t);default:return Br(n,e,t)}}function Es(n,e,t){switch(n.length){case 0:return ps();case 1:return Ws(n,e,t);case 2:return Cs(n,e,t);case 3:return dr(n,e,t);case 4:return Ms(n,e,t);case 5:return pr(n,e);case 6:return hr(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function Bs(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function Ls(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function lr(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function Zn(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Us}
    ${gn}
    ${Jn}
  `}const Us=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gn=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Jn=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Vs=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function ps(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function cr(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function Ws(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function ws(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(n[2]/2),l=a*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${l};
      index -= b * ${l};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function dr(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ht(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=ct(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function Br(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(n[n.length-1]/2),l=a*Math.ceil(n[n.length-2]/2);let c=l,g="",f="b, r, c";for(let E=2;E<n.length-1;E++)c*=n[n.length-E-1],g=`
      int b${E} = index / ${c};
      index -= b${E} * ${c};
    `+g,f=`b${E}, `+f;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${g}

      int b = index / ${l};
      index -= b * ${l};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${n.length}(${f});
    }
  `}function Ms(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ht(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=ct(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function pr(n,e){const t=ct(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function hr(n,e){const t=ct(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Lr(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(u.D5U.arraysEqual(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const a=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function Cs(n,e,t){return u.D5U.arraysEqual(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Kn(n){return`offset${n}`}function fr(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=We();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function mr(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[a,l]=n.shapeInfo.texShape;if(a===1&&l===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const c=Kn(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${c});
      return sampleTexture(${t}, uv);
    }
  `;const[g,f]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${g}, ${f}, ${c});
      return sampleTexture(${t}, uv);
    }
  `}function hs(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),a=n.shapeInfo.texShape,l=We();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${l.texture2D}(${t}, uv);
    }
  `;const c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${c[0]}, ${c[1]}, index);
      return ${l.texture2D}(${t}, uv);
    }
  `}function gr(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${dn(n)}
      }
    `;const a=n.shapeInfo.texShape,l=a[0],c=a[1];if(c===1&&l===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const g=Kn(t);return c===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${g}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${g}) + 0.5) / ${l}.0);
        return sampleTexture(${t}, uv);
      }
    `:l===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${g}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${g}) + 0.5) / ${c}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${g});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${l}, ${c}, index + ${g});
      return sampleTexture(${t}, uv);
    }
  `}function zs(n,e){const t=n.shapeInfo.logicalShape,r=n.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),l=n.shapeInfo.texShape,c=l[0],g=l[1],f=We();if(l!=null&&u.D5U.arraysEqual(t,l))return e?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${f.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${g}.0, ${c}.0);

        return ${f.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${f.texture2D}(${r}, uv);
    }
  `;const E=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],T=Math.ceil(t[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${T}, ${E[0]}, ${E[1]}, row, col);
      return ${f.texture2D}(${r}, uv);
    }
  `}function Ur(n,e){const t=n.shapeInfo.logicalShape,r=n.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),l=n.shapeInfo.texShape;if(l!=null&&u.D5U.arraysEqual(t,l)){if(e)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const B=l[0],K=l[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${K}.0, ${B}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:c,keptDims:g}=u.D5U.squeezeShape(t),f=c;if(f.length<t.length){const B=In(n,f),K=["row","col"];return`
      ${Ln(B,e)}
      float ${a}(int row, int col) {
        return ${a}(${_n(K,g)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${dn(n)}
      }
    `;const E=l[0],T=l[1],A=Kn(r);return T===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${A}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${A}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${E}.0);
      return sampleTexture(${r}, uv);
    }
  `:E===1?e?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${A}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${A}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${T}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${A};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${A};
    vec2 uv = uvFromFlat(${E}, ${T}, index);
    return sampleTexture(${r}, uv);
  }
`}function yr(n,e){const t=n.shapeInfo.logicalShape,r=n.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),l=n.shapeInfo.texShape,c=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];if(t[0]===1){const B=t.slice(1),K=[1,2],Q=In(n,B),ce=["b","row","col"];return`
        ${Gn(Q,e)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${_n(ce,K)});
        }
      `}const g=We();if(e)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${g.texture2D}(${r}, uv);
    }
  `;const f=c[0],E=c[1],T=Math.ceil(t[2]/2),A=T*Math.ceil(t[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${f}, ${E}, ${A}, ${T}, b, row, col);
      return ${g.texture2D}(${r}, uv);
    }
  `}function tn(n,e){const t=n.shapeInfo.logicalShape,r=n.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),l=t[1]*t[2],c=t[2],{newShape:g,keptDims:f}=u.D5U.squeezeShape(t),E=g;if(E.length<t.length){const ce=In(n,E),ve=["row","col","depth"];return`
        ${Ln(ce,e)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${_n(ve,f)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${l}, ${c}, 1)));
        ${dn(n)}
      }
    `;const T=n.shapeInfo.texShape,A=T[0],B=T[1],K=n.shapeInfo.flatOffset;if(B===l&&K==null)return e?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${c}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${B}.0, ${A}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(B===c&&K==null)return e?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${B}.0, ${A}.0);
      return sampleTexture(${r}, uv);
    }
  `;const Q=Kn(r);return e?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${Q};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${l} + col * ${c} + depth + ${Q};
        vec2 uv = uvFromFlat(${A}, ${B}, index);
        return sampleTexture(${r}, uv);
      }
  `}function qt(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),a=We();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${t}, uv);
    }
  `;const l=n.shapeInfo.logicalShape,c=l.length,g=n.shapeInfo.texShape,f=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)],E=f[0],T=f[1],A=Math.ceil(l[c-1]/2);let B=A*Math.ceil(l[c-2]/2),K="int b, int row, int col",Q=`b * ${B} + (row / 2) * ${A} + (col / 2)`;for(let ce=2;ce<c-1;ce++)K=`int b${ce}, `+K,B*=l[c-ce-1],Q=`b${ce} * ${B} + `+Q;return`
    vec4 ${r}(${K}) {
      int index = ${Q};
      int texR = index / ${T};
      int texC = index - texR * ${T};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${T}, ${E});
      return ${a.texture2D}(${t}, uv);
    }
  `}function Vr(n,e){const t=n.shapeInfo.logicalShape,r=n.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),l=t[3],c=t[2]*l,g=t[1]*c,{newShape:f,keptDims:E}=u.D5U.squeezeShape(t);if(f.length<t.length){const Ne=In(n,f),et=["row","col","depth","depth2"];return`
      ${Ln(Ne,e)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${_n(et,E)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${g}, ${c}, ${l}, 1)));
        ${dn(n)}
      }
    `;const T=n.shapeInfo.flatOffset,A=n.shapeInfo.texShape,B=A[0],K=A[1],Q=`int stride2 = ${r}Shape[3];`,ce=`int stride1 = ${r}Shape[2] * stride2;`,ve=`int stride0 = ${r}Shape[1] * stride1;`;if(K===g&&T==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${Q}
        ${ce}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${c}, ${l}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${K}.0, ${B}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(K===l&&T==null)return e?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${K}.0, ${B}.0);
        return sampleTexture(${r}, uv);
      }
    `;const le=Kn(r);return e?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${Q}
      ${ce}
      ${ve}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${le});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${g} + col * ${c} +
          depth * ${l} + depth2;
      vec2 uv = uvFromFlat(${B}, ${K}, index + ${le});
      return sampleTexture(${r}, uv);
    }
  `}function fs(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),a=e[4],l=e[3]*a,c=e[2]*l,g=e[1]*c,{newShape:f,keptDims:E}=u.D5U.squeezeShape(e);if(f.length<e.length){const ce=In(n,f),ve=["row","col","depth","depth2","depth3"];return`
      ${Ln(ce)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${_n(ve,E)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${g}, ${c}, ${l}, ${a})) +
          depth3;
        ${dn(n)}
      }
    `;const T=n.shapeInfo.flatOffset,A=n.shapeInfo.texShape,B=A[0],K=A[1];if(K===g&&T==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${c}, ${l}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${K}.0, ${B}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(K===a&&T==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${K}.0, ${B}.0);
        return sampleTexture(${t}, uv);
      }
    `;const Q=Kn(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${g} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 + ${Q};
      vec2 uv = uvFromFlat(${B}, ${K}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Wr(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:a,keptDims:l}=u.D5U.squeezeShape(e);if(a.length<e.length){const ve=In(n,a),le=["row","col","depth","depth2","depth3","depth4"];return`
      ${Ln(ve)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${_n(le,l)});
      }
    `}const c=e[5],g=e[4]*c,f=e[3]*g,E=e[2]*f,T=e[1]*E;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${T}, ${E}, ${f}, ${g})) +
          dot(
            vec2(depth3, depth4),
            vec2(${c}, 1)));
        ${dn(n)}
      }
    `;const A=n.shapeInfo.flatOffset,B=n.shapeInfo.texShape,K=B[0],Q=B[1];if(Q===T&&A==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${E}, ${f}, ${g}, ${c})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${Q}.0, ${K}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(Q===c&&A==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${Q}.0, ${K}.0);
        return sampleTexture(${t}, uv);
      }
    `;const ce=Kn(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${T} + col * ${E} + depth * ${f} +
          depth2 * ${g} + depth3 * ${c} + depth4 + ${ce};
      vec2 uv = uvFromFlat(${K}, ${Q}, index);
      return sampleTexture(${t}, uv);
    }
  `}function dn(n){const e=n.name,t=u.D5U.sizeFromShape(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Ts(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),a="get"+r+"AtOutCoords",l=n.shapeInfo.logicalShape.length,c=e.logicalShape.length,g=ds(n.shapeInfo.logicalShape,e.logicalShape),f=Lt(c),E=c-l;let T;const A=["x","y","z","w","u","v"];l===0?T="":c<2&&g.length>=1?T="coords = 0;":T=g.map(Ne=>`coords.${A[Ne+E]} = 0;`).join(`
`);let B="";c<2&&l>0?B="coords":B=n.shapeInfo.logicalShape.map((Ne,et)=>`coords.${A[et+E]}`).join(", ");let K="return outputValue;";const ce=u.D5U.sizeFromShape(n.shapeInfo.logicalShape)===1,le=u.D5U.sizeFromShape(e.logicalShape)===1;if(l===1&&!ce&&!le)K=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(ce&&!le)c===1?K=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:K=`
        return vec4(outputValue.x);
      `;else if(g.length){const Ne=l-2,et=l-1;g.indexOf(Ne)>-1&&g.indexOf(et)>-1?K="return vec4(outputValue.x);":g.indexOf(Ne)>-1?K="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":g.indexOf(et)>-1&&(K="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${f} coords = getOutputCoords();
      ${T}
      vec4 outputValue = get${r}(${B});
      ${K}
    }
  `}function Gs(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),a="get"+r+"AtOutCoords",l=e.texShape,c=n.shapeInfo.texShape,g=n.shapeInfo.logicalShape.length,f=e.logicalShape.length;if(!n.shapeInfo.isUniform&&g===f&&n.shapeInfo.flatOffset==null&&u.D5U.arraysEqual(c,l))return`
      float ${a}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const E=Lt(f),T=ds(n.shapeInfo.logicalShape,e.logicalShape),A=f-g;let B;const K=["x","y","z","w","u","v"];g===0?B="":f<2&&T.length>=1?B="coords = 0;":B=T.map(ce=>`coords.${K[ce+A]} = 0;`).join(`
`);let Q="";return f<2&&g>0?Q="coords":Q=n.shapeInfo.logicalShape.map((ce,ve)=>`coords.${K[ve+A]}`).join(", "),`
    float ${a}() {
      ${E} coords = getOutputCoords();
      ${B}
      return get${r}(${Q});
    }
  `}function Lt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function es(n,e,t){const{newShape:r,keptDims:a}=u.D5U.squeezeShape(e),l=e.length,c=n&&l===3&&e[0]===1,g=c?e.slice(1):r,f=!n&&l>1&&!u.D5U.arraysEqual(e,t)&&r.length<l||c;return{useSqueezeShape:f,uniformShape:f?g:e,keptDims:a}}function In(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function _n(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(n,e,t,r){const a=t.map((T,A)=>{const B={logicalShape:T.shape,texShape:T.isUniform?null:T.texData.texShape,isUniform:T.isUniform,isPacked:T.isUniform?!1:T.texData.isPacked,flatOffset:null};return T.texData!=null&&T.texData.slice!=null&&T.texData.slice.flatOffset>0&&(B.flatOffset=T.texData.slice.flatOffset),{name:e.variableNames[A],shapeInfo:B}}),l=a.map(T=>T.shapeInfo),c={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},g=ir(a,c,e),f=p(n.gl,g),E=n.createProgram(f);return(0,u.OBj)().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:f,source:g,webGLProgram:E,inShapeInfos:l,outShapeInfo:c,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(E),Object.assign({program:e,fragmentShader:f,source:g,webGLProgram:E,inShapeInfos:l,outShapeInfo:c},Ss(n,e,E)))}function Ss(n,e,t){const r=[],a=[];let l,c,g,f=null,E=null;E=n.getUniformLocation(t,"NAN",!1),(0,u.OBj)().getNumber("WEBGL_VERSION")===1&&(f=n.getUniformLocation(t,"INFINITY",!1));const T=!1;for(const A of e.variableNames){const B={name:A,uniform:n.getUniformLocation(t,A,T),offset:n.getUniformLocation(t,`offset${A}`,T)};e.enableShapeUniforms&&(B.shape=n.getUniformLocation(t,`${A}Shape`,T),B.texShape=n.getUniformLocation(t,`${A}TexShape`,T)),r.push(B)}if(e.enableShapeUniforms&&(l=n.getUniformLocation(t,"outShape",T),g=n.getUniformLocation(t,"outShapeStrides",T),c=n.getUniformLocation(t,"outTexShape",T)),e.customUniforms)for(const A of e.customUniforms)a.push(n.getUniformLocation(t,A.name,T));return{variablesLocations:r,customUniformLocations:a,infLoc:f,nanLoc:E,outShapeLocation:l,outShapeStridesLocation:g,outTexShapeLocation:c}}function ts(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const a=t.logicalShape,l=e[r],c=l.shape;if(!u.D5U.arraysEqual(a,c))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${c} must match`);if(t.isUniform&&l.isUniform)return;const g=t.texShape,f=l.isUniform?null:l.texData.texShape;if(!u.D5U.arraysEqual(g,f))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${g} and ${f} must match`)})}function xr(n,e,t,r,a){e.program.enableShapeUniforms||(ts(e.inShapeInfos,t),ts([e.outShapeInfo],[r]));const l=r.texData.texture,c=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(l.texture,c[0],c[1]):n.setOutputMatrixTexture(l.texture,c[0],c[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),(0,u.OBj)().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let f=0;f<t.length;++f){const E=t[f],{uniform:T,offset:A,shape:B,texShape:K}=e.variablesLocations[f];if(B){const{uniformShape:Q}=es(e.program.packedInputs,E.shape,E.texData.texShape);switch(Q.length){case 1:n.gl.uniform1iv(B,new Int32Array(Q));break;case 2:n.gl.uniform2iv(B,new Int32Array(Q));break;case 3:n.gl.uniform3iv(B,new Int32Array(Q));break;case 4:n.gl.uniform4iv(B,new Int32Array(Q));break;default:break}}if(K&&n.gl.uniform2i(K,E.texData.texShape[0],E.texData.texShape[1]),T!=null){if(E.isUniform){if(u.D5U.sizeFromShape(E.shape)<2)n.gl.uniform1f(T,E.uniformValues[0]);else{let Q=E.uniformValues;Q instanceof Float32Array||(Q=new Float32Array(Q)),n.gl.uniform1fv(T,Q)}continue}E.texData.slice!=null&&A!=null&&n.gl.uniform1i(A,E.texData.slice.flatOffset),n.setInputMatrixTexture(E.texData.texture.texture,T,f)}}const g=e.outShapeLocation;if(g)switch(r.shape.length){case 1:n.gl.uniform1iv(g,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(g,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(g,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(g,new Int32Array(r.shape));break;default:break}if(e.outShapeStridesLocation){const f=u.D5U.computeStrides(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(f));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(f));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(f));break;default:break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&a)for(let f=0;f<e.program.customUniforms.length;++f){const E=e.program.customUniforms[f],T=e.customUniformLocations[f],A=a[f];if(E.type==="float")n.gl.uniform1fv(T,A);else if(E.type==="vec2")n.gl.uniform2fv(T,A);else if(E.type==="vec3")n.gl.uniform3fv(T,A);else if(E.type==="vec4")n.gl.uniform4fv(T,A);else if(E.type==="int")n.gl.uniform1iv(T,A);else if(E.type==="ivec2")n.gl.uniform2iv(T,A);else if(E.type==="ivec3")n.gl.uniform3iv(T,A);else if(E.type==="ivec4")n.gl.uniform4iv(T,A);else throw Error(`uniform type ${E.type} is not supported yet.`)}n.executeProgram()}function Ks(n,e,t){let r="";e.concat(t).forEach(c=>{const g=c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!c.isUniform){const f=c.texData.texShape,{useSqueezeShape:E,uniformShape:T,keptDims:A}=es(n.packedInputs,c.shape,f);let B="",K="",Q="";if(T.length===1&&n.packedInputs){const lt=[Math.ceil(f[0]/2),Math.ceil(f[1]/2)];B=`${lt[0]>1}_${lt[1]>1}`}else if(T.length===2&&!n.packedInputs)K=`${T[0]>1}_${T[1]>1}`;else if(T.length>2&&!n.packedInputs){const lt=u.D5U.computeStrides(T);Q=`${lt[0]===f[1]}_${lt[lt.length-1]===f[1]}`}const ce=c.shape.length,ve=T.length===2&&u.D5U.arraysEqual(c.shape,f),le=u.D5U.sizeFromShape(c.shape)===1,Ne=u.Wap.getBroadcastDims(c.shape,t.shape),et=!n.packedInputs&&ce===t.shape.length&&u.D5U.arraysEqual(f,t.texData.texShape),Je=n.packedInputs||T.length>2?"":`${f[0]>1}_${f[1]>1}`;r+=`${ce}_${et}_${E?A:""}_${T.length}_${le}_${Ne}_${ve}_${B}_${K}_${Q}_${Je}_${g}`}else{const f=c.isUniform?"uniform":c.texData.texShape;r+=`${c.shape}_${f}_${g}`}});const a=n.userCode;let l=n.constructor.name;return l+="_"+r+"_"+a+`${(0,u.OBj)().getNumber("WEBGL_VERSION")}`,l}function Vt(n){return(0,u.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hn{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=se.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=We();this.outputShape=e,this.enableShapeUniforms=Vt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ht(["r","c","d"],e):ct(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hs{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=se.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=We();this.outputShape=e,this.enableShapeUniforms=Vt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ht(["r","c","d"],e):ct(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pn{constructor(e){this.variableNames=["A"],this.outTexUsage=J.DOWNLOAD;const t=We();this.outputShape=e,this.userCode=`
      ${en}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class js{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=J.DOWNLOAD;const t=We();this.outputShape=e,this.userCode=`
      ${en}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const de={R:0,G:1,B:2,A:3};class ae{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=We();this.outputShape=e,this.enableShapeUniforms=Vt(this.outputShape.length);let l="result";t&&(l="floor(result * 255. + 0.5)");let c="";for(let g=0;g<r.length;g++){const f=r[g];c+=`
          if(offset == ${g}) {
            result = values[${de[f]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Ft():Tt(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${c}
        }
        ${a.output} = vec4(${l}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ne{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=We();this.outputShape=e,this.enableShapeUniforms=Vt(this.outputShape.length);let a="",l="result";t&&(l="floor(result * 255. + 0.5)");for(let c=0;c<=1;c++)for(let g=0;g<=1;g++){const f=c*2+g;a+=`
          localCoords = coords;
          if(localCoords[2] + ${g} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${g};
          if (localCoords[1] + ${c} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${c};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${f}] = values[0];
            } else if (offset == 1) {
              result[${f}] = values[1];
            } else if (offset == 2) {
              result[${f}] = values[2];
            } else {
              result[${f}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Ft():Tt(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${r.output} = ${l};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(n){const e=We(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return re(n,t)}function xe(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return X(n,e)}function be(n){const e=new Uint16Array([0,1,2,2,1,3]);return H(n,e)}function Ce(n,e,t,r,a,l){Ye(e,t);const c=Pe(n),g=n.TEXTURE_2D;return j(n,()=>n.bindTexture(g,c)),j(n,()=>n.texParameteri(g,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),j(n,()=>n.texParameteri(g,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),j(n,()=>n.texParameteri(g,n.TEXTURE_MIN_FILTER,n.NEAREST)),j(n,()=>n.texParameteri(g,n.TEXTURE_MAG_FILTER,n.NEAREST)),(0,u.OBj)().getNumber("WEBGL_VERSION")===1?j(n,()=>n.texImage2D(g,0,r,e,t,0,a,l,null)):j(n,()=>n.texStorage2D(g,1,r,e,t)),j(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:c,texShape:[t,e]}}function _e(n){return n.internalFormatFloat}function Ee(n,e,t,r){const[a,l]=b(e,t);return Ce(n,a,l,_e(r),r.textureFormatFloat,n.FLOAT)}function Le(n){return n.internalFormatHalfFloat}function i(n,e,t,r){const[a,l]=b(e,t);return Ce(n,a,l,Le(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function s(n){return n.downloadTextureFormat}function o(n,e,t,r){const[a,l]=b(e,t);return Ce(n,a,l,s(r),n.RGBA,n.UNSIGNED_BYTE)}function m(n){return n.internalFormatPackedFloat}function $(n,e,t,r){const[a,l]=Ge(e,t);return Ce(n,a,l,m(r),n.RGBA,n.FLOAT)}function O(n){return n.internalFormatPackedHalfFloat}function L(n,e,t,r){const[a,l]=Ge(e,t);return Ce(n,a,l,O(r),n.RGBA,r.textureTypeHalfFloat)}function U(n,e,t){return j(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),me(n,e,"clipSpacePos",t,3,20,0)&&me(n,e,"uv",t,2,20,12)}function ue(n,e,t,r,a,l){j(n,()=>n.bindTexture(n.TEXTURE_2D,e));let c,g,f;a instanceof Uint8Array?(c=new Uint8Array(t*r*4),g=n.UNSIGNED_BYTE,f=n.RGBA):(c=new Float32Array(t*r*4),g=n.FLOAT,f=l.internalFormatPackedFloat),c.set(a),(0,u.OBj)().getNumber("WEBGL_VERSION")===2?j(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,g,c)):j(n,()=>n.texImage2D(n.TEXTURE_2D,0,f,t,r,0,n.RGBA,g,c)),j(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Me(n,e,t){j(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?(0,u.OBj)().getNumber("WEBGL_VERSION")===2?j(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):j(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):(0,u.OBj)().getNumber("WEBGL_VERSION")===2?j(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):j(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),j(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Ke(n,e,t,r){const a=n.createBuffer();j(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,a));const g=4*4*e*t;return j(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,g,n.STREAM_READ)),j(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),j(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),a}function Ze(n,e,t){const r=n,a=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function tt(n,e,t,r){const[a,l]=b(e,t),c=4,g=new Uint8Array(te(e*t,c));return j(n,()=>n.readPixels(0,0,a,l,r.downloadTextureFormat,n.UNSIGNED_BYTE,g)),new Float32Array(g.buffer)}function ut(n,e,t,r,a,l,c,g){const f=n,E=new Float32Array(qe(l,c));return f.bindBuffer(f.PIXEL_PACK_BUFFER,e),f.getBufferSubData(f.PIXEL_PACK_BUFFER,0,E),f.bindBuffer(f.PIXEL_PACK_BUFFER,null),E}function _t(n,e,t){const r=new Float32Array(e*t*4);return j(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wt{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,u.OBj)().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,x(t,e)):this.gl=I(t),e=this.gl,(0,u.OBj)().getNumber("WEBGL_VERSION")===2){const l=e;this.createVertexArray=()=>j(l,()=>l.createVertexArray()),this.bindVertexArray=c=>j(l,()=>l.bindVertexArray(c)),this.deleteVertexArray=c=>j(l,()=>l.deleteVertexArray(c)),this.getVertexArray=()=>j(l,()=>l.getParameter(l.VERTEX_ARRAY_BINDING))}else if(e!=null){const l=e.getExtension("OES_vertex_array_object");if(l==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>j(e,()=>l.createVertexArrayOES()),this.bindVertexArray=c=>j(e,()=>l.bindVertexArrayOES(c)),this.deleteVertexArray=c=>j(e,()=>l.deleteVertexArrayOES(c)),this.getVertexArray=()=>j(e,()=>e.getParameter(l.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),(0,u.OBj)().getNumber("WEBGL_VERSION")===1){const l="OES_texture_float",c="OES_texture_half_float";if(this.textureFloatExtension=Z(this.gl,l),an(this.gl,c))this.textureHalfFloatExtension=Z(this.gl,c);else if((0,u.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),an(this.gl,a))this.colorBufferHalfFloatExtension=Z(this.gl,a);else if((0,u.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",an(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(an(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=xe(this.gl),this.indexBuffer=be(this.gl),this.framebuffer=Oe(this.gl),this.textureConfig=He(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,u.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;j(e,()=>e.finish()),j(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),j(e,()=>e.deleteFramebuffer(this.framebuffer)),j(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),j(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),j(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Ee(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),i(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),o(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Me(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,a){this.throwIfDisposed(),ue(this.gl,e,t,r,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),L(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),$(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(oe(this.gl,this.framebuffer),this.outputTexture=null),j(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>tt(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,a,l,c){return ut(this.gl,e,t,r,a,l,c,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Ze(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const a=Ke(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if((0,u.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,l=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const c=a.clientWaitSync(l,0,0);return c===a.ALREADY_SIGNALED||c===a.CONDITION_SATISFIED},t=l}else(0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,(0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>_t(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=fe(t));const r=M(t);j(t,()=>t.attachShader(r,this.vertexShader)),j(t,()=>t.attachShader(r,e)),ee(t,r);const a=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&k(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;j(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),U(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(j(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&k(this.gl,this.program),j(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?at(this.gl,e,t):rt(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),j(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),Qe(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[a,l]=Ge(t,r);this.setOutputMatrixTextureDriver(e,a,l)}setOutputMatrixWriteRegion(e,t,r,a){this.setOutputMatrixWriteRegionDriver(r,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,r,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&k(this.gl,this.program),Be(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}j(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),j(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Z(this.gl,(0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if((0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,a=this.getQueryTimerExtensionWebGL2(),l=r.createQuery();return r.beginQuery(a.TIME_ELAPSED_EXT,l),l}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if((0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await u.D5U.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,(0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,(0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,a=this.getQueryTimerExtensionWebGL2(),l=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),l&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),a=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=ft(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in(0,u.OBj)().platform&&(r=(0,u.OBj)().platform.setTimeoutCustom.bind((0,u.OBj)().platform)),u.D5U.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),yt(this.gl,e,this.framebuffer),this.debug&&Be(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(yt(this.gl,this.outputTexture,this.framebuffer),this.debug&&Be(this.gl)):oe(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const a=this.gl;yt(a,e,this.framebuffer),this.debug&&Be(a),this.outputTexture=e,j(a,()=>a.viewport(0,0,t,r)),j(a,()=>a.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,a){this.throwIfDisposed(),j(this.gl,()=>this.gl.scissor(e,t,r,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function ft(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}var St=S(1172);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Kt,bincountImpl:En,bincountReduceImpl:Ut,bitwiseAndImpl:On,castImpl:$s,ceilImpl:Ns,concatImpl:so,equalImpl:ro,expImpl:ao,expm1Impl:oo,floorImpl:uo,gatherNdImpl:lo,gatherV2Impl:Mr,greaterImpl:co,greaterEqualImpl:zr,lessImpl:po,lessEqualImpl:ho,linSpaceImpl:fo,logImpl:mo,maxImpl:Xs,maximumImpl:go,minimumImpl:da,multiplyImpl:jn,negImpl:yo,notEqualImpl:Un,prodImpl:xo,raggedGatherImpl:pa,raggedRangeImpl:bo,raggedTensorToTensorImpl:vo,rangeImpl:Bt,rsqrtImpl:Eo,scatterImpl:wo,sigmoidImpl:Co,simpleAbsImpl:Gr,sliceImpl:To,sparseFillEmptyRowsImpl:br,sparseReshapeImpl:So,sparseSegmentReductionImpl:Kr,sqrtImpl:$o,staticRegexReplaceImpl:ha,stridedSliceImpl:No,stringNGramsImpl:Io,stringSplitImpl:vr,stringToHashBucketFastImpl:_o,subImpl:Hr,tileImpl:Do,topKImpl:Oo,transposeImpl:Er,uniqueImpl:Ro}=St;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fa(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function hn(n,e){return e===1?[n]:fa(n,e)}function Ao(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ko{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Vt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=hn("rc",this.rank),r=Lt(this.rank),a=this.getOutOfBoundsCondition(t),l=this.getSetup(t),c=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${l}

            setOutput(vec4(${c}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let l=`${r===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let c=2;c<this.rank;c++)l=`${e[e.length-1-c]},`+l;t.push(l)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${a};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ma{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Vt(this.outputShape.length);let r="";for(let a=0;a<4;a++){let l="thisRC = rc;";a%2===1&&(l+="thisRC.z += 1;"),a>1&&(l+="thisRC.y += 1;"),r+=`
        ${l}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${wr(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Ft():Tt(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function wr(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?Qt(["r","c","d"],"inputShape"):ct(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Is{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const a=Ys(t,r),l=ga(e,a,r);l in this.freeTextures||(this.freeTextures[l]=[]),l in this.usedTextures||(this.usedTextures[l]=[]);const c=_s(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[l].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=c,this.log();const f=this.freeTextures[l].pop();return this.usedTextures[l].push(f),f}let g;return a===D.PACKED_2X2_FLOAT32?g=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===D.PACKED_2X2_FLOAT16?g=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===D.UNPACKED_FLOAT32?g=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===D.UNPACKED_FLOAT16?g=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===D.PACKED_4X1_UNSIGNED_BYTE&&(g=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[l].push(g),this.numUsedTextures++,this._numBytesAllocated+=c,this.log(),g}releaseTexture(e,t,r,a){if(this.freeTextures==null)return;const l=Ys(r,a),c=ga(t,l,a);c in this.freeTextures||(this.freeTextures[c]=[]);const g=_s(t,l,this.gpgpu.gl,this.gpgpu.textureConfig,a),f=(0,u.OBj)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");f!==-1&&this._numBytesAllocated>f?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=g):(this.freeTextures[c].push(e),this.numFreeTextures++,this._numBytesFree+=g),this.numUsedTextures--;const E=this.usedTextures[c],T=E&&E.indexOf(e);if(T==null||T<0)throw new Error("Cannot release a texture that was never provided by this texture manager");E[T]=E[E.length-1],E.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ms(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function _s(n,e,t,r,a){const l=Po(e,r);let c;if(a){const[f,E]=Ge(n[0],n[1]);c=f*E}else{const[f,E]=b(n[0],n[1]);c=f*E}const g=ms(t,l);return c*g}function Po(n,e){switch(n){case D.PACKED_2X2_FLOAT32:return m(e);case D.PACKED_2X2_FLOAT16:return O(e);case D.UNPACKED_FLOAT32:return _e(e);case D.UNPACKED_FLOAT16:return Le(e);case D.PACKED_4X1_UNSIGNED_BYTE:return s(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function Fo(n){return(0,u.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?D.PACKED_2X2_FLOAT32:D.UNPACKED_FLOAT32:n?D.PACKED_2X2_FLOAT16:D.UNPACKED_FLOAT16}function Ys(n,e){if(n===J.UPLOAD)return D.PACKED_2X2_FLOAT32;if(n===J.RENDER||n==null)return Fo(e);if(n===J.DOWNLOAD||n===J.PIXELS)return D.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function ga(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Vt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const wn="if (isnan(x)) return x;",Bo="return x;",ya="return abs(x);";function Xl(n=0){return wn+`
    return x > 0.0 ? 1.0 : float(${n});
  `}const Lo="return (x >= 0.0) ? x : (exp(x) - 1.0);",Uo=wn+`
  return (x < 0.0) ? 0.0 : x;
`,Vo=wn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ns="return x;",Wo="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xa="return x;",Mo=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,zo=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Go=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ko="return 1.0 / (1.0 + exp(-1.0 * x));";class ss{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Vt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ho{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Vt(this.outputShape.length);const t=e.length,r=hn("rc",t),a=Lt(t),l=Ao(t,r),c=r.slice(-2),g=t<=1?"rc":`vec2(${c.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${l});

        setOutput(getChannel(packedInput, ${g}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jo=u.GDt.whereImpl,Qs=1e-7,Xo=1e-4,Cr={};function Yo(n){return n in Cr||(Cr[n]={}),Cr[n]}const Qo=(0,u.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),qo=600;function Zo(){return(0,u.OBj)().global.screen==null?1024:(0,u.OBj)().global.screen.height*(0,u.OBj)().global.screen.width*window.devicePixelRatio*qo/1024/1024}class Tr extends u.Zuw{nextDataId(){return Tr.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,u.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof wt)t=e;else{const r=I((0,u.OBj)().getNumber("WEBGL_VERSION"),e);t=new wt(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=I((0,u.OBj)().getNumber("WEBGL_VERSION"));t=new wt(r),this.binaryCache=Yo((0,u.OBj)().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Is(this.gpgpu),this.numMBBeforeWarning=Zo(),this.texData=new u.JLz(this,(0,u.SRH)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,a,l,c){const g=this.makeTensorInfo(t,r),f=this.texData.get(g.dataId);f.isPacked=!1,f.texture={texture:e,texShape:[a,l]},f.texShape=[a,l];const E=Ot(t),T=new ae(E,!1,c),A=this.runWebGLProgram(T,[g],r,[[a,l]]);return A.shape=t,f.texture=null,this.disposeIntermediateTensorInfo(g),A.dataId}write(e,t,r){if(((0,u.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,u.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:r,values:e,usage:J.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,a,l){if((0,u.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:a,values:t,usage:J.UPLOAD,refCount:l})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:a,complexTensorInfos:l,slice:c,shape:g,isPacked:f}=t;if(c!=null){let B;f?B=new ss(g,ns):B=new Vn(g,ns);const K=this.runWebGLProgram(B,[{dataId:e,shape:g,dtype:a}],a),Q=this.readSync(K.dataId);return this.disposeIntermediateTensorInfo(K),Q}if(r!=null)return this.convertAndCacheOnCPU(e);if(a==="string")return r;const E=this.activeTimers!=null;let T;E&&(T=u.D5U.now());let A;if(a==="complex64"){const B=this.readSync(l.real.dataId),K=this.readSync(l.imag.dataId);A=u.Wap.mergeRealAndImagArrays(B,K)}else A=this.getValuesFromTexture(e);return E&&(this.downloadWaitMs+=u.D5U.now()-T),this.convertAndCacheOnCPU(e,A)}async read(e){if(this.pendingRead.has(e)){const Q=this.pendingRead.get(e);return new Promise(ce=>Q.push(ce))}const t=this.texData.get(e),{values:r,shape:a,slice:l,dtype:c,complexTensorInfos:g,isPacked:f}=t;if(l!=null){let Q;f?Q=new ss(a,ns):Q=new Vn(a,ns);const ce=this.runWebGLProgram(Q,[{dataId:e,shape:a,dtype:c}],c),ve=this.read(ce.dataId);return this.disposeIntermediateTensorInfo(ce),ve}if(r!=null)return this.convertAndCacheOnCPU(e);if((0,u.OBj)().getBool("DEBUG")&&!(0,u.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&(0,u.OBj)().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let E=null,T;if(c!=="complex64"&&(0,u.OBj)().get("WEBGL_BUFFER_SUPPORTED")){T=this.decode(e);const Q=this.texData.get(T.dataId);E=this.gpgpu.createBufferFromTexture(Q.texture.texture,...$e(a))}this.pendingRead.set(e,[]),c!=="complex64"&&await this.gpgpu.createAndWaitForFence();let A;if(c==="complex64"){const Q=await Promise.all([this.read(g.real.dataId),this.read(g.imag.dataId)]),ce=Q[0],ve=Q[1];A=u.Wap.mergeRealAndImagArrays(ce,ve)}else if(E==null)A=this.getValuesFromTexture(e);else{const Q=u.D5U.sizeFromShape(a);A=this.gpgpu.downloadFloat32MatrixFromBuffer(E,Q)}if(T!=null&&this.disposeIntermediateTensorInfo(T),E!=null){const Q=this.gpgpu.gl;j(Q,()=>Q.deleteBuffer(E))}const B=this.convertAndCacheOnCPU(e,A),K=this.pendingRead.get(e);return this.pendingRead.delete(e),K.forEach(Q=>Q(B)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,u.SRH)().removeDataId(e,this),this.pendingDeletes--),B}readToGPU(e,t={}){const r=this.texData.get(e),{values:a,shape:l,slice:c,dtype:g,isPacked:f,texture:E}=r;if(g==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(c!=null){let K;f?K=new ss(l,ns):K=new Vn(l,ns);const Q=this.runWebGLProgram(K,[{dataId:e,shape:l,dtype:g}],g),ce=this.readToGPU(Q,t);return this.disposeIntermediateTensorInfo(Q),ce}if(E==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const T=this.decode(e,t.customTexShape),A=(0,u.SRH)().makeTensorFromTensorInfo(T),B=this.texData.get(T.dataId);return Object.assign({tensorRef:A},B.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(a=>u.D5U.decodeString(a));return(0,u.f3b)(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,u.f3b)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!P(r))throw(0,u.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:a}=this.texData.get(e),l=u.D5U.sizeFromShape(t);if((0,u.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const B=this.decode(e),K=this.texData.get(B.dataId),Q=this.gpgpu.downloadMatrixFromPackedTexture(K.texture.texture,...$e(t)).subarray(0,l);return this.disposeIntermediateTensorInfo(B),Q}const c=(0,u.OBj)().getBool("WEBGL_PACK")&&a===!0,g=c?Ot(t):t,f=c?new js(g):new pn(g),E=this.runWebGLProgram(f,[{shape:g,dtype:r,dataId:e}],"float32"),T=this.texData.get(E.dataId),A=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(T.texture.texture,T.texShape[0],T.texShape[1]).subarray(0,l);return this.disposeIntermediateTensorInfo(E),A}timerAvailable(){return(0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=r,a=!0):this.activeTimers.push(r),this.activeTimers=r,e();const l=u.D5U.flatten(this.activeTimers.map(f=>f.query)).filter(f=>f!=null),c=u.D5U.flatten(this.activeTimers.map(f=>f.name)).filter(f=>f!=null);this.activeTimers=t,a&&(this.programTimersStack=null);const g={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const f=await Promise.all(l);g.kernelMs=u.D5U.sum(f),g.getExtraProfileInfo=()=>f.map((E,T)=>({name:c[T],ms:E})).map(E=>`${E.name}: ${E.ms}`).join(", ")}else g.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,g})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:u.D5U.now(),endMs:null}}endTimer(e){return(0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=u.D5U.now(),e)}async getQueryTime(e){if((0,u.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:a,usage:l,isPacked:c,slice:g}=this.texData.get(e),f=g&&g.origDataId||e,E=this.dataRefCount.get(f);E>1?this.dataRefCount.set(f,E-1):(this.dataRefCount.delete(f),t!=null&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(t,a,l,c)));const T=this.texData.get(e);T.texture=null,T.texShape=null,T.isPacked=!1,T.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Qo){return(0,u.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&u.D5U.sizeFromShape(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){u.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return jo(e.shape,t)}packedUnaryOp(e,t,r){const a=new ss(e.shape,t),l=this.compileAndRun(a,[e],r);return(0,u.SRH)().makeTensorFromTensorInfo(l)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const a=Gr(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,a)}if((0,u.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ya,e.dtype);const t=new Vn(e.shape,ya),r=this.compileAndRun(t,[e]);return(0,u.SRH)().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let a;if(t==="string"&&r!=null&&r.length>0&&u.D5U.isString(r[0])){const l=r.map(c=>u.D5U.encodeString(c));a=this.write(l,e,t)}else a=this.write(r,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,r){return(0,u.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new Ho(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new ko(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[Ct(e.shape),...It(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},l=[Ct(t),...It(t)],c=new ma(l,r),g=!0,f=[r],E=this.runWebGLProgram(c,[a],e.dtype,f,g);return{dataId:E.dataId,shape:t,dtype:E.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:a,shape:l,dtype:c}=r;if(t!=null){const B=u.D5U.sizeFromShape(l),K=t[0]*t[1]*4;u.D5U.assert(B<=K,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const g=Ot(l);let f;a?f=new Hs(g):f=new Hn(g);const E=!0,T=[t??$e(g)],A=this.runWebGLProgram(f,[{shape:g,dtype:c,dataId:e}],c,T,E,t);return{dtype:c,shape:l,dataId:A.dataId}}runWebGLProgram(e,t,r,a,l=!1,c){const g=this.makeTensorInfo(e.outputShape,r),f=this.texData.get(g.dataId);if(e.packedOutput&&(f.isPacked=!0),e.outPackingScheme===se.DENSE){const le=c??$e(e.outputShape);f.texShape=le.map(Ne=>Ne*2)}if(e.outTexUsage!=null&&(f.usage=e.outTexUsage),u.D5U.sizeFromShape(g.shape)===0)return f.values=u.D5U.getTypedArrayFromDType(g.dtype,0),g;const E=[],T=t.map(le=>{if(le.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let Ne=this.texData.get(le.dataId);if(Ne.texture==null){if(!e.packedInputs&&u.D5U.sizeFromShape(le.shape)<=(0,u.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:le.shape,texData:null,isUniform:!0,uniformValues:Ne.values};e.packedInputs&&(Ne.isPacked=!0,Ne.shape=le.shape)}if(this.uploadToGPU(le.dataId),!!Ne.isPacked!=!!e.packedInputs)le=Ne.isPacked?this.unpackTensor(le):this.packTensor(le),E.push(le),Ne=this.texData.get(le.dataId);else if(Ne.isPacked&&!ln(Ne.shape,le.shape)){const et=le,Je=le.shape;le.shape=Ne.shape,le=this.packedReshape(le,Je),E.push(le),Ne=this.texData.get(le.dataId),et.shape=Je}return{shape:le.shape,texData:Ne,isUniform:!1}});this.uploadToGPU(g.dataId);const A={shape:g.shape,texData:f,isUniform:!1},B=Ks(e,T,A),K=this.getAndSaveBinary(B,()=>Dn(this.gpgpu,e,T,A)),Q=this.activeTimers!=null;let ce;Q&&(ce=this.startTimer()),(0,u.OBj)().get("ENGINE_COMPILE_ONLY")||xr(this.gpgpu,K,T,A,a),E.forEach(le=>this.disposeIntermediateTensorInfo(le)),Q&&(ce=this.endTimer(ce),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(ce)}));const ve=(0,u.OBj)().getNumber("WEBGL_FLUSH_THRESHOLD");if(ve>0){const le=u.D5U.now();le-this.lastGlFlushTime>ve&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=le)}if(!(0,u.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&f.isPacked&&l===!1){const le=this.unpackTensor(g);return this.disposeIntermediateTensorInfo(g),le}return g}compileAndRun(e,t,r,a,l=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,a,l)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,u.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=(0,u.lub)(()=>{if(!(0,u.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,u.OBj)().getBool("DEBUG");(0,u.OBj)().set("DEBUG",!1);const t=this.abs((0,u.iD$)(1e-8)).dataSync()[0];if((0,u.OBj)().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Qs:Xo}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:a,values:l,texture:c,usage:g,isPacked:f}=t;if(c!=null)return;const E=this.activeTimers!=null;let T;E&&(T=u.D5U.now());let A=t.texShape;if(A==null&&(A=zt(r,f),t.texShape=A),l!=null){const B=Ot(r);let K,Q=A[1],ce=A[0];const ve=l instanceof Uint8Array||l instanceof Uint8ClampedArray;(f||!ve)&&([Q,ce]=Ge(A[0],A[1])),f?K=new ne(B,ve):K=new ae(B,ve);const le=ve?[ce,Q]:A,Ne=this.makeTensorInfo(le,a),et=this.texData.get(Ne.dataId);ve?et.usage=J.PIXELS:et.usage=J.UPLOAD,et.texShape=le,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(Ne.dataId),Q,ce,l);const Je=[[ce,Q]],Nt=this.runWebGLProgram(K,[Ne],a,Je,!0),Et=this.texData.get(Nt.dataId);t.texShape=Et.texShape,t.isPacked=Et.isPacked,t.usage=Et.usage,(0,u.OBj)().get("ENGINE_COMPILE_ONLY")?this.disposeData(Nt.dataId):(t.texture=Et.texture,t.values=null,this.texData.delete(Nt.dataId)),this.disposeIntermediateTensorInfo(Ne),E&&(this.uploadWaitMs+=u.D5U.now()-T)}else{const B=this.acquireTexture(A,g,a,f);t.texture=B}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:a}=r;return t!=null&&(r.values=Jo(t,a)),r.values}acquireTexture(e,t,r,a){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const l=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${l} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*u.D5U.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(a=>{try{this.checkCompletion_(t),a(!0)}catch(l){throw l}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,u.glt)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Re(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:a,nanLoc:l,outShapeLocation:c,outShapeStridesLocation:g,outTexShapeLocation:f}=Ss(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=a,e.nanLoc=l,e.outShapeLocation=c,e.outShapeStridesLocation=g,e.outTexShapeLocation=f}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:a,height:l,width:c,channels:g}=e,f=(0,u.SRH)().backend;if(!f.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const E=f.writeTexture(a,t,r,l,c,g);return(0,u.SRH)().makeTensorFromDataId(E,t,r,f)}}Tr.nextDataId=0;function Jo(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */u.C2$.isBrowser()&&(0,u.jqO)("webgl",()=>new Tr,2);const Yl=null;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Ql="return (a - b) * (a - b);";class gs{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=u.Wap.assertAndGetBroadcastShape(t,r),this.enableShapeUniforms=Vt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ys=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,ql=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Zl=`
  return vec4(notEqual(a, b));
`;class Ds{constructor(e,t,r,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=u.Wap.assertAndGetBroadcastShape(t,r);const l=this.outputShape.length;this.enableShapeUniforms=Vt(l);let c="";if(a)if(l===0||u.D5U.sizeFromShape(this.outputShape)===1)c=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(c=`
          ${Lt(l)} coords = getOutputCoords();
        `,l===1)this.enableShapeUniforms?c+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:c+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const f=hn("coords",l);this.enableShapeUniforms?c+=`
            bool nextRowOutOfBounds =
              (${f[l-2]} + 1) >= outShape[${l} - 2];
            bool nextColOutOfBounds =
              (${f[l-1]} + 1) >= outShape[${l} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:c+=`
            bool nextRowOutOfBounds =
              (${f[l-2]} + 1) >= ${this.outputShape[l-2]};
            bool nextColOutOfBounds =
              (${f[l-1]} + 1) >= ${this.outputShape[l-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${c}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const ei={kernelName:u.iJz,backendName:"webgl",kernelFunc:bn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(n){const{inputs:e,backend:t}=n,{real:r,imag:a}=e,l=t.makeTensorInfo(r.shape,"complex64"),c=t.texData.get(l.dataId),g=bn({inputs:{x:r},backend:t}),f=bn({inputs:{x:a},backend:t});return c.complexTensorInfos={real:g,imag:f},l}const ti={kernelName:u.Zz9,backendName:"webgl",kernelFunc:rs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ba="return (a < 0.) ? b * a : a;",va=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function ni(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{alpha:l}=r,c=t.makeTensorInfo([],"float32",u.D5U.createScalarValue(l,"float32")),g=(0,u.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ds(va,a.shape,c.shape):new gs(ba,a.shape,c.shape),f=t.runWebGLProgram(g,[a,c],"float32");return t.disposeIntermediateTensorInfo(c),f}const si={kernelName:u.J$2,backendName:"webgl",kernelFunc:ni};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ea="return (a < 0.) ? b * a : a;",wa=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function jr(n){const{inputs:e,backend:t}=n,{x:r,alpha:a}=e,l=(0,u.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ds(wa,r.shape,a.shape):new gs(Ea,r.shape,a.shape);return t.runWebGLProgram(l,[r,a],"float32")}const Xr={kernelName:u.o0g,backendName:"webgl",kernelFunc:jr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Os="if (isnan(x)) return x;";function kt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:a,backend:l})=>{const{x:c}=a,g=l,f=r||c.dtype;if(g.shouldExecuteOnCPU([c])&&t!=null){const A=g.texData.get(c.dataId),B=t(A.values,f);return g.makeTensorInfo(c.shape,f,B)}const E=(0,u.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let T;return E?T=new ss(c.shape,e):T=new Vn(c.shape,n),g.runWebGLProgram(T,[c],f)}}function un({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:l}){return({inputs:c,backend:g})=>{const{a:f,b:E}=c,T=g;if(r&&f.dtype==="complex64"){const Q=T.texData.get(f.dataId),ce=T.texData.get(E.dataId),[ve,le]=[[Q.complexTensorInfos.real,ce.complexTensorInfos.real],[Q.complexTensorInfos.imag,ce.complexTensorInfos.imag]].map(et=>{const[Je,lt]=et,Nt={dataId:Je.dataId,dtype:Je.dtype,shape:f.shape},Et={dataId:lt.dataId,dtype:lt.dtype,shape:E.shape},gt=new gs(n,f.shape,E.shape);return T.runWebGLProgram(gt,[Nt,Et],(0,u.x8V)(Je.dtype,lt.dtype))}),Ne=rs({inputs:{real:ve,imag:le},backend:T});return T.disposeIntermediateTensorInfo(ve),T.disposeIntermediateTensorInfo(le),Ne}const A=l||(0,u.x8V)(f.dtype,E.dtype);if((f.dtype==="string"||E.dtype==="string"||T.shouldExecuteOnCPU([f,E]))&&a!=null){const Q=T.texData.get(f.dataId).values,ce=T.texData.get(E.dataId).values,ve=f.dtype==="string"?u.Wap.fromUint8ToStringArray(Q):Q,le=f.dtype==="string"?u.Wap.fromUint8ToStringArray(ce):ce,[Ne,et]=a(f.shape,E.shape,ve,le,A),Je=T.makeTensorInfo(et,A),lt=T.texData.get(Je.dataId);return lt.values=Ne,Je}const B=(0,u.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let K;return B?K=new Ds(e,f.shape,E.shape,t):K=new gs(n,f.shape,E.shape),T.runWebGLProgram(K,[f,E],A)}}function $r(n,e=!1){if(n==="linear")return e?xa:Bo;if(n==="relu")return e?zo:Uo;if(n==="elu")return e?Mo:Lo;if(n==="relu6")return e?Go:Vo;if(n==="prelu")return e?wa:Ea;if(n==="leakyrelu")return e?va:ba;if(n==="sigmoid")return e?Ko:Wo;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nr{constructor(e,t,r,a=!1,l=!1,c=!1,g=null,f=!1,E=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=Vt(this.outputShape.length);const T=a?e[1]:e[2],A=Math.ceil(T/2),B=a?"i * 2, rc.y":"rc.y, i * 2",K=l?"rc.z, i * 2":"i * 2, rc.z",Q=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],ce=l?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let ve="",le="";g&&(f?ve=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${g}
        }`:E?ve=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${g}
        }`:ve=`vec4 activation(vec4 x) {
          ${g}
        }`,le="result = activation(result);");const Ne=c?"result += getBiasAtOutCoords();":"";c&&this.variableNames.push("bias"),f&&this.variableNames.push("preluActivationWeights"),E&&this.variableNames.push("leakyreluAlpha");let et="rc.x",Je="rc.x";e[0]<t[0]?et=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(Je=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${ve}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${A}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${et};
        int batchB = ${Je};
        for (int i = 0; i < ${A}; i++) {
          vec4 a = getMatrixA(batchA, ${B});
          vec4 b = getMatrixB(batchB, ${K});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${Q[0]} * ${ce[0]});
          result += (${Q[1]} * ${ce[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${Ne}

        ${le}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ca={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Ta{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=u.Wap.assertAndGetBroadcastShape(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sa="return a * b;";function Yr(n){const{inputs:e,backend:t}=n,{a:r,b:a}=e,l=u.Wap.upcastType(r.dtype,a.dtype);if(r.dtype==="complex64"){const g=t.texData.get(r.dataId),f=t.texData.get(a.dataId),E=new Ta(Ca.REAL,r.shape,a.shape),T=new Ta(Ca.IMAG,r.shape,a.shape),A=[{dataId:g.complexTensorInfos.real.dataId,dtype:g.complexTensorInfos.real.dtype,shape:r.shape},{dataId:g.complexTensorInfos.imag.dataId,dtype:g.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:f.complexTensorInfos.real.dataId,dtype:f.complexTensorInfos.real.dtype,shape:a.shape},{dataId:f.complexTensorInfos.imag.dataId,dtype:f.complexTensorInfos.imag.dtype,shape:a.shape}],B=t.runWebGLProgram(E,A,"float32"),K=t.runWebGLProgram(T,A,"float32"),Q=rs({inputs:{real:B,imag:K},backend:t});return t.disposeIntermediateTensorInfo(B),t.disposeIntermediateTensorInfo(K),Q}if(t.shouldExecuteOnCPU([r,a])){const g=t.texData.get(r.dataId),f=t.texData.get(a.dataId),[E,T]=jn(r.shape,a.shape,g.values,f.values,l),A=t.makeTensorInfo(T,l),B=t.texData.get(A.dataId);return B.values=E,A}let c;return(0,u.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?c=new Ds(Sa,r.shape,a.shape):c=new gs(Sa,r.shape,a.shape),t.runWebGLProgram(c,[r,a],l)}const ri={kernelName:u.wYn,backendName:"webgl",kernelFunc:Yr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ai(n,e,t){const r=[Ct(n.shape),...It(n.shape)],a={dtype:n.dtype,shape:r,dataId:n.dataId},l=[Ct(e),...It(e)],c=new ma(l,r),g=!0,f=[r],E=t.runWebGLProgram(c,[a],n.dtype,f,g);return{dataId:E.dataId,shape:e,dtype:E.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function it(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{shape:l}=r,c=t,g=u.D5U.sizeFromShape(a.shape),f=u.D5U.inferFromImplicitShape(l,g),E=u.D5U.sizeFromShape(f);u.D5U.assert(g===E,()=>`The new shape (${f}) has ${E} elements and the old shape (${a.shape}) has ${g} elements. The new shape and old shape must have the same number of elements.`);const T=c.texData.get(a.dataId);return T.isPacked&&!ln(a.shape,f)&&!(T.texture!==null&&ln(T.shape,f))?ai(a,f,c):(c.incRef(a.dataId),{dataId:a.dataId,shape:f,dtype:a.dtype})}const oi={kernelName:u.HZH,backendName:"webgl",kernelFunc:it};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $a{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:a,inSize:l,outSize:c}=e;this.outputShape=[a,c];const g=Math.floor(r/4)*4,f=r%4;let E="sumValue += dot(values, ones);";if(t!=null){const A=1/t;E=`sumValue += dot(values * ${u.D5U.isInt(A)?A.toPrecision(2):A}, ones);`}let T="";l%r>0&&(T=`
        if (inIdx < 0 || inIdx >= ${l}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${T}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${g}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${E}
        }

        int inIdx = inOffset + ${g};
        if (${f===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${E}
        } else if (${f===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${E}
        } else if (${f===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${E}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ii{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:a,inSize:l,outSize:c}=e;this.outputShape=[a,c];let g="0.0",f="";t==="prod"?g="1.0":t==="min"?(g="1.0 / 1e-20",f="min"):t==="max"&&(g="-1.0 / 1e-20",f="max");let E=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?E="sumValue":t==="prod"?E="prodValue":t==="all"?E="allValue":t==="any"&&(E="anyValue");const T=Math.floor(r/4)*4,A=r%4;let B=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${f}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${f}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,K="vec4";t==="all"?(g="1.0",B=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,K="bvec4"):t==="any"&&(g="0.0",B=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,K="bvec4");let Q="";l%r>0&&(Q=`
        if (inIdx < 0 || inIdx >= ${l}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${g};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${Q}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${g});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${T}; i += 4) {
          int inIdx = inOffset + i;
          ${K} values = ${K}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${B}
        }

        int inIdx = inOffset + ${T};
        if (${A===1}) {
          ${K} values = ${K}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${B}
        } else if (${A===2}) {
          ${K} values = ${K}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${B}
        } else if (${A===3}) {
          ${K} values = ${K}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${B}
        }
        setOutput(${E});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qr(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=u.Wap.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function xs(n,e,t,r){const a=Qr(n.shape);let l=n;for(let c=0;c<a.length;c++){const{inSize:g,windowSize:f,outSize:E}=a[c];let T,A;t==="mean"?T=c===0?new $a({windowSize:f,inSize:g,batchSize:n.shape[0],outSize:E},g):new $a({windowSize:f,inSize:g,batchSize:n.shape[0],outSize:E}):T=new ii({windowSize:f,inSize:g,batchSize:n.shape[0],outSize:E},t),A=l,l=r.runWebGLProgram(T,[l],e),A.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(A)}return l}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ui{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let c=0;c<r.length;c++)r[c]=e[t[c]];this.outputShape=r,this.rank=r.length;const a=Lt(this.rank),l=qs(t);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${l}));
    }
    `}}function qs(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let a=0;a<n.length;a++)r[n[a]]=t[a];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class li{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let T=0;T<r.length;T++)r[T]=e[t[T]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=Lt(this.rank),l=fa("rc",this.rank),c=new Array(this.rank);for(let T=0;T<t.length;T++)c[t[T]]=l[T];const g=`vec2(${c.slice(-2).join()})`,f=`++${l[this.rank-1]} < ${r[this.rank-1]}`,E=`getChannel(getA(${c.join()}), ${g})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${E};
      if(${f}) {
        result[1] = ${E};
      }
      --${l[this.rank-1]};
      if(++${l[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${E};
        if(${f}) {
          result[3] = ${E};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(n,e,t){const r=(0,u.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new li(n.shape,e):new ui(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ci(n,e,t,r){const a=e,l=n.shape.length,c=u.D5U.parseAxisParam(a,n.shape);let g=c;const f=u.Wap.getAxesPermutation(g,l),E=f!=null;let T=n;E&&(T=as(n,f,r),g=u.Wap.getInnerMostAxes(g.length,l)),u.Wap.assertAxesAreInnerMostDims("sum",g,l);const[A,B]=u.Wap.computeOutAndReduceShapes(T.shape,g);let K=A;t&&(K=u.Wap.expandShapeToKeepDim(A,c));const Q=u.D5U.sizeFromShape(B),ve=u.D5U.sizeFromShape(n.shape)/Q,le=it({inputs:{x:T},attrs:{shape:[ve,Q]},backend:r}),Ne=(0,u.z4k)(n.dtype),et=xs(le,Ne,"sum",r),Je=it({inputs:{x:et},attrs:{shape:K},backend:r});return r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(et),E&&r.disposeIntermediateTensorInfo(T),Je}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{axis:l,keepDims:c}=r;return ci(a,l,c,t)}const qr={kernelName:u.GBy,backendName:"webgl",kernelFunc:Ir};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{perm:l}=r,c=t,g=a.shape.length,f=new Array(g);for(let T=0;T<f.length;T++)f[T]=a.shape[l[T]];let E;if(c.shouldExecuteOnCPU([a])){const A=c.texData.get(a.dataId).values,B=Er(A,a.shape,a.dtype,l,f);E=c.makeTensorInfo(f,a.dtype);const K=c.texData.get(E.dataId);K.values=B}else E=as(a,l,c);return E}const di={kernelName:u.G3Y,backendName:"webgl",kernelFunc:fn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const os=1e3;function _r({a:n,b:e,transposeA:t,transposeB:r,backend:a,bias:l=null,preluActivationWeights:c=null,leakyreluAlpha:g=0,activation:f=null}){const E=n.shape.length,T=e.shape.length,A=t?n.shape[E-2]:n.shape[E-1],B=r?e.shape[T-1]:e.shape[T-2],K=t?n.shape[E-1]:n.shape[E-2],Q=r?e.shape[T-2]:e.shape[T-1],ce=n.shape.slice(0,-2),ve=e.shape.slice(0,-2),le=u.D5U.sizeFromShape(ce),Ne=u.D5U.sizeFromShape(ve),Je=u.Jyw.assertAndGetBroadcastShape(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([K,Q]);u.D5U.assert(A===B,()=>`Error in matMul: inner shapes (${A}) and (${B}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const lt=t?[le,A,K]:[le,K,A],Nt=r?[Ne,Q,B]:[Ne,B,Q],Et=it({inputs:{x:n},backend:a,attrs:{shape:lt}}),gt=it({inputs:{x:e},backend:a,attrs:{shape:Nt}}),Pt=[Et,gt],Dt=Math.max(le,Ne),Jt=t?Et.shape[1]:Et.shape[2],sn=l!=null,us=c!=null,Nn=f==="leakyrelu",An=f!=null?$r(f,!0):null,Mn=sn||us||Nn||An!=null;let Yn;if((K===1||Q===1)&&Jt>os&&Mn===!1){let Fs=Et,Pr=gt;t&&(Fs=fn({inputs:{x:Et},backend:a,attrs:{perm:[0,2,1]}}),Pt.push(Fs)),r&&(Pr=fn({inputs:{x:gt},backend:a,attrs:{perm:[0,2,1]}}),Pt.push(Pr));const Fr=Q!==1,no=Q===1;let Hl=Fs;Fr&&(Hl=it({inputs:{x:Fs},backend:a,attrs:{shape:[Dt,Jt,1]}}),Pt.push(Hl));const Sf=Q===1?2:1;let jl=Pr;no&&(jl=it({inputs:{x:Pr},backend:a,attrs:{shape:[Dt,1,Jt]}}),Pt.push(jl));const yc=Yr({inputs:{a:Hl,b:jl},backend:a});Yn=Ir({inputs:{x:yc},backend:a,attrs:{axis:Sf,keepDims:!0}}),Pt.push(yc)}else{const Fs=(0,u.x8V)(n.dtype,e.dtype),Pr=new Nr(lt,Nt,[Dt,K,Q],t,r,sn,An,us,Nn),Fr=[Et,gt];if(l!=null&&Fr.push(l),us&&Fr.push(c),Nn){const no=a.makeTensorInfo([],"float32",u.D5U.createScalarValue(g,"float32"));Fr.push(no),Pt.push(no)}Yn=a.runWebGLProgram(Pr,Fr,Fs)}const vn=it({inputs:{x:Yn},backend:a,attrs:{shape:Je}});Pt.push(Yn);for(const Fs of Pt)a.disposeIntermediateTensorInfo(Fs);return vn}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(n){const{inputs:e,backend:t,attrs:r}=n,{a,b:l,bias:c,preluActivationWeights:g}=e,{transposeA:f,transposeB:E,activation:T,leakyreluAlpha:A}=r;return _r({a,b:l,transposeA:f,transposeB:E,backend:t,bias:c,preluActivationWeights:g,leakyreluAlpha:A,activation:T})}const hi={kernelName:u.usg,backendName:"webgl",kernelFunc:pi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Na="return abs(x);";function fi(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const l=t.texData.get(r.dataId),c=Gr(l.values);return t.makeTensorInfo(r.shape,r.dtype,c)}let a;return(0,u.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ss(r.shape,Na):a=new Vn(r.shape,Na),t.runWebGLProgram(a,[r],r.dtype)}const mi={kernelName:u.SYM,backendName:"webgl",kernelFunc:fi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gi=wn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,yi=kt({opSnippet:gi}),xi={kernelName:u.VGw,backendName:"webgl",kernelFunc:yi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ia=wn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,bi=kt({opSnippet:Ia}),vi={kernelName:u.SpW,backendName:"webgl",kernelFunc:bi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _a="return a + b;",Ei=un({opSnippet:_a,packedOpSnippet:_a,supportsComplex:!0,cpuKernelImpl:Kt}),wi={kernelName:u.mm_,backendName:"webgl",kernelFunc:Ei};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ci{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((l,c)=>`T${c}`);const r=[];this.variableNames.forEach(l=>{r.push(`float v${l} = get${l}AtOutCoords();`)});const a=this.variableNames.map(l=>`v${l}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ti{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((l,c)=>`T${c}`);const r=[];this.variableNames.forEach(l=>{r.push(`vec4 v${l} = get${l}AtOutCoords();`)});const a=this.variableNames.map(l=>`v${l}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return bn({inputs:{x:r[0]},backend:t});if(r.length>(0,u.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const f=Math.floor(r.length/2),E=Dr({inputs:r.slice(0,f),backend:t}),T=Dr({inputs:r.slice(f),backend:t});return Dr({inputs:[E,T],backend:t})}const a=r.map(f=>f.dtype).reduce((f,E)=>(0,u.x8V)(f,E)),l=r.map(f=>f.shape),g=(0,u.OBj)().getBool("WEBGL_PACK")?new Ti(r[0].shape,l):new Ci(r[0].shape,l);return t.runWebGLProgram(g,r,a)}const Si={kernelName:u.Xze,backendName:"webgl",kernelFunc:Dr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $i(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{axis:l,keepDims:c}=r,g=a.shape.length,f=u.D5U.parseAxisParam(l,a.shape);let E=f;const T=u.Wap.getAxesPermutation(E,g);let A=a;T!=null&&(A=fn({inputs:{x:a},backend:t,attrs:{perm:T}}),E=u.Wap.getInnerMostAxes(E.length,g)),u.Wap.assertAxesAreInnerMostDims("all",E,g);const[B,K]=u.Wap.computeOutAndReduceShapes(A.shape,E),Q=u.D5U.sizeFromShape(K),ce=it({inputs:{x:A},backend:t,attrs:{shape:[-1,Q]}}),ve=xs(ce,ce.dtype,"all",t);let le;if(c){const Ne=u.Wap.expandShapeToKeepDim(B,f);le=it({inputs:{x:ve},backend:t,attrs:{shape:Ne}})}else le=it({inputs:{x:ve},backend:t,attrs:{shape:B}});return t.disposeIntermediateTensorInfo(ce),t.disposeIntermediateTensorInfo(ve),T!=null&&t.disposeIntermediateTensorInfo(A),le}const Ni={kernelName:u.oT6,backendName:"webgl",kernelFunc:$i};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ii(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{axis:l,keepDims:c}=r,g=a.shape.length,f=u.D5U.parseAxisParam(l,a.shape);let E=f;const T=u.Wap.getAxesPermutation(E,g);let A=a;T!=null&&(A=fn({inputs:{x:a},backend:t,attrs:{perm:T}}),E=u.Wap.getInnerMostAxes(E.length,g)),u.Wap.assertAxesAreInnerMostDims("any",E,g);const[B,K]=u.Wap.computeOutAndReduceShapes(A.shape,E),Q=u.D5U.sizeFromShape(K),ce=it({inputs:{x:A},backend:t,attrs:{shape:[-1,Q]}}),ve=xs(ce,ce.dtype,"any",t);let le;if(c){const Ne=u.Wap.expandShapeToKeepDim(B,f);le=it({inputs:{x:ve},backend:t,attrs:{shape:Ne}})}else le=it({inputs:{x:ve},backend:t,attrs:{shape:B}});return t.disposeIntermediateTensorInfo(ce),t.disposeIntermediateTensorInfo(ve),T!=null&&t.disposeIntermediateTensorInfo(A),le}const _i={kernelName:u.IKK,backendName:"webgl",kernelFunc:Ii};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Di{constructor(e,t,r){this.variableNames=["A"];const{windowSize:a,batchSize:l,outSize:c}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[l,c];const g=t==="max"?">":"<",f=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${f};
          float candidate = getA(batch, inIdx);
          if (candidate ${g} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oi{constructor(e,t,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,u.D5U.assert(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const l=e[e.length-1],c=Math.ceil(l/t);this.outputShape=e.slice(0,-1),c>1&&this.outputShape.push(c),a||this.variableNames.push("bestIndicesA");const g=this.outputShape,f=g.length,E=Lt(f),T=hn("coords",f);let A,B;if(c===1){B=f+1;const gt=Lt(B);A=`
        ${gt} sourceLocR = ${gt}(${T.join()}, 0);
        ++${T[f-1]};
        ${gt} sourceLocG = ${gt}(${T.join()}, 0);
        ++${T[f-2]};
        ${gt} sourceLocA = ${gt}(${T.join()}, 0);
        --${T[f-1]};
        ${gt} sourceLocB = ${gt}(${T.join()}, 0);
        --${T[f-2]};`}else B=f,A=`
        ${E} sourceLocR = coords;
        ++${T[f-1]};
        ${E} sourceLocG = coords;
        ++${T[f-2]};
        ${E} sourceLocA = coords;
        --${T[f-1]};
        ${E} sourceLocB = coords;
        --${T[f-2]};`;const K=["x","y","z","w","u","v"].slice(0,B),Q="."+K[B-1],ce=K.map(gt=>"int "+gt),ve=hn("sourceLocR",B-1).concat("inIdx.r"),le=hn("sourceLocG",B-1).concat("inIdx.g"),Ne=hn("sourceLocB",B-1).concat("inIdx.b"),et=hn("sourceLocA",B-1).concat("inIdx.a"),Je=r==="max"?"greaterThan":"lessThan",lt=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${ve.join()}),
                             getBestIndicesAChannel(${le.join()}),
                             getBestIndicesAChannel(${Ne.join()}),
                             getBestIndicesAChannel(${et.join()})));`,Nt=`vec4(
            getAChannel(${ve.join()}),
            hasNextCol ? getAChannel(${le.join()}) : 0.,
            hasNextRow ? getAChannel(${Ne.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${et.join()}) : 0.)`,Et=a?"":`
      float getBestIndicesAChannel(${ce.join()}) {
        return getChannel(getBestIndicesA(${K.join()}),
                                          vec2(${K.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${ce.join()}) {
        return getChannel(getA(${K.join()}),
                               vec2(${K.slice(-2).join()}));
      }
      ${Et}
      void main() {
        ${E} coords = getOutputCoords();
        bool hasNextCol = ${T[f-1]} < ${g[f-1]-1};
        bool hasNextRow = ${T[f-2]} < ${g[f-2]-1};
        ${A}
        ivec4 srcIdx = ivec4(sourceLocR${Q}, sourceLocG${Q},
          sourceLocB${Q}, sourceLocA${Q}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${Nt};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${lt}
          vec4 candidate = ${Nt};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${Je}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Da(n,e,t,r=null){let a=e.shape[0],l=e.shape[1];r!=null&&(a=r.shape[0],l=r.shape[1]);const c=u.Wap.computeOptimalWindowSize(l),g={windowSize:c,inSize:l,batchSize:a,outSize:Math.ceil(l/c)},f=new Di(g,t,r==null),E=[e];r!=null&&E.push(r);const T=n.runWebGLProgram(f,E,"int32");if(T.shape[1]===1)return T;const A=Da(n,e,t,T);return n.disposeIntermediateTensorInfo(T),A}function Oa(n,e,t,r=null){const a=r!=null?r.shape:e.shape,l=a[a.length-1],c=u.Wap.computeOptimalWindowSize(l),g=new Oi(a,c,t,r==null),f=r==null?[e]:[e,r],E=n.runWebGLProgram(g,f,"int32");if(E.shape.length===e.shape.length){const T=Oa(n,e,t,E);return n.disposeIntermediateTensorInfo(E),T}return E}function Ra(n,e,t,r){const a=[t];if(u.Wap.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,e.shape.length),!(0,u.OBj)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const l=[],c=n.texData.get(e.dataId),g=c!==null&&c.isPacked;let f=e;g&&(f=n.unpackTensor(e),l.push(f));const[E,T]=u.Wap.computeOutAndReduceShapes(f.shape,a),A=u.D5U.sizeFromShape(T),B=it({inputs:{x:f},backend:n,attrs:{shape:[-1,A]}});l.push(B);const K=Da(n,B,r);l.push(K);const Q=it({inputs:{x:K},backend:n,attrs:{shape:E}});return l.forEach(ce=>n.disposeIntermediateTensorInfo(ce)),Q}return Oa(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ri(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{axis:l}=r;let c=u.D5U.parseAxisParam(l,a.shape);const g=u.Wap.getAxesPermutation(c,a.shape.length);let f=a;const E=[];g!=null&&(f=fn({inputs:{x:a},backend:t,attrs:{perm:g}}),E.push(f),c=u.Wap.getInnerMostAxes(c.length,f.shape.length)),u.Wap.assertAxesAreInnerMostDims("argMax",[c[0]],f.shape.length);const T=Ra(t,f,c[0],"max");return E.forEach(A=>t.disposeIntermediateTensorInfo(A)),T}const Ai={kernelName:u.sJF,backendName:"webgl",kernelFunc:Ri};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ki(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{axis:l}=r;let c=u.D5U.parseAxisParam(l,a.shape);const g=u.Wap.getAxesPermutation(c,a.shape.length);let f=a;const E=[];g!=null&&(f=fn({inputs:{x:a},backend:t,attrs:{perm:g}}),E.push(f),c=u.Wap.getInnerMostAxes(c.length,f.shape.length)),u.Wap.assertAxesAreInnerMostDims("argMin",[c[0]],f.shape.length);const T=Ra(t,f,c[0],"min");return E.forEach(A=>t.disposeIntermediateTensorInfo(A)),T}const Pi={kernelName:u.aJk,backendName:"webgl",kernelFunc:ki};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fi=wn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Bi=kt({opSnippet:Fi}),Li={kernelName:u.M2y,backendName:"webgl",kernelFunc:Bi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr=wn+"return log(x + sqrt(x * x + 1.0));",Ui=kt({opSnippet:Zr}),Or={kernelName:u.qw7,backendName:"webgl",kernelFunc:Ui};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vi=wn+`
  return atan(x);
`,Aa=kt({opSnippet:Vi}),Wi={kernelName:u.jMg,backendName:"webgl",kernelFunc:Aa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zs=Sr+`
  return atan(a, b);
`,Mi=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ys+`
  return result;
`,Jr=un({opSnippet:Zs,packedOpSnippet:Mi}),zi={kernelName:u.QCc,backendName:"webgl",kernelFunc:Jr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=wn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Gi=kt({opSnippet:ka}),ea={kernelName:u.Oyi,backendName:"webgl",kernelFunc:Gi};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Js{constructor(e,t,r,a=!1,l=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const c=e.filterWidth,g=e.strideHeight,f=e.strideWidth,E=e.dilationHeight,T=e.dilationWidth,A=e.effectiveFilterHeight,B=e.effectiveFilterWidth,K=e.padInfo.top,Q=e.padInfo.left;this.outputShape=e.outShape;const ce=t==="avg",ve=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,le=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let Ne="0.0";if(ce||(Ne="-1.0 / 1e-20"),r){const gt=">=";this.userCode=`
        const ivec2 strides = ivec2(${g}, ${f});
        const ivec2 pads = ivec2(${K}, ${Q});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${A};
              wR += ${E}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${B};
                wC += ${T}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${gt} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?l?ve:le:`wR * ${B} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const et="max";let Je=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(Je="avgValue / max(count, 1.0)");const lt=Math.floor(c/4)*4,Nt=c%4,Et=`
      if (${ce}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${et}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${g}, ${f});
      const ivec2 pads = ivec2(${K}, ${Q});
      const float initializationValue = ${Ne};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${Ne});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${A};
            wR += ${E}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${lt}; wC += 4) {
            int xC = xCCorner + wC * ${T};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${T}, d),
              getValue(batch, xR, xC + 2 * ${T}, d),
              getValue(batch, xR, xC + 3 * ${T}, d)
            );

            ${Et}
          }

          int xC = xCCorner + ${lt};
          if (${Nt===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${Et}
          } else if (${Nt===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${T}, d),
              initializationValue,
              initializationValue
            );

            ${Et}
          } else if (${Nt===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${T}, d),
              getValue(batch, xR, xC + 2 * ${T}, d),
              initializationValue
            );

            ${Et}
          }
        }
        setOutput(${Je});
      }
    `}}class bs{constructor(e,t,r,a=!1,l=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const c=e.filterWidth,g=e.strideDepth,f=e.strideHeight,E=e.strideWidth,T=e.dilationDepth,A=e.dilationHeight,B=e.dilationWidth,K=e.effectiveFilterDepth,Q=e.effectiveFilterHeight,ce=e.effectiveFilterWidth,ve=e.padInfo.front,le=e.padInfo.top,Ne=e.padInfo.left;this.outputShape=e.outShape;const et=t==="avg";let Je="0.0";if(et||(Je="-1.0 / 1e-20"),r){const Dt=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${g}, ${f}, ${E});
        const ivec3 pads = ivec3(${ve}, ${le}, ${Ne});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${K};
              wD += ${T}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${Q};
                wR += ${A}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${ce};
                  wC += ${B}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${Dt} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?l?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${Q} * ${ce} +
                      wR * ${ce} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const lt="max";let Nt=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(Nt="avgValue / max(count, 1.0)");const Et=Math.floor(c/4)*4,gt=c%4,Pt=`
      if (${et}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${lt}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${g}, ${f}, ${E});
      const ivec3 pads = ivec3(${ve}, ${le}, ${Ne});
      const float initializationValue = ${Je};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${Je});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${K};
            wD += ${T}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${Q};
            wR += ${A}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${Et}; wC += 4) {
              int xC = xCCorner + wC * ${B};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${B}, ch),
                getValue(batch, xD, xR, xC + 2 * ${B}, ch),
                getValue(batch, xD, xR, xC + 3 * ${B}, ch)
              );

              ${Pt}
            }

            int xC = xCCorner + ${Et};
            if (${gt===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${Pt}
            } else if (${gt===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${B}, ch),
                initializationValue,
                initializationValue
              );

              ${Pt}
            } else if (${gt===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${B}, ch),
                getValue(batch, xD, xR, xC + 2 * ${B}, ch),
                initializationValue
              );

              ${Pt}
            }
          }
        }
        setOutput(${Nt});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ki(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e;q(a,"avgPool");const{filterSize:l,strides:c,pad:g,dimRoundingMode:f}=r,E=1;u.D5U.assert(u.Wap.eitherStridesOrDilationsAreOne(c,E),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${c} and dilations '${E}'`);const T=u.Wap.computePool2DInfo(a.shape,l,c,E,g,f);if(T.filterWidth===1&&T.filterHeight===1&&u.D5U.arraysEqual(T.inShape,T.outShape))return bn({inputs:{x:a},backend:t});const A=new Js(T,"avg",!1);return t.runWebGLProgram(A,[a],"float32")}const Hi={kernelName:u.JhU,backendName:"webgl",kernelFunc:Ki};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ji(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{filterSize:l,strides:c,pad:g,dimRoundingMode:f,dataFormat:E}=r,T=[1,1,1],A=u.Wap.computePool3DInfo(a.shape,l,c,T,g,f,E),B=new bs(A,"avg",!1);return t.runWebGLProgram(B,[a],"float32")}const Xi={kernelName:u._k9,backendName:"webgl",kernelFunc:ji};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yi{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,a=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,g=e.dilationWidth,f=e.effectiveFilterHeight,E=e.effectiveFilterWidth,T=f-1-e.padInfo.top,A=E-1-e.padInfo.left,B=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${T}, ${A});
      const float avgMultiplier = float(${B});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${f};
            wR += ${c}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${E};
            wC+= ${g}) {
            float dyC = float(dyCCorner + wC) / ${l}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class ta{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,a=e.filterWidth,l=e.strideDepth,c=e.strideHeight,g=e.strideWidth,f=e.dilationDepth,E=e.dilationHeight,T=e.dilationWidth,A=e.effectiveFilterDepth,B=e.effectiveFilterHeight,K=e.effectiveFilterWidth,Q=A-1-e.padInfo.front,ce=B-1-e.padInfo.top,ve=K-1-e.padInfo.left,le=1/(t*r*a);this.userCode=`
      const ivec3 pads = ivec3(${Q}, ${ce}, ${ve});
      const float avgMultiplier = float(${le});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${A};
            wD += ${f}) {
          float dyD = float(dyDCorner + wD) / ${l}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${B};
              wR += ${E}) {
            float dyR = float(dyRCorner + wR) / ${c}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${K};
                wC += ${T}) {
              float dyC = float(dyCCorner + wC) / ${g}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function er(n){const{inputs:e,backend:t,attrs:r}=n,{dy:a,input:l}=e,c=l,{filterSize:g,strides:f,pad:E,dimRoundingMode:T}=r,A=[1,1,1],B=u.Wap.computePool3DInfo(c.shape,g,f,A,E,T),K=new ta(B);return t.runWebGLProgram(K,[a],c.dtype)}const Cn={kernelName:u.IMb,backendName:"webgl",kernelFunc:er};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(n){const{inputs:e,backend:t,attrs:r}=n,{dy:a,input:l}=e,c=l;q([a,l],"avgPoolGrad");const{filterSize:g,strides:f,pad:E}=r,T=u.Wap.computePool2DInfo(c.shape,g,f,1,E),A=new Yi(T);return t.runWebGLProgram(A,[a],c.dtype)}const Qi={kernelName:u.ROF,backendName:"webgl",kernelFunc:tr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(n){const{inputs:e,backend:t,attrs:r}=n,{a,b:l}=e,{transposeA:c,transposeB:g}=r;return _r({a,b:l,transposeA:c,transposeB:g,backend:t})}const Zi={kernelName:u.XLW,backendName:"webgl",kernelFunc:qi};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ji{constructor(e,t,r,a,l,c){this.outputShape=[],this.variableNames=["x","mean","variance"],u.Wap.assertAndGetBroadcastShape(e,t),u.Wap.assertAndGetBroadcastShape(e,r);let g="0.0";a!=null&&(u.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),g="getOffsetAtOutCoords()");let f="1.0";l!=null&&(u.Wap.assertAndGetBroadcastShape(e,l),this.variableNames.push("scale"),f="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${g};
        float scale = ${f};
        float inv = scale * inversesqrt(variance + float(${c}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pa{constructor(e,t,r,a,l,c){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],u.Wap.assertAndGetBroadcastShape(e,t),u.Wap.assertAndGetBroadcastShape(e,r);let g="vec4(0.0)";a!=null&&(u.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),g="getOffsetAtOutCoords()");let f="vec4(1.0)";l!=null&&(u.Wap.assertAndGetBroadcastShape(e,l),this.variableNames.push("scale"),f="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${g};
        vec4 scale = ${f};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${c}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eu=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:a,variance:l,offset:c,scale:g}=n;u.D5U.assert(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),u.D5U.assert(c==null||a.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),u.D5U.assert(g==null||a.shape.length===g.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:f}=t;f==null&&(f=.001);const E=[r,a,l];let T=null;c!=null&&(T=c.shape,E.push(c));let A=null;g!=null&&(A=g.shape,E.push(g));const B=(0,u.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Pa(r.shape,a.shape,l.shape,T,A,f):new Ji(r.shape,a.shape,l.shape,T,A,f);return e.runWebGLProgram(B,E,E[0].dtype)},tu={kernelName:u.sHE,backendName:"webgl",kernelFunc:eu};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nu{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Lt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=su(this.rank);let a;const l=e.map((c,g)=>`sourceLoc.${na[g]} = start[${g}] + coords.${na[g]};`);a=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${l.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${r}));
      }
    `}}const na=["x","y","z","w","u","v"];function su(n){if(n===1)return"sourceLoc";if(n<=6)return na.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ru{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Lt(this.rank),r=hn("coords",this.rank),a=hn("sourceLoc",this.rank),l=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,c=`getChannel(getSource(${a.join()}), ${l})`,g=`
      result.x = ${c};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${c};
        --${a[this.rank-1]};
      }
    `,f=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${c};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${c};
        }
      }
    `,E=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((T,A)=>`start[${A}]`).join()});`:e.map((T,A)=>`${a[A]} = ${r[A]} + start[${A}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${E}
        vec4 result = vec4(0.);
        ${g}
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(n,e,t,r){const a=r.texData.get(n.dataId),l=r.makeTensorInfo(t,n.dtype),c=r.texData.get(l.dataId);Object.assign(c,a),c.refCount=1,c.shape=t,c.dtype=n.dtype;let g=u.kuN.computeFlatOffset(e,u.D5U.computeStrides(n.shape));a.slice&&(g+=a.slice.flatOffset),c.slice={flatOffset:g,origDataId:a.slice&&a.slice.origDataId||n.dataId};const f=r.dataRefCount.get(c.slice.origDataId)||1;return r.dataRefCount.set(c.slice.origDataId,f+1),l}function Rs(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{begin:l,size:c}=r,[g,f]=u.kuN.parseSliceParams(a,l,c);if(u.kuN.assertParamsValid(a,g,f),u.D5U.sizeFromShape(f)===0)return t.makeTensorInfo(f,a.dtype,[]);if(t.shouldExecuteOnCPU([a])||a.dtype==="string"){const A=t.texData.get(a.dataId),B=To(A.values,g,f,a.shape,a.dtype);return t.makeTensorInfo(f,a.dtype,B)}const{isPacked:E}=t.texData.get(a.dataId),T=u.kuN.isSliceContinous(a.shape,g,f);if(E||!T){const A=(0,u.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ru(f):new nu(f),B=[g];return t.runWebGLProgram(A,[a],a.dtype,B)}return t.uploadToGPU(a.dataId),au(a,g,f,t)}const ou={kernelName:u.p2w,backendName:"webgl",kernelFunc:Rs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iu=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{blockShape:l,crops:c}=r;u.D5U.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const g=l.reduce((Ne,et)=>Ne*et),f=u.Wap.getReshaped(a.shape,l,g),E=u.Wap.getPermuted(f.length,l.length),T=u.Wap.getReshapedPermuted(a.shape,l,g),A=u.Wap.getSliceBeginCoords(c,l.length),B=u.Wap.getSliceSize(T,c,l.length),K=[],Q=it({inputs:{x:a},backend:t,attrs:{shape:f}}),ce=fn({inputs:{x:Q},backend:t,attrs:{perm:E}}),ve=it({inputs:{x:ce},backend:t,attrs:{shape:T}}),le=Rs({inputs:{x:ve},backend:t,attrs:{begin:A,size:B}});return K.push(Q),K.push(ce),K.push(ve),K.forEach(Ne=>t.disposeIntermediateTensorInfo(Ne)),le},uu={kernelName:u.zws,backendName:"webgl",kernelFunc:iu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sa(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,weights:l}=e,{size:c}=r,g=t.readSync(a.dataId),f=t.readSync(l.dataId),E=En(g,f,l.dtype,l.shape,c);return t.makeTensorInfo([c],l.dtype,E)}const lu={kernelName:u.zvY,backendName:"webgl",kernelFunc:sa};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cu=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,du=`
  return float(int(a.r) & int(b.r));
`;function pu(n){const{inputs:e,backend:t}=n,{a:r,b:a}=e,l=(0,u.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),c=(0,u.OBj)().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,a])||c===1){const f=t.texData.get(r.dataId).values,E=t.texData.get(a.dataId).values,[T,A]=On(r.shape,a.shape,f,E,r.dtype),B=t.makeTensorInfo(A,r.dtype),K=t.texData.get(B.dataId);return K.values=T,B}let g;return l?g=new Ds(cu,r.shape,a.shape,!1):g=new gs(du,r.shape,a.shape),t.runWebGLProgram(g,[r,a],r.dtype)}const Fa={kernelName:u.hCO,backendName:"webgl",kernelFunc:pu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hu(n){const{inputs:e,backend:t}=n,{s0:r,s1:a}=e,l=t.readSync(r.dataId),c=t.readSync(a.dataId),g=u.Wap.assertAndGetBroadcastShape(Array.from(l),Array.from(c));return t.makeTensorInfo([g.length],"int32",Int32Array.from(g))}const fu={kernelName:u.eEB,backendName:"webgl",kernelFunc:hu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ba=un({opSnippet:"return float(a != b);",cpuKernelImpl:Un,dtype:"bool"}),ra={kernelName:u.yQU,backendName:"webgl",kernelFunc:Ba};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(n){const{inputs:e,backend:t}=n,{input:r}=e,a=t.texData.get(r.dataId);return bn({inputs:{x:a.complexTensorInfos.real},backend:t})}const gu={kernelName:u.xJR,backendName:"webgl",kernelFunc:nr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yu="return float(int(x));";function xu(n,e){const t=new Vn(n.shape,yu),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{dtype:l}=r;if(l==="complex64"){if(a.dtype==="complex64")return bn({inputs:{x:a},backend:t});const c=u.lls(a.shape),g=aa({inputs:{x:a},backend:t,attrs:{dtype:"float32"}}),f=rs({inputs:{real:g,imag:c},backend:t});return c.dispose(),t.disposeIntermediateTensorInfo(g),f}if(a.dtype==="complex64"){const c=nr({inputs:{input:a},backend:t}),g=aa({inputs:{x:c},backend:t,attrs:{dtype:l}});return t.disposeIntermediateTensorInfo(c),g}if(!u.D5U.hasEncodingLoss(a.dtype,l)){const c=bn({inputs:{x:a},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:l}}if(t.shouldExecuteOnCPU([a])){const c=t.texData.get(a.dataId).values,[g,f,E]=$s(c,a.shape,a.dtype,l);return t.makeTensorInfo(g,f,E)}if(l==="int32")return xu(a,t);if(l==="bool"){const c=t.makeTensorInfo([],"bool",u.D5U.getTypedArrayFromDType("bool",1)),f=Ba({inputs:{a,b:c},backend:t});return t.disposeIntermediateTensorInfo(c),f}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${l}`)}const bu={kernelName:u.RFZ,backendName:"webgl",kernelFunc:aa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const La="return ceil(x);",vu=kt({opSnippet:La,packedOpSnippet:La,cpuKernelImpl:Ns}),Eu={kernelName:u.gJX,backendName:"webgl",kernelFunc:vu};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wu{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cu{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tu(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{clipValueMin:l,clipValueMax:c}=r;let g;(0,u.OBj)().getBool("WEBGL_PACK_CLIP")?g=new Cu(a.shape):g=new wu(a.shape);const f=[[l],[c]];return t.runWebGLProgram(g,[a],a.dtype,f)}const Ua={kernelName:u.xnO,backendName:"webgl",kernelFunc:Tu};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oa{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Su(n){const{inputs:e,backend:t}=n,{x:r}=e,a=t.texData.get(r.dataId),l=new oa(r.shape),c=[Va(r,a.complexTensorInfos.real),Va(r,a.complexTensorInfos.imag)];return t.runWebGLProgram(l,c,c[0].dtype)}const $u={kernelName:u.yj2,backendName:"webgl",kernelFunc:Su};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nu{constructor(e){this.outputShape=[],this.outputShape=u.Wap.computeOutShape(e,1),this.variableNames=e.map((c,g)=>`T${g}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let c=1;c<t.length;c++)t[c]=t[c-1]+e[c][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let c=1;c<t.length;c++){const g=t[c-1];r.push(`else if (yC < ${t[c]}) setOutput(getT${c}(yR, yC-${g}));`)}const a=t.length,l=t[t.length-1];r.push(`else setOutput(getT${a}(yR, yC-${l}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tn{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=u.Wap.computeOutShape(e,t);const r=this.outputShape,a=r.length,l=Lt(a),c=hn("coords",a),g=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((ce,ve)=>`T${ve}`);const f=new Array(e.length-1);f[0]=e[0][t];for(let ce=1;ce<f.length;ce++)f[ce]=f[ce-1]+e[ce][t];const E=g[t],T=g.slice(-2),A=g.join();let B=`if (${E} < ${f[0]}) {
        return getChannel(
            getT0(${A}), vec2(${T.join()}));
        }`;for(let ce=1;ce<f.length;ce++){const ve=f[ce-1];B+=`
        if (${E} < ${f[ce]}  && ${E} >= ${f[ce-1]}) {
          return getChannel(
            getT${ce}(${Rr(g,E,ve)}),
            vec2(${Rr(T,E,ve)}));
        }`}const K=f.length,Q=f[f.length-1];B+=`
        return getChannel(
          getT${K}(${Rr(g,E,Q)}),
          vec2(${Rr(T,E,Q)}));`,this.userCode=`
      float getValue(${g.map(ce=>"int "+ce)}) {
        ${B}
      }

      void main() {
        ${l} coords = getOutputCoords();
        vec4 result = vec4(getValue(${c}), 0., 0., 0.);

        ${c[a-1]} = ${c[a-1]} + 1;
        if (${c[a-1]} < ${r[a-1]}) {
          result.g = getValue(${c});
        }

        ${c[a-2]} = ${c[a-2]} + 1;
        if (${c[a-2]} < ${r[a-2]}) {
          result.a = getValue(${c});
        }

        ${c[a-1]} = ${c[a-1]} - 1;
        if (${c[a-2]} < ${r[a-2]} &&
            ${c[a-1]} < ${r[a-1]}) {
          result.b = getValue(${c});
        }
        setOutput(result);
      }
    `}}function Rr(n,e,t){const r=n.indexOf(e);return n.map((l,c)=>c===r?`${l} - ${t}`:l).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ar(n){const{inputs:e,backend:t}=n,{input:r}=e,a=t.texData.get(r.dataId);return bn({inputs:{x:a.complexTensorInfos.imag},backend:t})}const Iu={kernelName:u.J_u,backendName:"webgl",kernelFunc:Ar};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sr(n,e,t){const r=n[0].dtype;if(r==="complex64"){const K=n.map(Ne=>nr({inputs:{input:Ne},backend:t})),Q=n.map(Ne=>Ar({inputs:{input:Ne},backend:t})),ce=sr(K,e,t),ve=sr(Q,e,t),le=rs({inputs:{real:ce,imag:ve},backend:t});return K.forEach(Ne=>t.disposeIntermediateTensorInfo(Ne)),Q.forEach(Ne=>t.disposeIntermediateTensorInfo(Ne)),t.disposeIntermediateTensorInfo(ce),t.disposeIntermediateTensorInfo(ve),le}let a=t.shouldExecuteOnCPU(n);if(r==="string"&&(a=!0),a){const K=n.map(Je=>{const Nt=[-1,u.D5U.sizeFromShape(Je.shape.slice(e))];return it({inputs:{x:Je},backend:t,attrs:{shape:Nt}})}),Q=K.map(Je=>({vals:t.readSync(Je.dataId),shape:Je.shape})),ce=u.Wap.computeOutShape(K.map(Je=>Je.shape),1),ve=K[0].shape[0]===1,le=so(Q,ce,r,ve),Ne=u.Wap.computeOutShape(n.map(Je=>Je.shape),e),et=t.makeTensorInfo(Ne,r,le);return K.forEach(Je=>t.disposeIntermediateTensorInfo(Je)),et}const l=n.filter(K=>u.D5U.sizeFromShape(K.shape)>0),c=(0,u.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&l[0].shape.length>1;if(l.length===1){const K=c?new Vn(n[0].shape,ns):new ss(n[0].shape,ns);return t.runWebGLProgram(K,n,r)}const g=(0,u.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(l.length>g){const K=[];for(let ce=0;ce<l.length;ce+=g){const ve=l.slice(ce,ce+g);K.push(sr(ve,e,t))}const Q=sr(K,e,t);for(const ce of K)t.disposeIntermediateTensorInfo(ce);return Q}if(c){const K=new Tn(l.map(Q=>Q.shape),e);return t.runWebGLProgram(K,l,r)}const{tensors2D:f,outShape:E}=_u(l,e,t),T=new Nu(f.map(K=>K.shape)),A=t.runWebGLProgram(T,f,r);f.forEach(K=>t.disposeIntermediateTensorInfo(K));const B=it({inputs:{x:A},attrs:{shape:E},backend:t});return t.disposeIntermediateTensorInfo(A),B}function _u(n,e,t){const r=u.Wap.computeOutShape(n.map(l=>l.shape),e);return{tensors2D:n.map(l=>it({inputs:{x:l},attrs:{shape:[-1,u.D5U.sizeFromShape(l.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(n){const{inputs:e,backend:t,attrs:r}=n,{axis:a}=r,l=u.D5U.parseAxisParam(a,e[0].shape)[0],c=e.map(E=>E.shape);u.Wap.assertParamsConsistent(c,l);const g=u.Wap.computeOutShape(e.map(E=>E.shape),l);if(u.D5U.sizeFromShape(g)===0)return t.makeTensorInfo(g,e[0].dtype,[]);const f=e.filter(E=>u.D5U.sizeFromShape(E.shape)>0);return f.length===1?bn({inputs:{x:f[0]},backend:t}):sr(f,l,t)}const Du={kernelName:u.Eh3,backendName:"webgl",kernelFunc:Wa};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ma{constructor(e,t=!1,r=null,a=!1,l=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const c=e.padInfo.top,g=e.padInfo.left,f=e.strideHeight,E=e.strideWidth,T=e.dilationHeight,A=e.dilationWidth,B=e.filterHeight,K=e.filterWidth,Q=Math.floor(e.inChannels/4)*4,ce=e.inChannels%4,ve=e.dataFormat==="channelsLast",le=ve?1:2,Ne=ve?2:3,et=ve?3:1;let Je="",lt="";r&&(a?Je=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:l?Je=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:Je=`
          float activation(float x) {
            ${r}
          }
        `,lt="result = activation(result);");const Nt=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${Je}

      const ivec2 strides = ivec2(${f}, ${E});
      const ivec2 pads = ivec2(${c}, ${g});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${et}];

        ivec2 xRCCorner =
            ivec2(coords[${le}], coords[${Ne}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${B}; wR++) {
          int xR = xRCorner + wR * ${T};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${K}; wC++) {
            int xC = xCCorner + wC * ${A};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${Q}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${ve}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${ce===1}) {

              if (${ve}) {
                dotProd +=
                    getX(batch, xR, xC, ${Q}) *
                    getW(wR, wC, ${Q}, d2);
              } else {
                dotProd +=
                    getX(batch, ${Q}, xR, xC) *
                    getW(wR, wC, ${Q}, d2);
              }

            } else if (${ce===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${Q}, d2),
                getW(wR, wC, ${Q} + 1, d2)
              );

              if (${ve}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${Q}),
                  getX(batch, xR, xC, ${Q} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${Q}, xR, xC),
                  getX(batch, ${Q} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${ce===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${Q}, d2),
                getW(wR, wC, ${Q} + 1, d2),
                getW(wR, wC, ${Q} + 2, d2)
              );

              if (${ve}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${Q}),
                  getX(batch, xR, xC, ${Q} + 1),
                  getX(batch, xR, xC, ${Q} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${Q}, xR, xC),
                  getX(batch, ${Q} + 1, xR, xC),
                  getX(batch, ${Q} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${Nt}
        ${lt}
        setOutput(result);
      }
    `}}class Ou{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,a=e.padInfo.left,l=e.strideDepth,c=e.strideHeight,g=e.strideWidth,f=e.dilationDepth,E=e.dilationHeight,T=e.dilationWidth,A=e.filterDepth,B=e.filterHeight,K=e.filterWidth,Q=Math.floor(e.inChannels/4)*4,ce=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${l}, ${c}, ${g});
      const ivec3 pads = ivec3(${t}, ${r}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${A}; wF++) {
          int xF = xFCorner + wF * ${f};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${B}; wR++) {
            int xR = xRCorner + wR * ${E};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${K}; wC++) {
              int xC = xCCorner + wC * ${T};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${Q}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${ce===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${Q}) *
                  getW(wF, wR, wC, ${Q}, d2);
              } else if (${ce===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${Q}),
                  getX(batch, xF, xR, xC, ${Q} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${Q}, d2),
                  getW(wF, wR, wC, ${Q} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${ce===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${Q}),
                  getX(batch, xF, xR, xC, ${Q} + 1),
                  getX(batch, xF, xR, xC, ${Q} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${Q}, d2),
                  getW(wF, wR, wC, ${Q} + 1, d2),
                  getW(wF, wR, wC, ${Q} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class za{constructor(e,t=!1,r=null,a=!1,l=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Vt(this.outputShape.length);const c=e.padInfo.left,g=e.strideWidth,f=e.dilationWidth,E=e.filterHeight,T=e.filterWidth,A=T;let B=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let ve=0;ve<T;ve++)B+=`
           vec4 xTexelC${ve*2};
           int xTexelC${ve*2}Ready;
           vec4 xTexelC${ve*2+1};
           int xTexelC${ve*2+1}Ready;
           vec4 xC${ve};`;B+=`
     for (int r = 0; r < ${E}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let ve=0;ve<T;ve++)B+=`
           xTexelC${ve*2} = vec4(0.0);
           xTexelC${ve*2}Ready = 0;
           xTexelC${ve*2+1} = vec4(0.0);
           xTexelC${ve*2+1}Ready = 0;
           xC${ve} = vec4(0.0);`;B+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let ve=0;ve<(A+1)/2;ve++){const le=ve*2;if(B+=`
           xC = xCCorner + ${le*f};
           `,g===1){if(le<T&&(c%2===1?(B+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${le}Ready == 0) {
                   xTexelC${le} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${le}.zw = vec2(0.0);
                   }
                   xTexelC${le}Ready = 1;
                 }
               `,f===1&&le>0?B+=`
                 xC${le} = vec4(xTexelC${le-2}.zw, xTexelC${le}.xy);
                 `:B+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${le} = vec4(previous.zw, xTexelC${le}.xy);
                   } else {
                     xC${le} = vec4(0.0, 0.0, xTexelC${le}.xy);
                   }
                   `):B+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${le}Ready == 0) {
                   xTexelC${le} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${le}.zw = vec2(0.0);
                   }
                   xTexelC${le}Ready = 1;
                 }

                 xC${le} = xTexelC${le};
                 `,le+1<T)){const Ne=c%2===0?u.D5U.nearestLargerEven(f):f;f%2===0&&c%2===1||f%2!==0&&c%2!==1?(B+=`
                   xCOffset = xC + imod(pads[1], 2) + ${Ne};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${le+1}Ready == 0) {
                     xTexelC${le+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${le+1}.zw = vec2(0.0);
                     }
                     xTexelC${le+1}Ready = 1;
                   }
                   `,f>1?B+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${le+1} = vec4(previous.zw, xTexelC${le+1}.xy);
                     } else {
                      xC${le+1} = vec4(0.0, 0.0, xTexelC${le+1}.xy);
                     }
                     `:B+=`
                     xC${le+1} = vec4(xTexelC${le}.zw, xTexelC${le+1}.xy);
                     `):Ne===1?B+=`
                     xC${le+1} = xTexelC${le};
                     `:B+=`
                     xCOffset = xC + ${Ne};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${le+1}Ready == 0) {
                       xTexelC${le+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${le+1}.zw = vec2(0.0);
                       }
                       xTexelC${le+1}Ready = 1;
                     }

                     xC${le+1} = xTexelC${le+1};
                     `}}else le<T&&(c%2===1?(B+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${le}Ready == 0) {
                   xTexelC${le} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${le}.zw = vec2(0.0);
                   }
                   xTexelC${le}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${le+1}Ready == 0) {
                   xTexelC${le+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${le+1}.zw = vec2(0.0);
                   }
                   xTexelC${le+1}Ready = 1;
                 }

                 xC${le} = vec4(xTexelC${le}.zw, xTexelC${le+1}.zw);
               `,le+1<T&&(B+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${le+1} = vec4(xTexelC${le+1}.xy, final.xy);
                 `)):(B+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${le}Ready == 0) {
                   xTexelC${le} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${le}.zw = vec2(0.0);
                   }
                   xTexelC${le}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${le+1}Ready == 0) {
                   xTexelC${le+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${le+1}.zw = vec2(0.);
                   }
                   xTexelC${le+1}Ready = 1;
                 }

                 xC${le} = vec4(
                   xTexelC${le}.xy, xTexelC${le+1}.xy);
               `,le+1<T&&(B+=`
                   xC${le+1} = vec4(xTexelC${le}.zw, xTexelC${le+1}.zw);
                 `)));le<T&&(B+=`
             wTexel = getW(r, ${le}, d1, d2);
             dotProd += xC${le}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${le}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,le+1<T&&(B+=`
               wTexel = getW(r, ${le+1}, d1, d2);
               dotProd += xC${le+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${le+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}B+=`
     }
   `,B+=`
     }
   `,B+=`
     }
   `;let K="",Q="";r&&(a?K=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:l?K=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:K=`vec4 activation(vec4 x) {
           ${r}
         }`,Q="result = activation(result);");const ce=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${K}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${B}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${ce}
         ${Q}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ru{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Vt(this.outputShape.length);const{dataFormat:r}=t,a=We(),l=r==="channelsLast",c=l?1:2,g=l?2:3,f=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let E="";for(let T=0;T<=1;T++)for(let A=0;A<=1;A++)E+=`
          blockIndex = rc.z + ${A};
          pos = rc.y + ${T};

          ${f}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${c}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${g}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${l}) {
                  innerDims = vec2(d1, ch);
                  result[${T*2+A}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${T*2+A}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${E}

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kr(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function Ga({x:n,filter:e,convInfo:t,backend:r,bias:a=null,preluActivationWeights:l=null,leakyreluAlpha:c=0,activation:g=null}){const f=n.shape,E=r.texData.get(n.dataId),T=t.inChannels,A=f[0]*f[1]*f[2],B=t.outChannels,K=t.dataFormat==="channelsLast",Q=!1,ce=!1;let ve;const le=[];if(l!=null){const Je=kr(l.shape,K);Je!=null&&(l=it({inputs:{x:l},backend:r,attrs:{shape:Je}}),le.push(l))}if(a!=null){const Je=kr(a.shape,K);Je!=null&&(a=it({inputs:{x:a},backend:r,attrs:{shape:Je}}),le.push(a))}if(!((A===1||B===1)&&T>os)&&E.isPacked&&K&&E.texture!=null&&f[2]%2!==0&&u.D5U.arraysEqual(E.shape.slice(-3),f.slice(-3))){const Je=f[0]*f[1]*(f[2]+1),lt={dataId:n.dataId,shape:[1,Je,t.inChannels],dtype:n.dtype},Nt=E.shape;E.shape=E.shape.slice(),E.shape[E.shape.length-2]++,u.D5U.assert(ln(E.shape,lt.shape),()=>`packed reshape ${E.shape} to ${lt.shape} isn't free`);const Et=it({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});le.push(Et);const gt=_r({a:lt,b:Et,backend:r,transposeA:Q,transposeB:ce,bias:a,activation:g,preluActivationWeights:l,leakyreluAlpha:c}),Pt=r.texData.get(gt.dataId);u.D5U.assert(Pt.isPacked,()=>"batchMatMul result is expected to be packed"),E.shape=Nt,Pt.shape=t.outShape,ve=bn({inputs:{x:gt},backend:r}),ve.shape=t.outShape,le.push(gt)}else{const Je=t.outHeight*t.outWidth,lt=it({inputs:{x:n},backend:r,attrs:{shape:K?[t.batchSize,Je,t.inChannels]:[t.batchSize,t.inChannels,Je]}}),Nt=it({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),Et=_r({a:K?lt:Nt,b:K?Nt:lt,transposeA:!K,transposeB:ce,backend:r,bias:a,activation:g,preluActivationWeights:l,leakyreluAlpha:c});ve=it({inputs:{x:Et},backend:r,attrs:{shape:t.outShape}}),le.push(lt),le.push(Nt),le.push(Et)}for(const Je of le)r.disposeIntermediateTensorInfo(Je);return ve}function ia({x:n,filter:e,convInfo:t,backend:r,bias:a=null,preluActivationWeights:l=null,leakyreluAlpha:c=0,activation:g=null}){const{filterWidth:f,filterHeight:E,inChannels:T,outWidth:A,outHeight:B,dataFormat:K}=t,Q=K==="channelsLast",ce=f*E*T,ve=B*A,le=[t.batchSize,ce,ve],Ne=!0,et=!1,Je=[];if(l!=null){const vn=kr(l.shape,Q);vn!=null&&(l=it({inputs:{x:l},backend:r,attrs:{shape:vn}}),Je.push(l))}if(a!=null){const vn=kr(a.shape,Q);vn!=null&&(a=it({inputs:{x:a},backend:r,attrs:{shape:vn}}),Je.push(a))}const lt=it({inputs:{x:e},backend:r,attrs:{shape:[1,ce,u.D5U.sizeFromShape(e.shape)/ce]}});Je.push(lt);const Nt=new Ru(le,t),Et=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],gt=r.runWebGLProgram(Nt,[n],"float32",Et),Pt=it({inputs:{x:gt},backend:r,attrs:{shape:le}});Je.push(gt),Je.push(Pt);const Dt=a!=null,Jt=l!=null,sn=g==="leakyrelu",us=g?$r(g,!0):null,Nn=new Nr(Q?Pt.shape:lt.shape,Q?lt.shape:Pt.shape,Q?[t.batchSize,ve,t.outChannels]:[t.batchSize,t.outChannels,ve],Ne,et,Dt,us,Jt,sn),An=Q?[Pt,lt]:[lt,Pt];if(a&&An.push(a),Jt&&An.push(l),sn){const vn=r.makeTensorInfo([],"float32",u.D5U.createScalarValue(c,"float32"));An.push(vn),Je.push(vn)}const Mn=r.runWebGLProgram(Nn,An,"float32"),Yn=it({inputs:{x:Mn},backend:r,attrs:{shape:t.outShape}});Je.push(Mn);for(const vn of Je)r.disposeIntermediateTensorInfo(vn);return Yn}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Au(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,filter:l}=e,{strides:c,pad:g,dataFormat:f,dilations:E,dimRoundingMode:T}=r,A=u.Wap.convertConv2DDataFormat(f),B=u.Wap.computeConv2DInfo(a.shape,l.shape,c,E,g,T,!1,A);let K;if(B.filterHeight===1&&B.filterWidth===1&&B.dilationHeight===1&&B.dilationWidth===1&&B.strideHeight===1&&B.strideWidth===1&&(B.padInfo.type==="SAME"||B.padInfo.type==="VALID"))K=Ga({x:a,filter:l,convInfo:B,backend:t});else if(B.strideWidth<=2&&A==="channelsLast"&&(0,u.OBj)().getBool("WEBGL_EXP_CONV")){const ce=new za(B),ve=[[B.padInfo.top,B.padInfo.left],[B.strideHeight,B.strideWidth],[B.dilationHeight,B.dilationWidth],[B.inHeight,B.inWidth]];K=t.runWebGLProgram(ce,[a,l],"float32",ve)}else if((0,u.OBj)().getBool("WEBGL_CONV_IM2COL"))K=ia({x:a,filter:l,convInfo:B,backend:t});else{const ce=new Ma(B);K=t.runWebGLProgram(ce,[a,l],"float32")}const Q=it({inputs:{x:K},backend:t,attrs:{shape:B.outShape}});return t.disposeIntermediateTensorInfo(K),Q}const Ka={kernelName:u.mhS,backendName:"webgl",kernelFunc:Au};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ku{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,a=e.padInfo.top,l=e.padInfo.left,c=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${c?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Pu{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,a=e.strideHeight,l=e.strideWidth,c=e.dataFormat==="channelsLast",g=t-1-e.padInfo.top,f=r-1-e.padInfo.left,E=c?1:2,T=c?2:3,A=c?3:1;this.userCode=`
      const ivec2 pads = ivec2(${g}, ${f});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${A}];

        ivec2 dyCorner = ivec2(coords[${E}], coords[${T}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${l}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${c}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Fu{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,a=e.strideWidth,l=e.padInfo.front,c=e.padInfo.top,g=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${l};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${c};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${g};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Bu{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,a=e.filterWidth,l=e.strideDepth,c=e.strideHeight,g=e.strideWidth,f=t-1-e.padInfo.front,E=r-1-e.padInfo.top,T=a-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${f}, ${E}, ${T});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${l}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${c}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${g}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lu(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,dy:l}=e,{strides:c,pad:g,dataFormat:f,dimRoundingMode:E,filterShape:T}=r,A=u.Wap.convertConv2DDataFormat(f),B=u.Wap.computeConv2DInfo(a.shape,T,c,1,g,E,!1,A),K=new ku(B);return t.runWebGLProgram(K,[a,l],"float32")}const Uu={kernelName:u.wUP,backendName:"webgl",kernelFunc:Lu};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vu{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Vt(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,a=t-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wu(n){const{inputs:e,backend:t,attrs:r}=n,{dy:a,filter:l}=e,{inputShape:c,strides:g,pad:f,dataFormat:E,dimRoundingMode:T}=r,A=u.Wap.convertConv2DDataFormat(E),B=u.Wap.computeConv2DInfo(c,l.shape,g,1,f,T,!1,A);if((0,u.OBj)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&A==="channelsLast"){const K=[[B.strideHeight,B.strideWidth]],Q=new Vu(B);return t.runWebGLProgram(Q,[a,l],"float32",K)}else{const K=new Pu(B);return t.runWebGLProgram(K,[a,l],"float32")}}const Mu={kernelName:u.wm,backendName:"webgl",kernelFunc:Wu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zu(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,filter:l}=e,{strides:c,pad:g,dilations:f}=r,E=u.Wap.computeConv3DInfo(a.shape,l.shape,c,f,g),T=new Ou(E);return t.runWebGLProgram(T,[a,l],"float32")}const Gu={kernelName:u.x12,backendName:"webgl",kernelFunc:zu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ku(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,dy:l}=e,{strides:c,pad:g,filterShape:f}=r,E=u.Wap.computeConv3DInfo(a.shape,f,c,1,g),T=new Fu(E);return t.runWebGLProgram(T,[a,l],"float32")}const As={kernelName:u.o2y,backendName:"webgl",kernelFunc:Ku};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hu(n){const{inputs:e,backend:t,attrs:r}=n,{dy:a,filter:l}=e,{pad:c,strides:g,inputShape:f}=r,E=u.Wap.computeConv3DInfo(f,l.shape,g,1,c),T=new Bu(E);return t.runWebGLProgram(T,[a,l],"float32")}const ju={kernelName:u.ik2,backendName:"webgl",kernelFunc:Hu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ua=Os+`
  return cos(x);
`,Xu=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${ys}
  return result;
`,Yu=kt({opSnippet:ua,packedOpSnippet:Xu}),Qu={kernelName:u.mc4,backendName:"webgl",kernelFunc:Yu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qu=kt({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),Zu={kernelName:u.TR1,backendName:"webgl",kernelFunc:qu};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ju{constructor(e,t,r,a,l){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[c,g,f,E]=e,[T]=t,[A,B]=r;this.outputShape=[T,A,B,E];const K=a==="bilinear"?1:0,[Q,ce]=[`${g-1}.0`,`${f-1}.0`],[ve,le,Ne]=A>1?[`${(g-1)/(A-1)}`,"(y2-y1) * height_ratio",`y1*${Q} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${Q}`],[et,Je,lt]=B>1?[`${(f-1)/(B-1)}`,"(x2-x1) * width_ratio",`x1*${ce} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${ce}`];this.userCode=`
      const float height_ratio = float(${ve});
      const float width_ratio = float(${et});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${c}) {
          return;
        }

        float height_scale = ${le};
        float width_scale = ${Je};

        float in_y = ${Ne};
        if( in_y < 0.0 || in_y > ${Q} ) {
          setOutput(float(${l}));
          return;
        }
        float in_x = ${lt};
        if( in_x < 0.0 || in_x > ${ce} ) {
          setOutput(float(${l}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${K} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const el=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:a,boxes:l,boxInd:c}=e,{cropSize:g,method:f,extrapolationValue:E}=r,T=new Ju(a.shape,l.shape,g,f,E);return t.runWebGLProgram(T,[a,l,c],"float32")},tl={kernelName:u.VcC,backendName:"webgl",kernelFunc:el};var rr;(function(n){n.Prod="*",n.Sum="+"})(rr||(rr={}));class Ha{constructor(e,t,r,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const l=this.outputShape.length,c=this.op===rr.Prod?"1.0":"0.0",g=r?c:`getX(${ja(l,"coords",this.op)})`,f=this.outputShape[this.outputShape.length-1];let E="",T="";r?(E=a?`end != ${f-1}`:"end != 0",T=a?"end + 1":"end - 1"):(E=a?`end + pow2 < ${f}`:"end >= pow2",T=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Lt(l)} coords = getOutputCoords();
        int end = ${Xa(l,"coords",this.op)};
        float val = ${g};
        int pow2 = int(pow(2.0, index));
        if (${E}) {
          int idx = ${T};
          ${Xa(l,"coords",this.op)} = idx;
          val ${this.op}= getX(${ja(l,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function ja(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Xa(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ya(n,e,t,r,a,l){const c=e.shape.length,g=u.Wap.getAxesPermutation([r],c);let f=e;g!=null&&(f=fn({inputs:{x:e},backend:t,attrs:{perm:g}}));const E=u.Wap.getInnerMostAxes(1,c)[0];if(E!==c-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const T=f.shape[E];let A=bn({inputs:{x:f},backend:t});for(let B=0;B<=Math.ceil(Math.log2(T))-1;B++){const K=new Ha(n,f.shape,!1,l),Q=[[B]],ce=A;A=t.runWebGLProgram(K,[A],A.dtype,Q),t.disposeIntermediateTensorInfo(ce)}if(a){const B=new Ha(n,f.shape,a,l),K=A;A=t.runWebGLProgram(B,[A],A.dtype),t.disposeIntermediateTensorInfo(K)}if(g!=null){const B=u.Wap.getUndoAxesPermutation(g),K=fn({inputs:{x:A},backend:t,attrs:{perm:B}});return t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(f),K}return A}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nl(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{axis:l,exclusive:c,reverse:g}=r;return Ya(rr.Prod,a,t,l,c,g)}const sl={kernelName:u.Byc,backendName:"webgl",kernelFunc:nl};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rl(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{axis:l,exclusive:c,reverse:g}=r;return Ya(rr.Sum,a,t,l,c,g)}const al={kernelName:u.iHb,backendName:"webgl",kernelFunc:rl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ol(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,weights:l}=e,{size:c,binaryOutput:g}=r;if(a.shape.length===1){const f=t.readSync(a.dataId),E=t.readSync(l.dataId),T=En(f,E,l.dtype,l.shape,c);return t.makeTensorInfo([c],l.dtype,T)}else if(a.shape.length===2){const f=t.bufferSync(a),E=t.bufferSync(l),T=Ut(f,E,c,g);return t.makeTensorInfo(T.shape,l.dtype,T.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const il={kernelName:u.QRR,backendName:"webgl",kernelFunc:ol};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ul{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ll(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{blockSize:l,dataFormat:c}=r,g=a.shape[0],f=c==="NHWC"?a.shape[1]:a.shape[2],E=c==="NHWC"?a.shape[2]:a.shape[3],T=c==="NHWC"?a.shape[3]:a.shape[1],A=f*l,B=E*l,K=T/(l*l),Q=c==="NHWC"?[g,A,B,K]:[g,K,A,B],ce=new ul(Q,l,c);return t.runWebGLProgram(ce,[a],a.dtype)}const cl={kernelName:u.T0n,backendName:"webgl",kernelFunc:ll};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qa{constructor(e,t=!1,r=null,a=!1,l=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Vt(this.outputShape.length);const c=e.filterHeight,g=e.filterWidth,f=e.outChannels/e.inChannels;let E="",T="";r&&(a?E=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:l?E=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:E=`
          float activation(float x) {
            ${r}
          }
        `,T="result = activation(result);");const A=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${E}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${f};
        int q = d2 - d1 * ${f};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${g}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${A}
        ${T}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class la{constructor(e,t=!1,r=null,a=!1,l=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Vt(this.outputShape.length);const c=e.outChannels/e.inChannels,g=e.padInfo.left,f=e.strideWidth,E=e.dilationWidth,T=e.filterHeight,A=e.filterWidth,B=A;let K=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let le=0;le<A;le++)K+=`
          vec4 xTexelC${le*2};
          int xTexelC${le*2}Ready;
          vec4 xTexelC${le*2+1};
          int xTexelC${le*2+1}Ready;
          vec4 xC${le};`;K+=`
    for (int r = 0; r < ${T}; r++) {
      `;for(let le=0;le<A;le++)K+=`
          xTexelC${le*2} = vec4(0.0);
          xTexelC${le*2}Ready = 0;
          xTexelC${le*2+1} = vec4(0.0);
          xTexelC${le*2+1}Ready = 0;
          xC${le} = vec4(0.0);`;K+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let le=0;le<(B+1)/2;le++){const Ne=le*2;if(K+=`
          xC = xCCorner + ${Ne*E};
          `,f===1){if(Ne<A&&(g%2===1?(K+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${Ne}Ready == 0) {
                  xTexelC${Ne} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${Ne}.zw = vec2(0.0);
                  }
                  xTexelC${Ne}Ready = 1;
                }
              `,E===1&&Ne>0?K+=`
                xC${Ne} = vec4(xTexelC${Ne-2}.zw, xTexelC${Ne}.xy);
                `:K+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${Ne} = vec4(previous.zw, xTexelC${Ne}.xy);
                  } else {
                    xC${Ne} = vec4(0.0, 0.0, xTexelC${Ne}.xy);
                  }
                  `):K+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${Ne}Ready == 0) {
                  xTexelC${Ne} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${Ne}.zw = vec2(0.0);
                  }
                  xTexelC${Ne}Ready = 1;
                }

                xC${Ne} = xTexelC${Ne};
                `,Ne+1<A)){const et=g%2===0?u.D5U.nearestLargerEven(E):E;E%2===0&&g%2===1||E%2!==0&&g%2!==1?(K+=`
                  xCOffset = xC + imod(pads[1], 2) + ${et};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${Ne+1}Ready == 0) {
                    xTexelC${Ne+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${Ne+1}.zw = vec2(0.0);
                    }
                    xTexelC${Ne+1}Ready = 1;
                  }
                  `,E>1?K+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${Ne+1} = vec4(previous.zw, xTexelC${Ne+1}.xy);
                    } else {
                     xC${Ne+1} = vec4(0.0, 0.0, xTexelC${Ne+1}.xy);
                    }
                    `:K+=`
                    xC${Ne+1} = vec4(xTexelC${Ne}.zw, xTexelC${Ne+1}.xy);
                    `):et===1?K+=`
                    xC${Ne+1} = xTexelC${Ne};
                    `:K+=`
                    xCOffset = xC + ${et};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${Ne+1}Ready == 0) {
                      xTexelC${Ne+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${Ne+1}.zw = vec2(0.0);
                      }
                      xTexelC${Ne+1}Ready = 1;
                    }

                    xC${Ne+1} = xTexelC${Ne+1};
                    `}}else Ne<A&&(g%2===1?(K+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${Ne}Ready == 0) {
                  xTexelC${Ne} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${Ne}.zw = vec2(0.0);
                  }
                  xTexelC${Ne}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${Ne+1}Ready == 0) {
                  xTexelC${Ne+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${Ne+1}.zw = vec2(0.0);
                  }
                  xTexelC${Ne+1}Ready = 1;
                }

                xC${Ne} = vec4(xTexelC${Ne}.zw, xTexelC${Ne+1}.zw);
              `,Ne+1<A&&(K+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${Ne+1} = vec4(xTexelC${Ne+1}.xy, final.xy);
                `)):(K+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${Ne}Ready == 0) {
                  xTexelC${Ne} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${Ne}.zw = vec2(0.0);
                  }
                  xTexelC${Ne}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${Ne+1}Ready == 0) {
                  xTexelC${Ne+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${Ne+1}.zw = vec2(0.);
                  }
                  xTexelC${Ne+1}Ready = 1;
                }

                xC${Ne} = vec4(
                  xTexelC${Ne}.xy, xTexelC${Ne+1}.xy);
              `,Ne+1<A&&(K+=`
                  xC${Ne+1} = vec4(xTexelC${Ne}.zw, xTexelC${Ne+1}.zw);
                `)));Ne<A&&(K+=`
            wTexel = getW(r, ${Ne}, d1, q);
            dotProd += xC${Ne} * vec4(wTexel.xz, wTexel.xz);
          `,Ne+1<A&&(K+=`
              wTexel = getW(r, ${Ne+1}, d1, q);
              dotProd += xC${Ne+1} * vec4(wTexel.xz, wTexel.xz);
            `))}K+=`
    }
  `,K+=`
      }
    `;let Q="",ce="";r&&(a?Q=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:l?Q=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:Q=`vec4 activation(vec4 x) {
          ${r}
        }`,ce="result = activation(result);");const ve=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${Q}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${K}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${ve}
        ${ce}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dl(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,filter:l}=e,{strides:c,pad:g,dilations:f,dimRoundingMode:E}=r;let T=f;T==null&&(T=[1,1]),u.D5U.assert(u.Wap.eitherStridesOrDilationsAreOne(c,T),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${T}'`);const A=u.Wap.computeConv2DInfo(a.shape,l.shape,c,T,g,E,!0);let B;(0,u.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&A.strideWidth<=2&&A.outChannels/A.inChannels===1?B=new la(A):B=new Qa(A);const K=[[A.padInfo.top,A.padInfo.left],[A.strideHeight,A.strideWidth],[A.dilationHeight,A.dilationWidth],[A.inHeight,A.inWidth]];return t.runWebGLProgram(B,[a,l],"float32",K)}const yn={kernelName:u.cie,backendName:"webgl",kernelFunc:dl};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pl{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,a=e.padInfo.top,l=e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${c} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${a};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Xn{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,a=e.strideHeight,l=e.strideWidth,c=t-1-e.padInfo.top,g=r-1-e.padInfo.left,f=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${c}, ${g});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${l}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${f}; dm++) {
              int d2 = d1 * ${f} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hl(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,dy:l}=e,{strides:c,dilations:g,pad:f,dimRoundingMode:E,filterShape:T}=r,A=u.Wap.computeConv2DInfo(a.shape,T,c,g,f,E,!0),B=new pl(A);return t.runWebGLProgram(B,[a,l],"float32")}const fl={kernelName:u.sL$,backendName:"webgl",kernelFunc:hl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ml(n){const{inputs:e,backend:t,attrs:r}=n,{dy:a,filter:l}=e,{strides:c,dilations:g,pad:f,dimRoundingMode:E,inputShape:T}=r,A=u.Wap.computeConv2DInfo(T,l.shape,c,g,f,E,!0),B=new Xn(A);return t.runWebGLProgram(B,[a,l],"float32")}const gl={kernelName:u.y7R,backendName:"webgl",kernelFunc:ml};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yl{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xl(n){const{inputs:e,backend:t}=n,{x:r}=e,a=[...r.shape,...r.shape],l=u.D5U.sizeFromShape(r.shape),c=it({inputs:{x:r},backend:t,attrs:{shape:[l]}}),g=new yl(l),f=t.runWebGLProgram(g,[c],c.dtype),E=it({inputs:{x:f},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(f),E}const bl={kernelName:u.$w,backendName:"webgl",kernelFunc:xl};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vl{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:a,strideHeight:l,strideWidth:c,filterHeight:g,filterWidth:f,dilationHeight:E,dilationWidth:T}=e,{top:A,left:B}=a;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${A}, ${B});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${g}; h++) {
          int hIn = hBeg + h * ${E};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${f}; w++) {
              int wIn = wBeg + w * ${T};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function El(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,filter:l}=e,{strides:c,pad:g,dilations:f}=r,E=u.Wap.computeDilation2DInfo(a.shape,l.shape,c,g,"NHWC",f);let T;const A=new vl(E);T=t.runWebGLProgram(A,[a,l],"float32");const B=it({inputs:{x:T},backend:t,attrs:{shape:E.outShape}});return t.disposeIntermediateTensorInfo(T),B}const wl={kernelName:u.p4S,backendName:"webgl",kernelFunc:El};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cl(n){const{inputs:e,backend:t,attrs:r}=n,{equation:a}=r,l=e,{allDims:c,summedDims:g,idDims:f}=u.Wap.decodeEinsumEquation(a,l.length);u.Wap.checkEinsumDimSizes(c.length,f,l);const{path:E,steps:T}=u.Wap.getEinsumComputePath(g,f),A=T.length;let B=null,K=c.length;const Q=[];for(let ce=0;ce<A;++ce){for(const ve of T[ce]){const{permutationIndices:le,expandDims:Ne}=u.Wap.getEinsumPermutation(K,f[ve]);let et;u.Wap.isIdentityPermutation(le)?et=l[ve]:(et=fn({inputs:{x:l[ve]},backend:t,attrs:{perm:le}}),Q.push(et));const Je=et.shape.slice();for(let lt=0;lt<Ne.length;++lt)Je.splice(Ne[lt],0,1);u.D5U.arraysEqual(et.shape,Je)||(et=it({inputs:{x:et},backend:t,attrs:{shape:Je}}),Q.push(et)),B===null?B=et:(B=Yr({inputs:{a:et,b:B},backend:t}),Q.push(B))}ce<A-1&&(E[ce]>=0&&(B=Ir({inputs:{x:B},backend:t,attrs:{axis:E[ce]-(c.length-K),keepDims:!1}}),Q.push(B)),K--)}for(const ce of Q)ce!==B&&t.disposeIntermediateTensorInfo(ce);return B}const Tl={kernelName:u.$g6,backendName:"webgl",kernelFunc:Cl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sl=kt({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),$l={kernelName:u.SX0,backendName:"webgl",kernelFunc:Sl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nl="return (b >= 0.0) ? a : a * (b + 1.0);",Il=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,_l=n=>{const{inputs:e,backend:t}=n,{dy:r,y:a}=e,l=(0,u.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ds(Il,r.shape,a.shape):new gs(Nl,r.shape,a.shape);return t.runWebGLProgram(l,[r,a],r.dtype)},Dl={kernelName:u.HEU,backendName:"webgl",kernelFunc:_l};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ol=un({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:ro}),Rl={kernelName:u.hdR,backendName:"webgl",kernelFunc:Ol};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Al=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${u.Wap.ERF_P};
  float a1 = ${u.Wap.ERF_A1};
  float a2 = ${u.Wap.ERF_A2};
  float a3 = ${u.Wap.ERF_A3};
  float a4 = ${u.Wap.ERF_A4};
  float a5 = ${u.Wap.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,kl=kt({opSnippet:Al}),Pl={kernelName:u.Omj,backendName:"webgl",kernelFunc:kl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fl=Os+`
  return exp(x);
`,qa=kt({opSnippet:Fl,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:ao,dtype:"float32"}),Bl={kernelName:u.NEP,backendName:"webgl",kernelFunc:qa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ca(n){const{inputs:e,attrs:t,backend:r}=n,{dim:a}=t,{input:l}=e,c=l.shape.length,g=l.shape.slice();let f=a;return a<0&&(u.D5U.assert(-(c+1)<=a,()=>`Axis must be in the interval [${-(c+1)}, ${c}]`),f=c+a+1),g.splice(f,0,1),it({inputs:{x:l},backend:r,attrs:{shape:g}})}const Ll={kernelName:u.YFo,backendName:"webgl",kernelFunc:ca};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Za="return exp(x) - 1.0;",Ul=kt({opSnippet:Za,packedOpSnippet:Za,cpuKernelImpl:oo}),Vl={kernelName:u.Y0y,backendName:"webgl",kernelFunc:Ul};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ja{constructor(e,t,r){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const l=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,c=r?`${a}.0`:"1.0";let g;if(e==="real")g="return real * expR - imag * expI;";else if(e==="imag")g="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${l};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${g}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${c};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eo(n,e,t){const r=t.texData.get(n.dataId),a=u.D5U.sizeFromShape(n.shape),l=n.shape[n.shape.length-1],c=a/l,g=it({inputs:{x:n},backend:t,attrs:{shape:[c,l]}}),f=g.shape,E=new Ja("real",f,e),T=new Ja("imag",f,e),A=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:f},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:f}],B=t.runWebGLProgram(E,A,"float32"),K=t.runWebGLProgram(T,A,"float32"),Q=rs({inputs:{real:B,imag:K},backend:t});t.disposeIntermediateTensorInfo(B),t.disposeIntermediateTensorInfo(K);const ce=it({inputs:{x:Q},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(Q),ce}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wl(n){const{inputs:e,backend:t}=n,{input:r}=e;return eo(r,!1,t)}const Ml={kernelName:u.vwp,backendName:"webgl",kernelFunc:Wl};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zl{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y(n){const{backend:e,attrs:t}=n,{shape:r,value:a}=t;let{dtype:l}=t;if(l=l||u.D5U.inferDtype(a),l==="string"){const c=u.D5U.getArrayFromDType(l,u.D5U.sizeFromShape(r));return c.fill(a),e.makeTensorInfo(r,l,c)}else{const c=new zl(r,a),g=[[a]];return e.runWebGLProgram(c,[],l,g)}}const h={kernelName:u.deh,backendName:"webgl",kernelFunc:y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v={kernelName:u.Uyb,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,a=new d(t.shape);return r.runWebGLProgram(a,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w="return floor(x);",_=kt({opSnippet:w,packedOpSnippet:w,cpuKernelImpl:uo}),F={kernelName:u.OR,backendName:"webgl",kernelFunc:_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pe=un({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),De={kernelName:u.jeX,backendName:"webgl",kernelFunc:pe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ae{constructor(e){this.variableNames=["A"];const t=We(),[r,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nt{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=We(),[r,a]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dt={kernelName:u.eBW,backendName:"webgl",kernelFunc:xt};let pt,$t=(0,u.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function xt(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:a}=e;const{numChannels:l}=r,c=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,g=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[f,E]=c?[a.videoWidth,a.videoHeight]:[a.width,a.height],T=[E,f],A=[E,f,l];if(g||c){const ce=(0,u.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(pt==null||ce!==$t)&&($t=ce,pt=document.createElement("canvas").getContext("2d",{willReadFrequently:$t})),pt.canvas.width=f,pt.canvas.height=E,pt.drawImage(a,0,0,f,E),a=pt.canvas}const B=t.makeTensorInfo(T,"int32");t.texData.get(B.dataId).usage=J.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(B.dataId),a);const K=(0,u.OBj)().getBool("WEBGL_PACK")?new nt(A):new Ae(A),Q=t.runWebGLProgram(K,[B],"int32");return t.disposeData(B.dataId),Q}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,filter:l,bias:c,preluActivationWeights:g}=e,{strides:f,pad:E,dataFormat:T,dilations:A,dimRoundingMode:B,activation:K,leakyreluAlpha:Q}=r,ce=u.Wap.convertConv2DDataFormat(T),ve=u.Wap.computeConv2DInfo(a.shape,l.shape,f,A,E,B,!1,ce);let le;const Ne=[],et=c!=null,Je=g!=null,lt=K==="leakyrelu",Nt=()=>{const gt=[a,l],Pt=(Dt,Jt)=>{if(Jt==="NCHW"&&Dt.shape.length===1&&Dt.shape[0]!==1){const sn=it({inputs:{x:Dt},backend:t,attrs:{shape:[Dt.shape[0],1,1]}});return Ne.push(sn),sn}return Dt};if(et&&gt.push(Pt(c,T)),Je&&gt.push(Pt(g,T)),lt){const Dt=t.makeTensorInfo([],"float32",u.D5U.createScalarValue(Q,"float32"));gt.push(Dt),Ne.push(Dt)}return gt};if(ve.filterHeight===1&&ve.filterWidth===1&&ve.dilationHeight===1&&ve.dilationWidth===1&&ve.strideHeight===1&&ve.strideWidth===1&&(ve.padInfo.type==="SAME"||ve.padInfo.type==="VALID"))le=Ga({x:a,filter:l,convInfo:ve,backend:t,bias:c,activation:K,preluActivationWeights:g,leakyreluAlpha:Q});else if(ve.strideWidth<=2&&ce==="channelsLast"&&(0,u.OBj)().getBool("WEBGL_EXP_CONV")){const gt=K?$r(K,!0):null,Pt=new za(ve,et,gt,Je,lt),Dt=[[ve.padInfo.top,ve.padInfo.left],[ve.strideHeight,ve.strideWidth],[ve.dilationHeight,ve.dilationWidth],[ve.inHeight,ve.inWidth]],Jt=Nt();le=t.runWebGLProgram(Pt,Jt,"float32",Dt)}else if((0,u.OBj)().getBool("WEBGL_CONV_IM2COL"))le=ia({x:a,filter:l,convInfo:ve,backend:t,bias:c,activation:K,preluActivationWeights:g,leakyreluAlpha:Q});else{const gt=K?$r(K,!1):null,Pt=new Ma(ve,et,gt,Je,lt),Dt=Nt();le=t.runWebGLProgram(Pt,Dt,"float32")}const Et=it({inputs:{x:le},backend:t,attrs:{shape:ve.outShape}});return Ne.push(le),Ne.forEach(gt=>t.disposeIntermediateTensorInfo(gt)),Et}const on={kernelName:u._V0,backendName:"webgl",kernelFunc:At};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,filter:l,bias:c,preluActivationWeights:g}=e,{strides:f,pad:E,dilations:T,dimRoundingMode:A,activation:B,leakyreluAlpha:K}=r,Q=[];let ce=T;ce==null&&(ce=[1,1]),u.D5U.assert(u.Wap.eitherStridesOrDilationsAreOne(f,ce),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${f} and dilations '${ce}'`);const ve=u.Wap.computeConv2DInfo(a.shape,l.shape,f,ce,E,A,!0),le=(0,u.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&ve.strideWidth<=2&&ve.outChannels/ve.inChannels===1,Ne=B?$r(B,le):null,et=[a,l],Je=c!=null,lt=g!=null,Nt=B==="leakyrelu";if(Je&&et.push(c),lt&&et.push(g),Nt){const Dt=t.makeTensorInfo([],"float32",u.D5U.createScalarValue(K,"float32"));et.push(Dt),Q.push(Dt)}let Et;le?Et=new la(ve,Je,Ne,lt,Nt):Et=new Qa(ve,Je,Ne,lt,Nt);const gt=[[ve.padInfo.top,ve.padInfo.left],[ve.strideHeight,ve.strideWidth],[ve.dilationHeight,ve.dilationWidth],[ve.inHeight,ve.inWidth]],Pt=t.runWebGLProgram(Et,et,"float32",gt);return Q.forEach(Dt=>t.disposeIntermediateTensorInfo(Dt)),Pt}const jt={kernelName:u.luS,backendName:"webgl",kernelFunc:rn};class nn{constructor(e,t,r,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=r;const l=Lt(r.length);let c=`
    int index;`;for(let g=0;g<this.sliceDim;g++)c+=`
          index = round(getIndices(coords[0], ${g}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[g]};
          flattenIndex += index * ${this.strides[g]};`;this.userCode=`
         void main() {
          ${l} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${c}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(n){const{inputs:e,backend:t}=n,{params:r,indices:a}=e,l=a.shape,c=l[l.length-1],g=u.D5U.sizeFromShape(r.shape),[f,E,T,A]=u.Wap.prepareAndValidate(r,a),B=it({inputs:{x:a},backend:t,attrs:{shape:[E,c]}}),K=it({inputs:{x:r},backend:t,attrs:{shape:[u.D5U.sizeFromShape(r.shape)/T,T]}});if(t.shouldExecuteOnCPU([r,a])||r.dtype==="string"){const le=t.readSync(a.dataId),Ne=t.bufferSync(r),et=lo(le,Ne,r.dtype,E,c,T,A,r.shape,g);return t.makeTensorInfo(f,r.dtype,et.values)}const Q=new nn(c,A,[E,T],r.shape),ce=t.runWebGLProgram(Q,[K,B],K.dtype),ve=it({inputs:{x:ce},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(B),t.disposeIntermediateTensorInfo(K),t.disposeIntermediateTensorInfo(ce),ve}const Zt={kernelName:u.q1x,backendName:"webgl",kernelFunc:Rt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ht{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=Lt(this.rank),a=Wt(e,2);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}}function Wt(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<n.length;a++)a===2?r.push("index"):r.push(`${t[a]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mt(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,indices:l}=e,{axis:c,batchDims:g}=r,f=u.D5U.parseAxisParam(c,a.shape)[0];if((0,u.OBj)().get("DEBUG")){const Ne=t.readSync(l.dataId),et=a.shape[f];for(let Je=0;Je<Ne.length;++Je){const lt=Ne[Je];u.D5U.assert(lt<=et-1&&lt>=0,()=>`GatherV2: the index value ${lt} is not in [0, ${et-1}]`)}}const E=u.Wap.segment_util.collectGatherOpShapeInfo(a,l,f,g),T=u.D5U.sizeFromShape(l.shape),A=[],B=it({inputs:{x:a},backend:t,attrs:{shape:[E.batchSize,E.outerSize,E.dimSize,E.sliceSize]}}),K=it({inputs:{x:l},backend:t,attrs:{shape:[E.batchSize,T/E.batchSize]}});A.push(B),A.push(K);const Q=[E.batchSize,E.outerSize,T/E.batchSize,E.sliceSize];if(t.shouldExecuteOnCPU([a,l])||a.dtype==="string"){const Ne=t.bufferSync(K),et=t.bufferSync(B),Je=Mr(et,Ne,Q);return A.forEach(lt=>t.disposeIntermediateTensorInfo(lt)),t.makeTensorInfo(E.outputShape,Je.dtype,Je.values)}const ce=new Ht(B.shape,Q),ve=t.runWebGLProgram(ce,[B,K],B.dtype);A.push(ve);const le=it({inputs:{x:ve},backend:t,attrs:{shape:E.outputShape}});return A.forEach(Ne=>t.disposeIntermediateTensorInfo(Ne)),le}const Xt={kernelName:u.qi_,backendName:"webgl",kernelFunc:Mt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=un({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:co,dtype:"bool"}),Wn={kernelName:u.iZT,backendName:"webgl",kernelFunc:$n};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ks=un({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:zr}),Ps={kernelName:u.Acj,backendName:"webgl",kernelFunc:ks};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(n){const{inputs:e,backend:t}=n,{input:r}=e;return eo(r,!0,t)}const xc={kernelName:u.Qg5,backendName:"webgl",kernelFunc:Gl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bc=kt({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),vc={kernelName:u.avt,backendName:"webgl",kernelFunc:bc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ec=kt({opSnippet:"return float(isinf(x));",dtype:"bool"}),wc={kernelName:u.iWB,backendName:"webgl",kernelFunc:Ec};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cc=kt({opSnippet:"return float(isnan(x));",dtype:"bool"}),Tc={kernelName:u.r7n,backendName:"webgl",kernelFunc:Cc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sc=un({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:po,dtype:"bool"}),$c={kernelName:u.vtC,backendName:"webgl",kernelFunc:Sc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nc=un({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:ho,dtype:"bool"}),Ic={kernelName:u.CAk,backendName:"webgl",kernelFunc:Nc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _c(n){const{backend:e,attrs:t}=n,{start:r,stop:a,num:l}=t,c=fo(r,a,l);return e.makeTensorInfo([c.length],"float32",c)}const Dc={kernelName:u.e7N,backendName:"webgl",kernelFunc:_c};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oc=Os+`
  return x < 0.0 ? 0./0. : log(x);
`,Rc=kt({opSnippet:Oc,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:mo}),Ac={kernelName:u.ZbH,backendName:"webgl",kernelFunc:Rc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kc=Os+`
  return log(1.0 + x);
`,Pc=kt({opSnippet:kc}),Fc={kernelName:u.kU,backendName:"webgl",kernelFunc:Pc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bc=un({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),Lc={kernelName:u.PYm,backendName:"webgl",kernelFunc:Bc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uc=kt({opSnippet:"return float(!(x >= 1.0));"}),Vc={kernelName:u.VfG,backendName:"webgl",kernelFunc:Uc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wc=un({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),Mc={kernelName:u.MZg,backendName:"webgl",kernelFunc:Wc};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zc{constructor(e,t,r,a,l){this.variableNames=["x"],this.outputShape=[];const c=t,g=e[3]-1;this.outputShape=e;let f;const E=`float(${r}) + float(${a}) * sum`;l===.5?f=`inversesqrt(${E})`:l===1?f=`1.0/(${E})`:f=`exp(log(${E}) * float(-${l}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${c}; j <= ${c}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${g}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${f};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gc{constructor(e,t,r,a,l){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const c=t,g=e[3]-1;this.outputShape=e;let f;const E=`float(${r}) + float(${a}) * sum`;l===.5?f=`inversesqrt(${E})`:l===1?f=`1.0/(${E})`:f=`exp(log(${E}) * float(-${l}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${c};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${c}; j <= ${c}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${g}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${f};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kc=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{depthRadius:l,bias:c,alpha:g,beta:f}=r,E=(0,u.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Gc(a.shape,l,c,g,f):new zc(a.shape,l,c,g,f);return t.runWebGLProgram(E,[a],a.dtype)},Hc={kernelName:u.eZ0,backendName:"webgl",kernelFunc:Kc};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jc{constructor(e,t,r,a,l){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=a,this.beta=l,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${l})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${l});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xc=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:a,y:l,dy:c}=e,{depthRadius:g,bias:f,alpha:E,beta:T}=r,A=new jc(a.shape,g,f,E,T);return t.runWebGLProgram(A,[a,l,c],a.dtype)},Yc={kernelName:u.Hhh,backendName:"webgl",kernelFunc:Xc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qc(n,e,t,r){const a=u.D5U.sizeFromShape(e),c=u.D5U.sizeFromShape(n.shape)/a,g=it({inputs:{x:n},attrs:{shape:[c,a]},backend:r}),f=xs(g,n.dtype,"max",r),E=it({inputs:{x:f},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(f),E}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ac(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{reductionIndices:l,keepDims:c}=r,g=a.shape.length,f=u.D5U.parseAxisParam(l,a.shape);let E=f;const T=u.Wap.getAxesPermutation(E,g),A=T!=null,B=t.shouldExecuteOnCPU([a]);let K=a;if(A){if(B){const et=t.texData.get(K.dataId).values,Je=new Array(g);for(let Et=0;Et<Je.length;Et++)Je[Et]=a.shape[T[Et]];const lt=Er(et,a.shape,a.dtype,T,Je);K=t.makeTensorInfo(Je,a.dtype);const Nt=t.texData.get(K.dataId);Nt.values=lt}else K=as(a,T,t);E=u.Wap.getInnerMostAxes(E.length,g)}u.Wap.assertAxesAreInnerMostDims("max",E,g);const[Q,ce]=u.Wap.computeOutAndReduceShapes(K.shape,E);let ve=Q;c&&(ve=u.Wap.expandShapeToKeepDim(Q,f));let le;if(B){const et=t.texData.get(K.dataId).values,Je=Xs(et,u.D5U.sizeFromShape(ce),ve,a.dtype);le=t.makeTensorInfo(ve,a.dtype);const lt=t.texData.get(le.dataId);lt.values=Je}else le=Qc(K,ce,ve,t);return A&&t.disposeIntermediateTensorInfo(K),le}const qc={kernelName:u.YoZ,backendName:"webgl",kernelFunc:ac};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zc=Sr+`
  return max(a, b);
`,Jc=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ys+`
  return result;
`,ed=un({opSnippet:Zc,packedOpSnippet:Jc,cpuKernelImpl:go}),td={kernelName:u.BMI,backendName:"webgl",kernelFunc:ed};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nd(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e;q(a,"maxPool");const{filterSize:l,strides:c,pad:g,dimRoundingMode:f}=r,E=1;u.D5U.assert(u.Wap.eitherStridesOrDilationsAreOne(c,E),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${c} and dilations '${E}'`);const T=u.Wap.computePool2DInfo(a.shape,l,c,E,g,f);if(T.filterWidth===1&&T.filterHeight===1&&u.D5U.arraysEqual(T.inShape,T.outShape))return bn({inputs:{x:a},backend:t});const A=new Js(T,"max",!1);return t.runWebGLProgram(A,[a],a.dtype)}const sd={kernelName:u.mTV,backendName:"webgl",kernelFunc:nd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rd(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{filterSize:l,strides:c,pad:g,dataFormat:f,dimRoundingMode:E}=r,T=[1,1,1],A=u.Wap.computePool3DInfo(a.shape,l,c,T,g,E,f),B=new bs(A,"max",!1);return t.runWebGLProgram(B,[a],a.dtype)}const ad={kernelName:u.OAf,backendName:"webgl",kernelFunc:rd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class od{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,g=l-1-e.padInfo.top,f=c-1-e.padInfo.left,E=l*c-1;this.userCode=`
      const ivec2 pads = ivec2(${g}, ${f});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${E} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${c} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class id{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,g=e.dilationWidth,f=e.effectiveFilterDepth,E=e.effectiveFilterHeight,T=e.effectiveFilterWidth,A=f-1-e.padInfo.front,B=E-1-e.padInfo.top,K=T-1-e.padInfo.left,Q=f*E*T-1;this.userCode=`
      const ivec3 pads = ivec3(${A}, ${B}, ${K});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${f};
           wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${E};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${T};
                wC += ${g}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${Q} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${E} * ${T} +
                  wR * ${T} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ud(n){const{inputs:e,backend:t,attrs:r}=n,{dy:a,input:l}=e,c=l,{filterSize:g,strides:f,pad:E,dimRoundingMode:T}=r,A=[1,1,1],B=u.Wap.computePool3DInfo(c.shape,g,f,A,E,T),K=new bs(B,"max",!0),Q=t.runWebGLProgram(K,[c],c.dtype),ce=new id(B),ve=t.runWebGLProgram(ce,[a,Q],c.dtype);return t.disposeIntermediateTensorInfo(Q),ve}const ld={kernelName:u.OU7,backendName:"webgl",kernelFunc:ud};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cd(n){const{inputs:e,backend:t,attrs:r}=n,{dy:a,input:l,output:c}=e,g=l;q([l,c],"maxPoolGrad");const{filterSize:f,strides:E,pad:T,dimRoundingMode:A}=r,B=u.Wap.computePool2DInfo(g.shape,f,E,1,T,A),K=!0,Q=new Js(B,"max",K),ce=t.runWebGLProgram(Q,[g],g.dtype),ve=new od(B),le=t.runWebGLProgram(ve,[a,ce],g.dtype);return t.disposeIntermediateTensorInfo(ce),le}const dd={kernelName:u.OV7,backendName:"webgl",kernelFunc:cd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pd(n,e,t,r){let a=new Js(t,"max",!1);const l=r.runWebGLProgram(a,[n],"float32");a=new Js(t,"max",!0,!0,e);const c=r.runWebGLProgram(a,[n],"float32");return[l,c]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hd={kernelName:u.vFR,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:a,strides:l,pad:c,includeBatchInIndex:g}=e,f=t;u.D5U.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const E=[1,1];u.D5U.assert(u.Wap.eitherStridesOrDilationsAreOne(l,E),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${l} and dilations '${E}'`);const T=u.Wap.computePool2DInfo(r.shape,a,l,E,c),[A,B]=pd(r,g,T,f);return[A,B]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fd(n,e,t,r){const a=u.D5U.sizeFromShape(e),c=u.D5U.sizeFromShape(n.shape)/a,g=it({inputs:{x:n},attrs:{shape:[c,a]},backend:r}),f=xs(g,"float32","mean",r),E=it({inputs:{x:f},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(f),E}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const md={kernelName:u.q2K,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:a,axis:l}=e,c=t,g=r.shape.length,f=u.D5U.parseAxisParam(l,r.shape);let E=f;const T=u.Wap.getAxesPermutation(E,g),A=T!=null,B=c.shouldExecuteOnCPU([r]),K=[];let Q=r;if(A){if(B){const Je=c.texData.get(Q.dataId).values,lt=new Array(g);for(let gt=0;gt<lt.length;gt++)lt[gt]=r.shape[T[gt]];const Nt=Er(Je,r.shape,r.dtype,T,lt);Q=c.makeTensorInfo(lt,r.dtype);const Et=c.texData.get(Q.dataId);Et.values=Nt}else Q=as(r,T,c);K.push(Q),E=u.Wap.getInnerMostAxes(E.length,g)}u.Wap.assertAxesAreInnerMostDims("sum",E,g);const[ce,ve]=u.Wap.computeOutAndReduceShapes(Q.shape,E);let le=ce;a&&(le=u.Wap.expandShapeToKeepDim(ce,f));const Ne=fd(Q,ve,le,c);for(const et of K)c.disposeIntermediateTensorInfo(et);return Ne}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gd(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{axis:l,keepDims:c}=r,g=a.shape.length,f=u.D5U.parseAxisParam(l,a.shape);let E=f;const T=u.Wap.getAxesPermutation(E,g);let A=a;T!=null&&(A=fn({inputs:{x:a},backend:t,attrs:{perm:T}}),E=u.Wap.getInnerMostAxes(E.length,a.shape.length)),u.Wap.assertAxesAreInnerMostDims("min",E,g);const[B,K]=u.Wap.computeOutAndReduceShapes(A.shape,E),Q=u.D5U.sizeFromShape(K),ce=it({inputs:{x:A},backend:t,attrs:{shape:[-1,Q]}}),ve=xs(ce,ce.dtype,"min",t);let le;if(c){const Ne=u.Wap.expandShapeToKeepDim(B,f);le=it({inputs:{x:ve},backend:t,attrs:{shape:Ne}})}else le=it({inputs:{x:ve},backend:t,attrs:{shape:B}});return t.disposeIntermediateTensorInfo(ce),t.disposeIntermediateTensorInfo(ve),T!=null&&t.disposeIntermediateTensorInfo(A),le}const yd={kernelName:u.c17,backendName:"webgl",kernelFunc:gd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xd=Sr+`
  return min(a, b);
`,bd=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ys+`
  return result;
`,vd=un({opSnippet:xd,packedOpSnippet:bd,cpuKernelImpl:da}),Ed={kernelName:u.q8u,backendName:"webgl",kernelFunc:vd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wd{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((T,A)=>T[0]+e[A]+T[1]);const a=e.length,l=Lt(a),c=t.map(T=>T[0]).join(","),g=t.map((T,A)=>T[0]+e[A]).join(","),f=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),E=r==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${c};
        int end = ${g};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${E};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${E};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${l} start = ${l}(${c});
      ${l} end = ${l}(${g});

      void main() {
        ${l} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${E};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${E};
          }
        }
        ${l} coords = outC - start;
        setOutput(getX(${f}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cd{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((Q,ce)=>Q[0]+e[ce]+Q[1]);const a=e.length,l=Lt(a),c=t.map(Q=>Q[0]).join(","),g=t.map((Q,ce)=>Q[0]+e[ce]).join(","),f=hn("rc",a),E=hn("source",a),T=`${f[a-1]} < ${this.outputShape[a-1]}`,A=a===1?"source":`vec2(${E.slice(-2).join()})`,B=r==="reflect"?0:1;let K="";if(a===1){const Q=`
        ${l} source = rc;
        if (source < start) {
          source = start * 2 - source - ${B};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${B};
        }
        source -= start;
      `;K=`
        ${l} rc = outputLoc;
        ${Q}
        result[0] = getChannel(getX(${E.join()}), ${A});
        ${f[a-1]} += 1;
        if(${T}) {
          ${Q}
          result[1] = getChannel(getX(${E.join()}), ${A});
        }
      `}else{const Q=`
        ${l} source = rc;
        ${l} lt = ${l}(lessThan(source, start));
        ${l} gte = ${l}(greaterThanEqual(source, end));
        ${l} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${B}) +
                gte * ((end - 1) * 2 - source + ${B});
        source -= start;
      `;K=`
        ${l} rc = outputLoc;
        ${Q}
        result[0] = getChannel(getX(${E.join()}), ${A});
        ${f[a-1]} += 1;
        if(${T}) {
          ${Q}
          result[1] = getChannel(getX(${E.join()}), ${A});
        }
        rc = outputLoc;
        ${f[a-2]} += 1;
        if(${f[a-2]} < ${this.outputShape[a-2]}) {
          ${Q}
          result[2] = getChannel(getX(${E.join()}), ${A});
          ${f[a-1]} += 1;
          if(${T}) {
            ${Q}
            result[3] = getChannel(getX(${E.join()}), ${A});
          }
        }
      `}this.userCode=`
      const ${l} start = ${l}(${c});
      const ${l} end = ${l}(${g});

      void main() {
        ${l} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${K}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Td=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:a,mode:l}=t,c=(0,u.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cd(r.shape,a,l):new wd(r.shape,a,l);return e.runWebGLProgram(c,[r],r.dtype)},Sd={kernelName:u.jQs,backendName:"webgl",kernelFunc:Td};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $d=`if (b == 0.0) return NAN;
  return mod(a, b);`,Nd=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ys+`
  return result;
`,Id=un({opSnippet:$d,packedOpSnippet:Nd}),_d={kernelName:u.Vbg,backendName:"webgl",kernelFunc:Id};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dd{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oc=un({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),Od={kernelName:u.oHH,backendName:"webgl",kernelFunc:oc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ic="return a - b;",uc=un({opSnippet:ic,packedOpSnippet:ic,supportsComplex:!0,cpuKernelImpl:Hr}),Rd={kernelName:u.Tr8,backendName:"webgl",kernelFunc:uc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lc(n){const{inputs:e,backend:t,attrs:r}=n,{logits:a}=e,{dim:l}=r,c=u.D5U.parseAxisParam([l],a.shape),g=ac({inputs:{x:a},backend:t,attrs:{reductionIndices:c,keepDims:!1}}),f=u.Wap.expandShapeToKeepDim(g.shape,c),E=it({inputs:{x:g},backend:t,attrs:{shape:f}}),T=uc({inputs:{a,b:E},backend:t}),A=qa({inputs:{x:T},backend:t}),B=Ir({inputs:{x:A},backend:t,attrs:{axis:c,keepDims:!1}}),K=it({inputs:{x:B},backend:t,attrs:{shape:f}}),Q=oc({inputs:{a:A,b:K},backend:t});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(E),t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(B),t.disposeIntermediateTensorInfo(K),Q}const Ad={kernelName:u.Gcp,backendName:"webgl",kernelFunc:lc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kd(n){const{inputs:e,backend:t,attrs:r}=n,{logits:a}=e,{numSamples:l,seed:c,normalized:g}=r,f=g?a:lc({inputs:{logits:a},backend:t,attrs:{dim:a.shape.length-1}}),E=f.shape[0],T=f.shape[1],A=new Dd(E,T,l),B=[[c]],K=t.runWebGLProgram(A,[f],"int32",B);return g||t.disposeIntermediateTensorInfo(f),K}const Pd={kernelName:u.NZg,backendName:"webgl",kernelFunc:kd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fd=wn+`
  return -x;
`,Bd=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Ld(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const l=t.texData.get(r.dataId),[c,g]=yo(l.values,r.shape,r.dtype);return t.makeTensorInfo(g,r.dtype,c)}let a;return(0,u.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new ss(r.shape,Bd):a=new Vn(r.shape,Fd),t.runWebGLProgram(a,[r],r.dtype)}const Ud={kernelName:u.kuV,backendName:"webgl",kernelFunc:Ld};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vd=u.GDt.nonMaxSuppressionV3Impl;function Wd(n){u.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:a,scores:l}=e,{maxOutputSize:c,iouThreshold:g,scoreThreshold:f}=r,E=t.readSync(a.dataId),T=t.readSync(l.dataId),{selectedIndices:A}=Vd(E,T,c,g,f);return t.makeTensorInfo([A.length],"int32",new Int32Array(A))}const Md={kernelName:u.uv1,backendName:"webgl",kernelFunc:Wd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zd=u.GDt.nonMaxSuppressionV4Impl;function Gd(n){u.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:a,scores:l}=e,{maxOutputSize:c,iouThreshold:g,scoreThreshold:f,padToMaxOutputSize:E}=r,T=t.readSync(a.dataId),A=t.readSync(l.dataId),{selectedIndices:B,validOutputs:K}=zd(T,A,c,g,f,E);return[t.makeTensorInfo([B.length],"int32",new Int32Array(B)),t.makeTensorInfo([],"int32",new Int32Array([K]))]}const Kd={kernelName:u.cye,backendName:"webgl",kernelFunc:Gd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hd=u.GDt.nonMaxSuppressionV5Impl;function jd(n){u.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:a,scores:l}=e,{maxOutputSize:c,iouThreshold:g,scoreThreshold:f,softNmsSigma:E}=r,T=t.readSync(a.dataId),A=t.readSync(l.dataId),B=c,K=g,Q=f,ce=E,{selectedIndices:ve,selectedScores:le}=Hd(T,A,B,K,Q,ce);return[t.makeTensorInfo([ve.length],"int32",new Int32Array(ve)),t.makeTensorInfo([le.length],"float32",new Float32Array(le))]}const Xd={kernelName:u.W0H,backendName:"webgl",kernelFunc:jd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yd{constructor(e,t,r,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qd=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:a}=e,{dtype:l,depth:c,onValue:g,offValue:f}=r,E=u.D5U.sizeFromShape(a.shape),T=new Yd(E,c,g,f),A=it({inputs:{x:a},backend:t,attrs:{shape:[E]}}),B=t.runWebGLProgram(T,[A],l);t.disposeIntermediateTensorInfo(A);const K=[...a.shape,c],Q=it({inputs:{x:B},backend:t,attrs:{shape:K}});return t.disposeIntermediateTensorInfo(B),Q},qd={kernelName:u.we_,backendName:"webgl",kernelFunc:Qd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const a=nr({inputs:{input:r},backend:t}),l=to({inputs:{x:a},backend:t}),c=Ar({inputs:{input:r},backend:t}),g=to({inputs:{x:c},backend:t}),f=rs({inputs:{real:l,imag:g},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(g),f}else return y({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const Zd={kernelName:u.RuY,backendName:"webgl",kernelFunc:to};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cc(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const a=nr({inputs:{input:r},backend:t}),l=cc({inputs:{x:a},backend:t}),c=Ar({inputs:{input:r},backend:t}),g=to({inputs:{x:c},backend:t}),f=rs({inputs:{real:l,imag:g},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(g),f}else return y({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const Jd={kernelName:u.qWM,backendName:"webgl",kernelFunc:cc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ep(n){const{inputs:e,backend:t,attrs:r}=n,{axis:a}=r;if(e.length===1)return ca({inputs:{input:e[0]},backend:t,attrs:{dim:a}});const l=e[0].shape,c=e[0].dtype;e.forEach(T=>{u.D5U.assertShapesMatch(l,T.shape,"All tensors passed to stack must have matching shapes"),u.D5U.assert(c===T.dtype,()=>"All tensors passed to stack must have matching dtypes")});const g=[],f=e.map(T=>{const A=ca({inputs:{input:T},backend:t,attrs:{dim:a}});return g.push(A),A}),E=Wa({inputs:f,backend:t,attrs:{axis:a}});return g.forEach(T=>t.disposeIntermediateTensorInfo(T)),E}const tp={kernelName:u.QiL,backendName:"webgl",kernelFunc:ep};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class np{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((E,T)=>E[0]+e[T]+E[1]);const a=e.length,l=Lt(a),c=t.map(E=>E[0]).join(","),g=t.map((E,T)=>E[0]+e[T]).join(","),f=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${c};
        int end = ${g};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${l} start = ${l}(${c});
      ${l} end = ${l}(${g});

      void main() {
        ${l} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${l} coords = outC - start;
          setOutput(getX(${f}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sp{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((ce,ve)=>ce[0]+e[ve]+ce[1]);const a=e.length,l=Lt(a),c=t.map(ce=>ce[0]).join(","),g=t.map((ce,ve)=>ce[0]+e[ve]).join(","),f=hn("rc",a),E=hn("source",a),T=`${f[a-1]} < ${this.outputShape[a-1]}`,A=a===1?"source":`vec2(${E.slice(-2).join()})`,B=[`${l} rc = outputLoc;`,`${f[a-1]} += 1;
       if(${T}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${f[a-2]} += 1;
       if(${f[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${f[a-1]} += 1;
         if(${T}) {`],K=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let Q="";for(let ce=0,ve=a===1?2:4;ce<ve;ce++)Q+=`
        ${B[ce]}
        if (${K}) {
          result[${ce}] = float(value);
        } else {
          ${l} source = rc - start;
          result[${ce}] = getChannel(getX(${E.join()}), ${A});
        }
      `;Q+=a===1?"} ":"}}",this.userCode=`
      const ${l} start = ${l}(${c});
      const ${l} end = ${l}(${g});

      void main() {
        ${l} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${Q}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dc=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{paddings:l,constantValue:c}=r;if(u.D5U.sizeFromShape(a.shape)===0){const E=l.map((T,A)=>T[0]+a.shape[A]+T[1]);return y({backend:t,attrs:{shape:E,value:c,dtype:a.dtype}})}const g=(0,u.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sp(a.shape,l,c):new np(a.shape,l,c),f=[[c]];return t.runWebGLProgram(g,[a],a.dtype,f)},rp={kernelName:u.lyA,backendName:"webgl",kernelFunc:dc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ap=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,op=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ys+`
  return result;
`,ip=un({opSnippet:ap,packedOpSnippet:op}),up={kernelName:u.pe_,backendName:"webgl",kernelFunc:ip};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lp(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{axis:l,keepDims:c}=r,g=a.shape.length,f=[],E=u.D5U.parseAxisParam(l,a.shape);let T=E;const A=u.Wap.getAxesPermutation(T,g);let B=a;A!=null&&(B=fn({inputs:{x:a},backend:t,attrs:{perm:A}}),T=u.Wap.getInnerMostAxes(T.length,g),f.push(B)),u.Wap.assertAxesAreInnerMostDims("prod",T,g);let K;if(t.shouldExecuteOnCPU([B])){const Q=t.texData.get(B.dataId).values,{outVals:ce,outShape:ve,outDtype:le}=xo(B.shape,B.dtype,Q,T);K=t.makeTensorInfo(ve,le,ce)}else{const[Q,ce]=u.Wap.computeOutAndReduceShapes(B.shape,T),ve=u.D5U.sizeFromShape(ce),le=it({inputs:{x:B},backend:t,attrs:{shape:[-1,ve]}}),Ne=(0,u.z4k)(a.dtype),et=xs(le,Ne,"prod",t);K=it({inputs:{x:et},backend:t,attrs:{shape:Q}}),f.push(le),f.push(et)}if(c){f.push(K);const Q=u.Wap.expandShapeToKeepDim(K.shape,E);K=it({inputs:{x:K},backend:t,attrs:{shape:Q}})}return f.forEach(Q=>t.disposeIntermediateTensorInfo(Q)),K}const cp={kernelName:u.DlI,backendName:"webgl",kernelFunc:lp};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dp(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:a,paramsDenseValues:l,indices:c}=e,{outputRaggedRank:g}=r,f=a.map(le=>t.readSync(le.dataId)),E=a.map(le=>le.shape),T=t.readSync(l.dataId),A=t.readSync(c.dataId),[B,K,Q]=pa(f,E,T,l.shape,l.dtype,A,c.shape,g),ce=B.map(le=>t.makeTensorInfo([le.length],"int32",le)),ve=t.makeTensorInfo(Q,l.dtype,K);return ce.concat([ve])}const pp={kernelName:u.dDz,backendName:"webgl",kernelFunc:dp};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hp(n){const{inputs:e,backend:t}=n,{starts:r,limits:a,deltas:l}=e,c=t.readSync(r.dataId),g=t.readSync(a.dataId),f=t.readSync(l.dataId),[E,T]=bo(c,r.shape,r.dtype,g,a.shape,f,l.shape),A=t.makeTensorInfo([E.length],"int32",E),B=t.makeTensorInfo([T.length],r.dtype,T);return[A,B]}const fp={kernelName:u.CQl,backendName:"webgl",kernelFunc:hp};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mp(n){const{inputs:e,backend:t,attrs:r}=n,{shape:a,values:l,defaultValue:c,rowPartitionTensors:g}=e,{rowPartitionTypes:f}=r,E=t.readSync(a.dataId),T=t.readSync(l.dataId),A=t.readSync(c.dataId),B=g.map(ve=>t.readSync(ve.dataId)),K=g.map(ve=>ve.shape),[Q,ce]=vo(E,a.shape,T,l.shape,l.dtype,A,c.shape,B,K,f);return t.makeTensorInfo(Q,l.dtype,ce)}const gp={kernelName:u.BiW,backendName:"webgl",kernelFunc:mp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pc=n=>{const{backend:e,attrs:t}=n,{start:r,stop:a,step:l,dtype:c}=t,g=Bt(r,a,l,c);return e.makeTensorInfo([g.length],c,g)},yp={kernelName:u.e6w,backendName:"webgl",kernelFunc:pc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xp=kt({opSnippet:"return 1.0 / x;"}),bp={kernelName:u.$HU,backendName:"webgl",kernelFunc:xp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vp=wn+`
  return (x < 0.0) ? 0.0 : x;
`,Ep=kt({opSnippet:vp,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),wp={kernelName:u.qkr,backendName:"webgl",kernelFunc:Ep};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cp=wn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Tp=kt({opSnippet:Cp,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),Sp={kernelName:u.SbG,backendName:"webgl",kernelFunc:Tp};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $p{constructor(e,t,r,a,l){this.variableNames=["A"],this.outputShape=[];const[c,g,f,E]=e;this.outputShape=[c,t,r,E];const T=[a&&t>1?g-1:g,a&&r>1?f-1:f],A=[a&&t>1?t-1:t,a&&r>1?r-1:r];let B;l?B="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":B="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${T[0]/A[0]},
          ${T[1]/A[1]});
      const vec2 inputShapeRC = vec2(${g}.0, ${f}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${B};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Np{constructor(e,t,r,a,l){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[c,g,f,E]=e;this.outputShape=[c,t,r,E];const T=[a&&t>1?g-1:g,a&&r>1?f-1:f],A=[a&&t>1?t-1:t,a&&r>1?r-1:r];let B;l?B="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":B="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${T[0]/A[0]},
          ${T[1]/A[1]},
          ${T[1]/A[1]});
      const vec3 inputShapeRC = vec3(${g}.0, ${f}.0,
                                     ${f}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${B};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${E-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ip(n){const{inputs:e,backend:t,attrs:r}=n,{images:a}=e,{alignCorners:l,halfPixelCenters:c,size:g}=r,[f,E]=g,T=(0,u.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Np(a.shape,f,E,l,c):new $p(a.shape,f,E,l,c);return t.runWebGLProgram(T,[a],"float32")}const _p={kernelName:u._Yw,backendName:"webgl",kernelFunc:Ip};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dp{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,l]=t,[,c,g]=e,f=[r&&c>1?a-1:a,r&&g>1?l-1:l],E=[r&&c>1?c-1:c,r&&g>1?g-1:g],T=f[0]/E[0],A=f[1]/E[1],B=1/T,K=1/A,Q=Math.ceil(B)*2+2,ce=Math.ceil(K)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${T});
        const float widthScale = float(${A});

        const float invHeightScale = float(${B});
        const float invWidthScale = float(${K});

        const int winHeight = int(${Q});
        const int winWidth = int(${ce});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${c}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${g}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${l-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Op(n){const{inputs:e,backend:t,attrs:r}=n,{images:a,dy:l}=e,{alignCorners:c}=r,g=new Dp(l.shape,a.shape,c);return t.runWebGLProgram(g,[l],l.dtype)}const Rp={kernelName:u.zbQ,backendName:"webgl",kernelFunc:Op};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ap{constructor(e,t,r,a,l){this.variableNames=["A"],this.outputShape=[];const[c,g,f,E]=e;this.outputShape=[c,t,r,E];const T=[a&&t>1?g-1:g,a&&r>1?f-1:f],A=[a&&t>1?t-1:t,a&&r>1?r-1:r],B=a?"0.5":"0.0";let K;l?K="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":K="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${T[0]/A[0]},
          ${T[1]/A[1]});
      const vec2 inputShapeRC = vec2(${g}.0, ${f}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${K};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${B})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kp{constructor(e,t,r,a,l){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[c,g,f,E]=e;this.outputShape=[c,t,r,E];const T=[a&&t>1?g-1:g,a&&r>1?f-1:f],A=[a&&t>1?t-1:t,a&&r>1?r-1:r],B=a?"0.5":"0.0";let K;l?K="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":K="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${T[0]/A[0]},
          ${T[1]/A[1]},
          ${T[1]/A[1]});
      const vec3 inputShapeRC = vec3(${g}.0, ${f}.0,
                                     ${f}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${K};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${B})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${E-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pp(n){const{inputs:e,backend:t,attrs:r}=n,{images:a}=e,{alignCorners:l,halfPixelCenters:c,size:g}=r,[f,E]=g,T=(0,u.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new kp(a.shape,f,E,l,c):new Ap(a.shape,f,E,l,c);return t.runWebGLProgram(T,[a],a.dtype)}const Fp={kernelName:u.dpD,backendName:"webgl",kernelFunc:Pp};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bp{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,l]=t,[,c,g]=e,f=[r&&c>1?a-1:a,r&&g>1?l-1:l],E=[r&&c>1?c-1:c,r&&g>1?g-1:g],T=f[0]/E[0],A=f[1]/E[1],B=1/T,K=1/A,Q=Math.ceil(B)*2+2,ce=Math.ceil(K)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${T});
        const float widthScale = float(${A});

        const float invHeightScale = float(${B});
        const float invWidthScale = float(${K});

        const int winHeight = int(${Q});
        const int winWidth = int(${ce});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${c}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${g}) {
              continue;
            }

            float sourceFracRow =
              float(${f[0]}) *
                (float(dyR) / float(${E[0]}));

            float sourceFracCol =
                float(${f[1]}) *
                  (float(dyC) / float(${E[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${l}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lp(n){const{inputs:e,backend:t,attrs:r}=n,{images:a,dy:l}=e,{alignCorners:c}=r,g=new Bp(l.shape,a.shape,c);return t.runWebGLProgram(g,[l],l.dtype)}const Up={kernelName:u.Hmb,backendName:"webgl",kernelFunc:Lp};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vp{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const a=g=>t.indexOf(g)!==-1&&e[g]!==1?`${e[g]} - coords[${g}] - 1`:`coords[${g}]`,l=e.map((g,f)=>a(f)).join(","),c=Lt(r);this.userCode=`
      void main() {
        ${c} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wp{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const a=hn("rc",r),l=`${a[r-1]} + 1 < ${this.outputShape[r-1]}`,c=`${a[r-2]} + 1 < ${this.outputShape[r-2]}`,g=Lt(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${l}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${g} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${f(a.slice())};
          if(${l}){
            result.g = ${E(a.slice())};
          }
          if(${c}) {
            result.b = ${T(a.slice())};
            if(${l}) {
              result.a = ${A(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function f(Q){return B(Q)}function E(Q){return Q[r-1]="("+Q[r-1]+" + 1)",B(Q)}function T(Q){return Q[r-2]="("+Q[r-2]+" + 1)",B(Q)}function A(Q){return Q[r-1]="("+Q[r-1]+" + 1)",Q[r-2]="("+Q[r-2]+" + 1)",B(Q)}function B(Q){const ce=e.map((Ne,et)=>K(et,Q)),ve=ce.join(","),le=ce.slice(-2).join(",");return`getChannel(getX(${ve}), vec2(${le}))`}function K(Q,ce){return t.indexOf(Q)!==-1&&e[Q]!==1?`${e[Q]} - ${ce[Q]} - 1`:`${ce[Q]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mp(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{dims:l}=r,c=a.shape.length,g=u.D5U.parseAxisParam(l,a.shape);if(c===0)return bn({inputs:{x:a},backend:t});const f=(0,u.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Wp(a.shape,g):new Vp(a.shape,g);return t.runWebGLProgram(f,[a],a.dtype)}const zp={kernelName:u.mKl,backendName:"webgl",kernelFunc:Mp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gp{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],a=e[2];this.outputShape=e;let l="";typeof t=="number"?l=`float outputValue = ${t.toFixed(2)};`:l=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${l}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kp={kernelName:u.b9H,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:a,fillValue:l,center:c}=e,g=t,f=new Gp(r.shape,l),[E,T]=u.Wap.getImageCenter(c,r.shape[1],r.shape[2]),A=[[E,T,Math.sin(a),Math.cos(a)]];return g.runWebGLProgram(f,[r],r.dtype,A)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hp=kt({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),jp={kernelName:u.e07,backendName:"webgl",kernelFunc:Hp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xp=kt({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Eo}),Yp={kernelName:u.bV0,backendName:"webgl",kernelFunc:Xp};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kl{constructor(e,t,r,a,l,c,g=!0,f=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=c;const E=Lt(l.length),T=Lt(c.length);let A="";r===1?A="i":r===2&&(A="i, j");const B=`getIndices(${A})`;let K="";a===1?K="i":a===2&&(K="i, coords[1]");const Q=`getUpdates(${K})`;let ce="";f&&(ce="coords[0], coords[1]");const ve=`getDefaultValue(${ce})`,le=t>1?"strides[j]":"strides";this.userCode=`
        ${E} strides = ${E}(${l});

        void main() {
          ${T} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${B});
              flattenedIndex += index * ${le};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${Q};
              found = true;
            }
          }
          setOutput(mix(${ve}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qp{constructor(e,t,r,a,l,c,g=!0,f=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=c;const E=Lt(l.length),T=Lt(c.length);let A="";r===1?A="i":r===2&&(A="i, j");const B=`getIndices(${A})`;let K="";a===1?K="i":a===2&&(K="i, coords[1]");const Q=`getUpdates(${K})`;let ce="";f&&(ce="coords[0], coords[1]");const ve=`getDefaultValue(${ce})`,le=t>1?"strides[j]":"strides",Ne=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${E} strides = ${E}(${l});

        void main() {
          ${T} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${B});
              flattenedIndex += index.xz * ${le};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${Ne};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${Q};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${ve}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qp(n){const{inputs:e,backend:t,attrs:r}=n,{indices:a,updates:l}=e,{shape:c}=r,{sliceRank:g,numUpdates:f,sliceSize:E,strides:T,outputSize:A}=u.Wap.calculateShapes(l,a,c),B=[A/E,E];if(A===0)return t.makeTensorInfo(c,a.dtype);const K=it({inputs:{x:a},backend:t,attrs:{shape:[f,g]}}),Q=it({inputs:{x:l},backend:t,attrs:{shape:[f,E]}}),ce=t.makeTensorInfo([],"float32",new Float32Array([0]));let ve;(0,u.OBj)().getBool("WEBGL_PACK")?ve=new Qp(f,g,K.shape.length,Q.shape.length,T,B):ve=new Kl(f,g,K.shape.length,Q.shape.length,T,B);const le=t.runWebGLProgram(ve,[Q,K,ce],Q.dtype),Ne=it({inputs:{x:le},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(K),t.disposeIntermediateTensorInfo(Q),t.disposeIntermediateTensorInfo(le),t.disposeIntermediateTensorInfo(ce),Ne}const Zp={kernelName:u.xQA,backendName:"webgl",kernelFunc:qp};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jp{constructor(e,t,r,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const l="while (left < right) {",c=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,g=(0,u.OBj)().getNumber("WEBGL_VERSION")===2?l:c,f=a==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${g}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${f} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eh(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:a,values:l}=e,{side:c}=r,g=new Jp(a.shape[0],a.shape[1],l.shape[1],c),f=[[a.shape[1]]];return t.runWebGLProgram(g,[a,l],"int32",f)}const th={kernelName:u.nr8,backendName:"webgl",kernelFunc:eh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nh{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let a,l;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)l="resRC",a="resRC";else{const g=["resRC.x","resRC.y","resRC.z","resRC.w"],f=[],E=[];for(let T=0;T<t.length;T++)E.push(`${g[T]}`),T<e&&f.push(`${g[T]}`);a=f.join(),l=E.join()}const c=Lt(r);this.userCode=`
      void main() {
        ${c} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${l}));
        } else {
          setOutput(getB(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sh(n){const{inputs:e,backend:t}=n,{condition:r,t:a,e:l}=e,c=new nh(r.shape.length,a.shape,a.shape.length);return t.runWebGLProgram(c,[r,a,l],(0,u.x8V)(a.dtype,l.dtype))}const rh={kernelName:u.PhF,backendName:"webgl",kernelFunc:sh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ah=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${u.Wap.SELU_SCALEALPHA};
  float scale = ${u.Wap.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,oh=kt({opSnippet:ah}),ih={kernelName:u.oFR,backendName:"webgl",kernelFunc:oh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uh=Os+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,lh=kt({opSnippet:uh,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:Co}),ch={kernelName:u.a5O,backendName:"webgl",kernelFunc:lh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dh=kt({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),ph={kernelName:u.i5y,backendName:"webgl",kernelFunc:dh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hh=Os+`
  return sin(x);
`,fh=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${ys}
  return result;
`,mh=kt({opSnippet:hh,packedOpSnippet:fh}),gh={kernelName:u.RQH,backendName:"webgl",kernelFunc:mh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yh=kt({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),xh={kernelName:u.wYB,backendName:"webgl",kernelFunc:yh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bh=kt({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),vh={kernelName:u.MRv,backendName:"webgl",kernelFunc:bh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eh=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{blockShape:l,paddings:c}=r;u.D5U.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const g=l.reduce((le,Ne)=>le*Ne),f=[[0,0]];f.push(...c);for(let le=1+l.length;le<a.shape.length;++le)f.push([0,0]);const E=[],T=dc({inputs:{x:a},backend:t,attrs:{paddings:f,constantValue:0}}),A=u.Wap.getReshaped(T.shape,l,g,!1),B=u.Wap.getPermuted(A.length,l.length,!1),K=u.Wap.getReshapedPermuted(T.shape,l,g,!1),Q=it({inputs:{x:T},backend:t,attrs:{shape:A}}),ce=fn({inputs:{x:Q},backend:t,attrs:{perm:B}}),ve=it({inputs:{x:ce},backend:t,attrs:{shape:K}});return E.push(T),E.push(Q),E.push(ce),E.forEach(le=>t.disposeIntermediateTensorInfo(le)),ve},wh={kernelName:u.TQc,backendName:"webgl",kernelFunc:Eh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ch(n){const{inputs:e,backend:t}=n,{indices:r,values:a,denseShape:l,defaultValue:c}=e;if(l.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${l.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(c.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${c.shape}`);const g=t.readSync(r.dataId),f=t.readSync(a.dataId),E=t.readSync(l.dataId),T=t.readSync(c.dataId)[0],[A,B,K,Q,ce]=br(g,r.shape,r.dtype,f,a.dtype,E,T);return[t.makeTensorInfo(B,r.dtype,A),t.makeTensorInfo([B[0]],a.dtype,K),t.makeTensorInfo([Q.length],"bool",new Uint8Array(Q.map(ve=>Number(ve)))),t.makeTensorInfo([ce.length],r.dtype,new Int32Array(ce))]}const Th={kernelName:u.O3z,backendName:"webgl",kernelFunc:Ch};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sh(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:a,newShape:l}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(l.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${l.shape}`);const c=Array.from(t.readSync(a.dataId)),g=t.readSync(r.dataId),f=Array.from(t.readSync(l.dataId)),[E,T,A]=So(g,r.shape,r.dtype,c,f);return[t.makeTensorInfo(T,r.dtype,E),t.makeTensorInfo([A.length],l.dtype,new Int32Array(A))]}const $h={kernelName:u.nhH,backendName:"webgl",kernelFunc:Sh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nh(n){const{inputs:e,backend:t}=n,{data:r,indices:a,segmentIds:l}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(l.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${l.shape}`);const c=t.readSync(r.dataId),g=t.readSync(a.dataId),f=t.readSync(l.dataId),[E,T]=Kr(c,r.shape,r.dtype,g,f,!0);return t.makeTensorInfo(T,r.dtype,E)}const Ih={kernelName:u.w3H,backendName:"webgl",kernelFunc:Nh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _h(n){const{inputs:e,backend:t}=n,{data:r,indices:a,segmentIds:l}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(l.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${l.shape}`);const c=t.readSync(r.dataId),g=t.readSync(a.dataId),f=t.readSync(l.dataId),[E,T]=Kr(c,r.shape,r.dtype,g,f);return t.makeTensorInfo(T,r.dtype,E)}const Dh={kernelName:u.ZjV,backendName:"webgl",kernelFunc:_h};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oh(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:a,sparseValues:l,defaultValue:c}=e,{outputShape:g}=r,{sliceRank:f,numUpdates:E,sliceSize:T,strides:A,outputSize:B}=u.Wap.calculateShapes(l,a,g),K=!1;if(l.dtype==="string"){const le=t.bufferSync(a),Ne=t.bufferSync(l),et=u.D5U.decodeString(t.readSync(c.dataId)[0]),Je=wo(le,Ne,g,B,T,E,f,A,et,K);return t.makeTensorInfo(g,Je.dtype,Je.values)}const Q=new Kl(E,f,a.shape.length,l.shape.length,A,[B,1],K),ce=t.runWebGLProgram(Q,[l,a,c],l.dtype),ve=it({inputs:{x:ce},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(ce),ve}const Rh={kernelName:u.D2d,backendName:"webgl",kernelFunc:Oh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ah(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{numOrSizeSplits:l,axis:c}=r,g=u.D5U.parseAxisParam(c,a.shape)[0],f=u.Wap.prepareSplitSize(a,l,g),E=a.shape.length,T=new Array(E).fill(0),A=a.shape.slice();return f.map(B=>{const K=[...A];K[g]=B;const Q=Rs({inputs:{x:a},backend:t,attrs:{begin:T,size:K}});return T[g]+=B,Q})}const kh={kernelName:u.L8s,backendName:"webgl",kernelFunc:Ah};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hc="return sqrt(x);",Ph=kt({opSnippet:hc,packedOpSnippet:hc,cpuKernelImpl:$o}),Fh={kernelName:u.FKq,backendName:"webgl",kernelFunc:Ph};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bh=kt({opSnippet:"return x * x;"}),Lh={kernelName:u.bK0,backendName:"webgl",kernelFunc:Bh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fc="return (a - b) * (a - b);",Uh=un({opSnippet:fc,packedOpSnippet:fc}),Vh={kernelName:u._tC,backendName:"webgl",kernelFunc:Uh};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wh(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const l=t.readSync(a.dataId),c=u.Wap.fromUint8ToStringArray(l),g=ha(c,"string",r);return t.makeTensorInfo(a.shape,"string",g)}const Mh={kernelName:u.e0R,backendName:"webgl",kernelFunc:Wh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zh({inputs:n,attrs:e,backend:t}){const{x:r}=n,a=wn+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,l=new Vn(r.shape,a);return t.runWebGLProgram(l,[r],r.dtype)}const Gh={kernelName:u.h8e,backendName:"webgl",kernelFunc:zh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kh{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const a=r.length,l=Lt(r.length),c=Lt(r.length);let g="";if(a===1)g="coords * strides + begin";else{let f=0;g=r.map((E,T)=>(f++,r.length===1?`coords * strides[${T}] + begin[${T}]`:`coords[${f-1}] * strides[${T}] + begin[${T}]`)).join(",")}this.userCode=`
      ${l} begin = ${l}(${e});
      ${l} strides = ${l}(${t});

      void main() {
        ${c} coords = getOutputCoords();
        setOutput(getX(${g}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hh(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{begin:l,end:c,strides:g,beginMask:f,endMask:E,ellipsisMask:T,newAxisMask:A,shrinkAxisMask:B}=r,{finalShapeSparse:K,finalShape:Q,isIdentity:ce,sliceDim0:ve,isSimpleSlice:le,begin:Ne,end:et,strides:Je}=u.kuN.sliceInfo(a.shape,l,c,g,f,E,T,A,B);let lt;if(ce)lt=it({inputs:{x:a},backend:t,attrs:{shape:Q}});else if(ve||le){u.D5U.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const Et=u.kuN.computeOutShape(Ne,et,Je),gt=Rs({inputs:{x:a},backend:t,attrs:{begin:Ne,size:Et}});lt=it({inputs:{x:gt},backend:t,attrs:{shape:Q}}),t.disposeIntermediateTensorInfo(gt)}else if(t.shouldExecuteOnCPU([a])){const gt=t.readSync(a.dataId),Pt=(0,u.f3b)(a.shape,a.dtype,gt),Dt=No(K,Pt,Je,Ne);lt=t.makeTensorInfo(Q,a.dtype,Dt.values)}else{const gt=new Kh(Ne,Je,K);lt=t.runWebGLProgram(gt,[a],a.dtype)}const Nt=it({inputs:{x:lt},backend:t,attrs:{shape:Q}});return t.disposeIntermediateTensorInfo(lt),Nt}const jh={kernelName:u.jQk,backendName:"webgl",kernelFunc:Hh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xh(n){const{inputs:e,backend:t,attrs:r}=n,{separator:a,nGramWidths:l,leftPad:c,rightPad:g,padWidth:f,preserveShortSequences:E}=r,{data:T,dataSplits:A}=e,B=t.readSync(T.dataId),K=t.readSync(A.dataId),[Q,ce]=Io(B,K,a,l,c,g,f,E);return[t.makeTensorInfo([Q.length],"string",Q),t.makeTensorInfo(A.shape,"int32",ce)]}const Yh={kernelName:u._JP,backendName:"webgl",kernelFunc:Xh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qh(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:a}=r,{input:l,delimiter:c}=e;if(l.dtype!=="string")throw new Error("Input must be of datatype string");if(l.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${l.shape}`);if(c.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${c.shape}`);const g=t.readSync(l.dataId),f=t.readSync(c.dataId)[0],[E,T,A]=vr(g,f,a),B=T.length;return[t.makeTensorInfo([B,2],"int32",E),t.makeTensorInfo([B],"string",T),t.makeTensorInfo([2],"int32",new Int32Array(A))]}const qh={kernelName:u.s1s,backendName:"webgl",kernelFunc:Qh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zh(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:a}=r,{input:l}=e;if(l.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const c=t.readSync(l.dataId),g=_o(c,a);return t.makeTensorInfo(l.shape,"int32",g)}const Jh={kernelName:u.XkS,backendName:"webgl",kernelFunc:Zh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ef=kt({opSnippet:"return tan(x);"}),tf={kernelName:u.sEM,backendName:"webgl",kernelFunc:ef};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nf=kt({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),sf={kernelName:u.MIZ,backendName:"webgl",kernelFunc:nf};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rf(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:a,indices:l,updates:c}=e,{}=r,{sliceRank:g,numUpdates:f,sliceSize:E,strides:T,outputSize:A}=u.Wap.calculateShapes(c,l,a.shape),B=[A/E,E];if(A===0)return t.makeTensorInfo(a.shape,l.dtype);const K=it({inputs:{x:l},backend:t,attrs:{shape:[f,g]}}),Q=it({inputs:{x:c},backend:t,attrs:{shape:[f,E]}}),ce=it({inputs:{x:a},backend:t,attrs:{shape:B}}),ve=new Kl(f,g,K.shape.length,Q.shape.length,T,B,!1,!0),le=t.runWebGLProgram(ve,[Q,K,ce],ce.dtype),Ne=it({inputs:{x:le},backend:t,attrs:{shape:a.shape}});return t.disposeIntermediateTensorInfo(K),t.disposeIntermediateTensorInfo(Q),t.disposeIntermediateTensorInfo(ce),t.disposeIntermediateTensorInfo(le),Ne}const af={kernelName:u.SIB,backendName:"webgl",kernelFunc:rf};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class of{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let c=0;c<r.length;c++)r[c]=e[c]*t[c];this.outputShape=r,this.rank=r.length;const a=Lt(this.rank),l=uf(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${l}));
      }
    `}}function uf(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<n.length;a++)r.push(`imod(${t[a]}, ${n[a]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mc(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{reps:l}=r;if(a.dtype==="string"||a.shape.length>5){const f=t.readSync(a.dataId),E=a.dtype==="string"?f.map(B=>u.D5U.decodeString(B)):f,T=(0,u.f3b)(a.shape,a.dtype,E),A=Do(T,l);return t.makeTensorInfo(A.shape,A.dtype,A.values)}const c=new of(a.shape,l);return t.runWebGLProgram(c,[a],a.dtype)}const lf={kernelName:u.n9L,backendName:"webgl",kernelFunc:mc};class cf{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class df{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function or(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function gc(n){let e=1;for(;e<n;)e*=2;return e}function pf(n){const{inputs:e,backend:t,attrs:r}=n,{x:a}=e,{k:l,sorted:c}=r,g=(0,u.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),f=(0,u.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),E=a.shape,T=E[E.length-1];if(t.shouldExecuteOnCPU([a])||T<g||l>f){const Dt=t.readSync(a.dataId),[Jt,sn]=Oo(Dt,E,a.dtype,l,c);return[t.makeTensorInfo(Jt.shape,Jt.dtype,Jt.values),t.makeTensorInfo(sn.shape,sn.dtype,sn.values)]}if(l===0)return E[E.length-1]=0,[t.makeTensorInfo(E,a.dtype,[]),t.makeTensorInfo(E,"int32",[])];if(T===1)return[a,y({attrs:{shape:E,dtype:"int32",value:0},backend:t})];const A=t.texData.get(a.dataId),B=A!==null&&A.isPacked,K=B?t.unpackTensor(a):a,ce=u.D5U.sizeFromShape(E)/T,ve=it({inputs:{x:K},attrs:{shape:[ce,T]},backend:t});B&&or(t,K);const le=gc(l),Ne=gc(T);let et=null;const Je=()=>et===null?[ve,ve]:[ve,et],lt=(Dt,Jt,sn)=>{const us=Je(),Nn=new cf(sn),Mn=[[T],[et===null?1:0],[Number.NEGATIVE_INFINITY],[Dt],[Jt]],Yn=et;et=t.runWebGLProgram(Nn,us,"int32",Mn),or(t,Yn)};for(let Dt=1;Dt<le;Dt*=2){const Jt=Dt*2;for(let sn=Dt;sn>=1;sn/=2)lt(Jt,sn,[ce,Ne])}for(let Dt=Ne;Dt>le;Dt/=2){const Jt=Je(),sn=new df([ce,Dt/2]),Nn=[[T],[et===null?1:0],[le]],An=et;et=t.runWebGLProgram(sn,Jt,"int32",Nn),or(t,An);const Mn=le/2,Yn=Mn*2;for(let vn=Mn;vn>=1;vn/=2)lt(Yn,vn,et.shape)}let Nt=et;et=Rs({inputs:{x:et},backend:t,attrs:{begin:0,size:[ce,l]}}),or(t,Nt);let Et=Mt({inputs:{x:ve,indices:et},backend:t,attrs:{axis:1,batchDims:1}});or(t,ve);const gt=E.slice(0,-1);gt.push(l),Nt=et,et=it({inputs:{x:et},attrs:{shape:gt},backend:t}),or(t,Nt);const Pt=Et;return Et=it({inputs:{x:Et},attrs:{shape:gt},backend:t}),or(t,Pt),[Et,et]}const hf={kernelName:u.cWu,backendName:"webgl",kernelFunc:pf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ff{constructor(e,t,r,a,l,c){this.variableNames=["Image","Transforms"],this.outputShape=c;const g=r==="nearest"?1:2;let f;switch(a){case"constant":f=1;break;case"reflect":f=2;break;case"wrap":f=3;break;case"nearest":f=4;break;default:f=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${f} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${f} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${f} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${l});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${l});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${g} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mf(n){const{inputs:e,backend:t,attrs:r}=n,{image:a,transforms:l}=e,{interpolation:c,fillMode:g,fillValue:f,outputShape:E}=r,[T,A,B,K]=a.shape,[Q,ce]=E??[A,B],ve=[T,Q,ce,K],le=new ff(A,B,c,g,f,ve);return t.runWebGLProgram(le,[a,l],"float32")}const gf={kernelName:u.wx7,backendName:"webgl",kernelFunc:mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yf(n){const{inputs:e,attrs:t,backend:r}=n,{axis:a}=t,{x:l}=e;q(l,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const c=r.readSync(l.dataId),{outputValues:g,outputShape:f,indices:E}=Ro(c,a,l.shape,l.dtype);return[r.makeTensorInfo(f,l.dtype,g),r.makeTensorInfo([E.length],"int32",E)]}const xf={kernelName:u.kpP,backendName:"webgl",kernelFunc:yf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bf(n){const{inputs:e,backend:t,attrs:r}=n,{value:a}=e;let{axis:l}=r;l<0&&(l+=a.shape.length);const c=a,g=c.shape.length,f=a.shape[l],E=new Array(g-1);let T=0;for(let ce=0;ce<g;ce++)ce!==l&&(E[T++]=c.shape[ce]);const A=[],B=new Array(g).fill(0),K=c.shape.slice();K[l]=1;const Q=new Array(f);for(let ce=0;ce<Q.length;ce++){B[l]=ce;const ve=Rs({inputs:{x:c},backend:t,attrs:{begin:B,size:K}}),le=it({inputs:{x:ve},backend:t,attrs:{shape:E}});Q[ce]=le,A.push(ve)}return A.forEach(ce=>t.disposeIntermediateTensorInfo(ce)),Q}const vf={kernelName:u.ToN,backendName:"webgl",kernelFunc:bf};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ef{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,a=e.batchSize,l=e.inSize,c=e.numSegments,g=c*Math.ceil(l/r);this.outputShape=[a,g];const f="0.0",E="sumValue",T=Math.floor(r/4)*4,A=r%4,B=`
        sumValue += dot(values, segFilter);
    `;let K="";l%r>0&&(K=`
        if (inIdx < 0 || inIdx >= ${l}) {
          return initializationValue;
        }
      `);let Q="";l%r>0&&(Q=`
        if (inIdx < 0 || inIdx >= ${l}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${f};

      float getValue(int batch, int inIdx) {
        ${K}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${Q}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${c})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${c})));

        float sumValue = 0.0;

        for (int i = 0; i < ${T}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${B}
        }

        int inIdx = inOffset + ${T};
        if (${A===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${B}
        } else if (${A===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${B}
        } else if (${A===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${B}
        }
        setOutput(${E});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wf(n){const{inputs:e,backend:t,attrs:r}=n,{x:a,segmentIds:l}=e,{numSegments:c}=r,g=a.shape.length,f=[];let E=0;const T=u.Wap.getAxesPermutation([E],g);let A=a;T!=null&&(A=fn({inputs:{x:a},backend:t,attrs:{perm:T}}),f.push(A),E=u.Wap.getInnerMostAxes(1,g)[0]);const B=u.Wap.segment_util.computeOutShape(A.shape,E,c),K=u.D5U.sizeFromShape([A.shape[E]]),Q=it({inputs:{x:A},backend:t,attrs:{shape:[-1,K]}});f.push(Q);const ce=(0,u.z4k)(a.dtype),ve=(Je,lt,Nt,Et,gt)=>{const Pt=Je.shape[0],Dt=Je.shape[1],Jt=u.Wap.segment_util.segOpComputeOptimalWindowSize(Dt,gt),sn={windowSize:Jt,inSize:Dt,batchSize:Pt,numSegments:gt},us=new Ef(sn,lt),Nn=t.compileAndRun(us,[Je,Nt],Et);if(f.push(Nn),Nn.shape[1]===gt)return Nn;const An=pc({backend:t,attrs:{start:0,stop:gt,step:1,dtype:"float32"}}),Mn=mc({inputs:{x:An},backend:t,attrs:{reps:[Dt/Jt]}});return f.push(An),f.push(Mn),ve(Nn,lt,Mn,Et,gt)},le=ve(Q,"unsortedSegmentSum",l,ce,c),Ne=it({inputs:{x:le},backend:t,attrs:{shape:B}});let et=Ne;if(T!=null){f.push(Ne);const Je=u.Wap.getUndoAxesPermutation(T);et=fn({inputs:{x:et},backend:t,attrs:{perm:Je}})}return f.forEach(Je=>t.disposeIntermediateTensorInfo(Je)),et}const Cf={kernelName:u.Qvg,backendName:"webgl",kernelFunc:wf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tf=[hi,mi,xi,vi,wi,Si,Ni,_i,Ai,Pi,Li,Or,Wi,zi,ea,Hi,Xi,Cn,Qi,Zi,tu,uu,lu,Fa,fu,bu,Eu,Ua,ti,$u,Du,Ka,Uu,Mu,Gu,As,ju,Qu,Zu,tl,sl,al,il,cl,yn,fl,gl,bl,wl,Tl,$l,Dl,Rl,Pl,Bl,Ll,Vl,Ml,h,v,F,De,dt,on,jt,Zt,Xt,Wn,Ps,ei,xc,Iu,vc,wc,Tc,si,$c,Ic,Dc,Ac,Fc,Lc,Vc,Mc,Hc,Yc,qc,td,sd,ad,ld,dd,hd,md,yd,Ed,Sd,_d,Pd,ri,Ud,Md,Kd,Xd,ra,qd,Jd,tp,rp,up,Xr,cp,pp,fp,gp,yp,gu,Od,bp,wp,Sp,oi,_p,Rp,Fp,Up,zp,Kp,jp,Yp,Zp,th,rh,ih,ch,ph,gh,xh,ou,Ad,vh,wh,Th,$h,Ih,Dh,Rh,kh,Fh,Lh,Vh,Mh,Gh,jh,Yh,qh,Jh,Rd,qr,tf,sf,af,lf,hf,gf,di,xf,vf,Cf,Zd];for(const n of Tf)(0,u.wCN)(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},8312:function(st,ke,S){"use strict";S.d(ke,{YL:()=>_e});var u={};S.r(u),S.d(u,{json:()=>Pe});var he={};S.r(he),S.d(he,{json:()=>Ye});var R={};S.r(R),S.d(R,{json:()=>Oe});var W={};S.r(W),S.d(W,{json:()=>me});var x={};S.r(x),S.d(x,{json:()=>Ue});var I={};S.r(I),S.d(I,{json:()=>je});var Y={};S.r(Y),S.d(Y,{json:()=>at});var V={};S.r(V),S.d(V,{json:()=>rt});var se={};S.r(se),S.d(se,{json:()=>Qe});var J={};S.r(J),S.d(J,{json:()=>mt});var D={};S.r(D),S.d(D,{json:()=>yt});var b={};S.r(b),S.d(b,{json:()=>oe});var te={};S.r(te),S.d(te,{json:()=>Be});var ge={};S.r(ge),S.d(ge,{json:()=>Xe});var $e={};S.r($e),S.d($e,{json:()=>ot});var Fe={};S.r(Fe),S.d(Fe,{json:()=>bt});var Ve={};S.r(Ve),S.d(Ve,{json:()=>Ct});var Ge={};S.r(Ge),S.d(Ge,{json:()=>It});var qe={};S.r(qe),S.d(qe,{json:()=>Ot});var He={};S.r(He),S.d(He,{OP_SCOPE_SUFFIX:()=>q.zvA,abs:()=>q.WnP,acos:()=>q.Khb,acosh:()=>q.__u,add:()=>q.IHx,addN:()=>q.QBD,all:()=>q.$6P,any:()=>q.YjB,argMax:()=>q.NqF,argMin:()=>q.vHJ,asin:()=>q.ZRM,asinh:()=>q.VfV,atan:()=>q.z4N,atan2:()=>q.fvJ,atanh:()=>q.C80,avgPool:()=>q.wS1,avgPool3d:()=>q.uR5,basicLSTMCell:()=>q.zEQ,batchNorm:()=>q.tgs,batchNorm2d:()=>q.Dxk,batchNorm3d:()=>q.JY5,batchNorm4d:()=>q.p3b,batchToSpaceND:()=>q.E4h,bincount:()=>q.yE8,bitwiseAnd:()=>q.ycw,booleanMaskAsync:()=>q.anm,broadcastArgs:()=>q.XsQ,broadcastTo:()=>q.UFq,buffer:()=>q.f3b,cast:()=>q.pju,ceil:()=>q.mDi,clipByValue:()=>q.iUl,clone:()=>q.d9v,complex:()=>q.PYB,concat:()=>q.zoF,concat1d:()=>q.gME,concat2d:()=>q.Izb,concat3d:()=>q.MNy,concat4d:()=>q.ZaL,conv1d:()=>q.PAt,conv2d:()=>q.Tek,conv2dTranspose:()=>q.bc,conv3d:()=>q.pdZ,conv3dTranspose:()=>q.$QV,cos:()=>q.mCk,cosh:()=>q.f9Y,cosineWindow:()=>q.mew,cumprod:()=>q.$Gn,cumsum:()=>q.zbp,denseBincount:()=>q.ppE,depthToSpace:()=>q.nTT,depthwiseConv2d:()=>q.B10,diag:()=>q.Ka3,dilation2d:()=>q.WmZ,div:()=>q.hiC,divNoNan:()=>q.NTj,dot:()=>q.AKD,dropout:()=>q.rvX,einsum:()=>q.WYO,elu:()=>q.pyx,enclosingPowerOfTwo:()=>q.GRh,ensureShape:()=>q.EDe,equal:()=>q.DgJ,erf:()=>q.qNN,euclideanNorm:()=>q.d2q,exp:()=>q.Qqt,expandDims:()=>q.dt4,expm1:()=>q.t$B,eye:()=>q.iyy,fft:()=>q.kp_,fill:()=>q.hlL,floor:()=>q.GWj,floorDiv:()=>q.qPi,fused:()=>q.imm,gather:()=>q.Iqj,gatherND:()=>q.dbB,greater:()=>q.pjt,greaterEqual:()=>q.brS,ifft:()=>q.Sxn,imag:()=>q.asL,image:()=>q.BHj,inTopKAsync:()=>q.V3u,irfft:()=>q.wx0,isFinite:()=>q.xVT,isInf:()=>q.UWc,isNaN:()=>q.i2d,leakyRelu:()=>q.hi7,less:()=>q.d9m,lessEqual:()=>q.zN1,linalg:()=>q.$r2,linspace:()=>q.SX3,localResponseNormalization:()=>q.G9k,log:()=>q.cM7,log1p:()=>q.Krr,logSigmoid:()=>q.e_t,logSoftmax:()=>q.CmS,logSumExp:()=>q.l_t,logicalAnd:()=>q.HvI,logicalNot:()=>q.hJK,logicalOr:()=>q.K5V,logicalXor:()=>q.egP,losses:()=>q.MB5,lowerBound:()=>q.eab,matMul:()=>q.OI3,max:()=>q.Fp7,maxPool:()=>q._sB,maxPool3d:()=>q.YQQ,maxPoolWithArgmax:()=>q.Ip$,maximum:()=>q.gWQ,mean:()=>q.J69,meshgrid:()=>q.ry_,min:()=>q.VV$,minimum:()=>q.LTh,mirrorPad:()=>q.VdP,mod:()=>q.wQq,moments:()=>q.Gi7,movingAverage:()=>q.p_,mul:()=>q.dC7,multiRNNCell:()=>q.rq4,multinomial:()=>q.SJ_,neg:()=>q.W76,norm:()=>q.KOy,notEqual:()=>q.Quu,oneHot:()=>q.lfX,ones:()=>q.iUs,onesLike:()=>q.JpU,op:()=>q.op,outerProduct:()=>q.N2O,pad:()=>q.vku,pad1d:()=>q.pNR,pad2d:()=>q.koy,pad3d:()=>q.t1L,pad4d:()=>q.lGY,pool:()=>q.d_R,pow:()=>q.sQ3,prelu:()=>q.AL3,print:()=>q.S0v,prod:()=>q.WVs,raggedGather:()=>q.$gW,raggedRange:()=>q.VT$,raggedTensorToTensor:()=>q.N89,rand:()=>q.TN_,randomGamma:()=>q.wzB,randomNormal:()=>q.nGf,randomStandardNormal:()=>q.ruB,randomUniform:()=>q.LGj,randomUniformInt:()=>q.pe5,range:()=>q.w6H,real:()=>q.kwC,reciprocal:()=>q.M25,relu:()=>q.UYe,relu6:()=>q.btT,reshape:()=>q.XLQ,reverse:()=>q.GYS,reverse1d:()=>q.SDf,reverse2d:()=>q.diP,reverse3d:()=>q.sx7,reverse4d:()=>q.mG2,rfft:()=>q.QEs,round:()=>q.NMM,rsqrt:()=>q.bp0,scalar:()=>q.iD$,scatterND:()=>q.snQ,searchSorted:()=>q.zcT,selu:()=>q.U8D,separableConv2d:()=>q.U_I,setdiff1dAsync:()=>q.ODp,sigmoid:()=>q.XD2,sign:()=>q.Xxe,signal:()=>q.tdS,sin:()=>q.O$l,sinh:()=>q.R_K,slice:()=>q.tPi,slice1d:()=>q.jZU,slice2d:()=>q.SmN,slice3d:()=>q.CnO,slice4d:()=>q.p0P,softmax:()=>q.XAC,softplus:()=>q.Wvh,spaceToBatchND:()=>q.fBT,sparse:()=>q.rVs,sparseToDense:()=>q.ers,spectral:()=>q.uN7,split:()=>q.Vl2,sqrt:()=>q._b3,square:()=>q.h62,squaredDifference:()=>q.$i,squeeze:()=>q.L9e,stack:()=>q.knu,step:()=>q.Nbs,stridedSlice:()=>q.NXj,string:()=>q.Z_8,sub:()=>q.luU,sum:()=>q.Smz,tan:()=>q.ORZ,tanh:()=>q.AEp,tensor:()=>q.XeE,tensor1d:()=>q.RRF,tensor2d:()=>q.odF,tensor3d:()=>q.wOQ,tensor4d:()=>q.yXz,tensor5d:()=>q.Bfx,tensor6d:()=>q.xZs,tensorScatterUpdate:()=>q.Pg0,tile:()=>q.Gg6,topk:()=>q.hg7,transpose:()=>q.p4s,truncatedNormal:()=>q.Xu6,unique:()=>q.Two,unsortedSegmentSum:()=>q.pUJ,unstack:()=>q.HHK,upperBound:()=>q.GaM,variable:()=>q.VD$,where:()=>q.arb,whereAsync:()=>q.itS,zeros:()=>q.lls,zerosLike:()=>q.P84});var j=S(5924);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(0,j.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,i=>{i&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var z;(function(i){i[i.DT_INVALID=0]="DT_INVALID",i[i.DT_FLOAT=1]="DT_FLOAT",i[i.DT_DOUBLE=2]="DT_DOUBLE",i[i.DT_INT32=3]="DT_INT32",i[i.DT_UINT8=4]="DT_UINT8",i[i.DT_INT16=5]="DT_INT16",i[i.DT_INT8=6]="DT_INT8",i[i.DT_STRING=7]="DT_STRING",i[i.DT_COMPLEX64=8]="DT_COMPLEX64",i[i.DT_INT64=9]="DT_INT64",i[i.DT_BOOL=10]="DT_BOOL",i[i.DT_QINT8=11]="DT_QINT8",i[i.DT_QUINT8=12]="DT_QUINT8",i[i.DT_QINT32=13]="DT_QINT32",i[i.DT_BFLOAT16=14]="DT_BFLOAT16",i[i.DT_QINT16=15]="DT_QINT16",i[i.DT_QUINT16=16]="DT_QUINT16",i[i.DT_UINT16=17]="DT_UINT16",i[i.DT_COMPLEX128=18]="DT_COMPLEX128",i[i.DT_HALF=19]="DT_HALF",i[i.DT_RESOURCE=20]="DT_RESOURCE",i[i.DT_VARIANT=21]="DT_VARIANT",i[i.DT_UINT32=22]="DT_UINT32",i[i.DT_UINT64=23]="DT_UINT64",i[i.DT_FLOAT_REF=101]="DT_FLOAT_REF",i[i.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",i[i.DT_INT32_REF=103]="DT_INT32_REF",i[i.DT_UINT8_REF=104]="DT_UINT8_REF",i[i.DT_INT16_REF=105]="DT_INT16_REF",i[i.DT_INT8_REF=106]="DT_INT8_REF",i[i.DT_STRING_REF=107]="DT_STRING_REF",i[i.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",i[i.DT_INT64_REF=109]="DT_INT64_REF",i[i.DT_BOOL_REF=110]="DT_BOOL_REF",i[i.DT_QINT8_REF=111]="DT_QINT8_REF",i[i.DT_QUINT8_REF=112]="DT_QUINT8_REF",i[i.DT_QINT32_REF=113]="DT_QINT32_REF",i[i.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",i[i.DT_QINT16_REF=115]="DT_QINT16_REF",i[i.DT_QUINT16_REF=116]="DT_QUINT16_REF",i[i.DT_UINT16_REF=117]="DT_UINT16_REF",i[i.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",i[i.DT_HALF_REF=119]="DT_HALF_REF",i[i.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",i[i.DT_VARIANT_REF=121]="DT_VARIANT_REF",i[i.DT_UINT32_REF=122]="DT_UINT32_REF",i[i.DT_UINT64_REF=123]="DT_UINT64_REF"})(z||(z={}));var N;(function(i){let s;(function(o){o[o.LEGACY=0]="LEGACY",o[o.V1=1]="V1",o[o.V2=2]="V2"})(s=i.CheckpointFormatVersion||(i.CheckpointFormatVersion={}))})(N||(N={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P={};function C(i,s){const o={tfOpName:i,category:"custom",inputs:[],attrs:[],customExecutor:s};P[i]=o}function Z(i){return P[i]}function re(i){delete P[i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p(i,s,o,m,$){const O=s.inputParams[i];if(O&&O.inputIndexStart!==void 0){const U=O.inputIndexStart,ue=O.inputIndexEnd===0?void 0:O.inputIndexEnd===void 0?U+1:O.inputIndexEnd,Me=U<0?s.inputNames.length+U:U;if(O.type==="tensor")return Se(s.inputNames[Me],o,m,$);if(O.type==="tensors"){const tt=s.inputs.slice(U,ue);return s.inputNames.slice(U,ue).filter((_t,wt)=>{var ft;return((ft=tt[wt])===null||ft===void 0?void 0:ft.op)!=="NoOp"}).map(_t=>Se(_t,o,m,$))}const Ke=Se(s.inputNames[Me],o,m,$),Ze=Ke.dataSync();return O.type==="number"?Ze[0]:j.D5U.toNestedArray(Ke.shape,Ze)}const L=s.attrParams[i];return L&&L.value}function Se(i,s,o,m){const[$,O]=k(i,o);if(m!=null){const U=m.getHashTableHandleByName($);if(U!=null)return U}const L=o.currentContextIds.find(U=>!!s[ee($,U)]);return L!==void 0?s[ee($,L)][O]:void 0}function Re(i,s,o){return s[ee(i,o.currentContextId)]}function M(i,s){const[o,m,$]=k(i,s);return[ee(o,s&&s.currentContextId),m,$]}function ee(i,s){return s?`${i}-${s}`:i}function k(i,s){if(i==="")return["",0,void 0];const o=s!=null&&s.parseNodeNameCache!=null;if(o){const O=s.parseNodeNameCache.get(i);if(O!=null)return O}const m=i.split(":");let $;if(m.length===1)$=[i,0,void 0];else{const O=m[0],L=m.length===3?m[1]:void 0,U=Number(m[m.length-1]);$=[O,U,L]}return o&&s.parseNodeNameCache.set(i,$),$}function X(i,s){const o=[];for(let m=0;m<i.length;m+=s)o.push(i.slice(m,m+s));return o}function H(i,s,o){let m=p("pad",i,s,o);if(m==="explicit"){m=p("explicitPaddings",i,s,o);const $=[[0,0],[0,0],[0,0],[0,0]];for(let O=0;O<4;O++)$[O][0]=m[O*2],$[O][1]=m[O*2+1];return $}return m}function we(i){return i.kept?i:(0,j.d9v)(i)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pe=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ye=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oe=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const me=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ue=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const je=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const at=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rt=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qe=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mt=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yt=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oe=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Be=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xe=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ot=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bt=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ct=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const It=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ot=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zt{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const s=[u,he,R,W,x,I,Y,V,se,J,D,b,te,ge,$e,Fe,Ve,Ge,qe],o=[].concat(...s.map(m=>m.json));this.opMappers=o.reduce((m,$)=>(m[$.tfOpName]=$,m),{})}transformGraph(s,o={}){const m=s.node,$=[],O=[],L=[],U=m.reduce((wt,ft)=>(wt[ft.name]=this.mapNode(ft),ft.op.startsWith("Placeholder")?$.push(wt[ft.name]):ft.op==="Const"?O.push(wt[ft.name]):(ft.input==null||ft.input.length===0)&&L.push(wt[ft.name]),wt),{});let ue=[];const Me=[];let Ke={},Ze={};o!=null&&(Ke=this.mapSignatureEntries(o.inputs),Ze=this.mapSignatureEntries(o.outputs));const tt=Object.keys(U);tt.forEach(wt=>{const ft=U[wt];ft.inputNames.forEach((St,Kt)=>{const[En,,Ut]=M(St),On=U[En];if(On.outputs!=null){const $s=On.outputs.indexOf(Ut);if($s!==-1){const Ns=`${En}:${$s}`;ft.inputNames[Kt]=Ns}}ft.inputs.push(On),On.children.push(ft)})}),Object.keys(Ze).length===0?tt.forEach(wt=>{const ft=U[wt];ft.children.length===0&&Me.push(ft)}):Object.keys(Ze).forEach(wt=>{const[ft]=M(wt),St=U[ft];St!=null&&(St.signatureKey=Ze[wt],Me.push(St))}),Object.keys(Ke).length>0?Object.keys(Ke).forEach(wt=>{const[ft]=M(wt),St=U[ft];St&&(St.signatureKey=Ke[wt],ue.push(St))}):ue=$;let ut={};s.library!=null&&s.library.function!=null&&(ut=s.library.function.reduce((wt,ft)=>(wt[ft.signature.name]=this.mapFunction(ft),wt),{}));const _t={nodes:U,inputs:ue,outputs:Me,weights:O,placeholders:$,signature:o,functions:ut};return L.length>0&&(_t.initNodes=L),_t}mapSignatureEntries(s){return Object.keys(s||{}).reduce((o,m)=>(o[s[m].name]=m,o),{})}mapNode(s){const o=Z(s.op)||this.opMappers[s.op]||{};s.attr==null&&(s.attr={});const m={name:s.name,op:s.op,category:o.category,inputNames:(s.input||[]).map($=>$.startsWith("^")?$.slice(1):$),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:s.attr,outputs:o.outputs};return o.inputs!=null&&(m.inputParams=o.inputs.reduce(($,O)=>($[O.name]={type:O.type,inputIndexStart:O.start,inputIndexEnd:O.end},$),{})),o.attrs!=null&&(m.attrParams=o.attrs.reduce(($,O)=>{const L=O.type;let U;switch(O.type){case"string":U=cn(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=cn(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"string[]":U=qn(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=qn(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"number":U=Qn(s.attr,O.tfName,O.defaultValue||0),U===void 0&&O.tfDeprecatedName&&(U=Qn(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"number[]":U=Fn(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=Fn(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"bool":U=mn(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=mn(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"bool[]":U=Ie(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=Ie(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"shape":U=Pn(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=Pn(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"shape[]":U=Bn(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=Bn(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"dtype":U=kn(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=kn(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"dtype[]":U=zn(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=zn(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"func":U=cs(s.attr,O.tfName,O.defaultValue),U===void 0&&O.tfDeprecatedName&&(U=cs(s.attr,O.tfDeprecatedName,O.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${O.type} for op: ${s.op}`)}return $[O.name]={value:U,type:L},$},{})),m}mapFunction(s){const o=s.nodeDef,m=[],$=[];let O={};o!=null&&(O=o.reduce((Ze,tt)=>(Ze[tt.name]=this.mapNode(tt),tt.op==="Const"&&$.push(Ze[tt.name]),Ze),{}));const L=[],U=[];s.signature.inputArg.forEach(Ze=>{const[tt]=M(Ze.name),ut={name:tt,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ls(Ze.type),type:"dtype"}},children:[]};ut.signatureKey=Ze.name,L.push(ut),O[tt]=ut}),Object.keys(O).forEach(Ze=>{const tt=O[Ze];tt.inputNames.forEach((ut,_t)=>{const[wt,,ft]=M(ut),St=O[wt];if(St.outputs!=null){const Kt=St.outputs.indexOf(ft);if(Kt!==-1){const En=`${wt}:${Kt}`;tt.inputNames[_t]=En}}tt.inputs.push(St),St.children.push(tt)})});const Me=s.ret;s.signature.outputArg.forEach(Ze=>{const[tt,ut]=M(Me[Ze.name]),_t=O[tt];_t!=null&&(_t.defaultOutput=ut,U.push(_t))});const Ke=this.mapArgsToSignature(s);return{nodes:O,inputs:L,outputs:U,weights:$,placeholders:m,signature:Ke}}mapArgsToSignature(s){return{methodName:s.signature.name,inputs:s.signature.inputArg.reduce((o,m)=>(o[m.name]=this.mapArgToTensorInfo(m),o),{}),outputs:s.signature.outputArg.reduce((o,m)=>(o[m.name]=this.mapArgToTensorInfo(m,s.ret),o),{})}}mapArgToTensorInfo(s,o){let m=s.name;return o!=null&&(m=o[m]),{name:m,dtype:s.type}}}function Yt(i){const s=(0,j.OBj)().global;if(typeof s.atob<"u")return s.atob(i);if(typeof Buffer<"u")return new Buffer(i,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function ln(i,s){const o=Array.isArray(i)?String.fromCharCode.apply(null,i):Yt(i);return s?o:o.toLowerCase()}function cn(i,s,o,m=!1){const $=i[s];return $!=null?ln($.s,m):o}function mn(i,s,o){const m=i[s];return m?m.b:o}function Qn(i,s,o){const m=i[s]||{},$=m.i!=null?m.i:m.f!=null?m.f:o;return typeof $=="number"?$:parseInt($,10)}function ls(i){switch(typeof i=="string"&&(i=z[i]),i){case z.DT_FLOAT:case z.DT_HALF:return"float32";case z.DT_INT32:case z.DT_INT64:case z.DT_INT8:case z.DT_UINT8:return"int32";case z.DT_BOOL:return"bool";case z.DT_DOUBLE:return"float32";case z.DT_STRING:return"string";case z.DT_COMPLEX64:case z.DT_COMPLEX128:return"complex64";default:return null}}function cs(i,s,o){const m=i[s];return m&&m.func?m.func.name:o}function kn(i,s,o){const m=i[s];return m&&m.type?ls(m.type):o}function zn(i,s,o){const m=i[s];return m&&m.list&&m.list.type?m.list.type.map($=>ls($)):o}function an(i){if(!i.unknownRank)return i.dim!=null?i.dim.map(s=>typeof s.size=="number"?s.size:parseInt(s.size,10)):[]}function Pn(i,s,o){const m=i[s];return m&&m.shape?an(m.shape):o}function Fn(i,s,o){const m=i[s];return m?((m.list.f&&m.list.f.length?m.list.f:m.list.i)||[]).map($=>typeof $=="number"?$:parseInt($,10)):o}function qn(i,s,o,m=!1){const $=i[s];return $&&$.list&&$.list.s?$.list.s.map(O=>ln(O,m)):o}function Bn(i,s,o){const m=i[s];return m&&m.list&&m.list.shape?m.list.shape.map($=>an($)):o}function Ie(i,s,o){const m=i[s];return m&&m.list&&m.list.b?m.list.b:o}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ze{constructor(s,o,m){this.node=s,this.tensorMap=o,this.context=m,this.inputs=[],this.attrs={},this.inputs=s.inputNames.map($=>this.getInput($)),s.rawAttrs!=null&&(this.attrs=Object.keys(s.rawAttrs).reduce(($,O)=>($[O]=this.getAttr(O),$),{}))}getInput(s){return Se(s,this.tensorMap,this.context)}getAttr(s,o){const m=this.node.rawAttrs[s];if(m.tensor!=null)return Se(s,this.tensorMap,this.context);if(m.i!=null||m.f!=null)return Qn(this.node.rawAttrs,s,o);if(m.s!=null)return cn(this.node.rawAttrs,s,o);if(m.b!=null)return mn(this.node.rawAttrs,s,o);if(m.shape!=null)return Pn(this.node.rawAttrs,s,o);if(m.type!=null)return kn(this.node.rawAttrs,s,o);if(m.list!=null){if(m.list.i!=null||m.list.f!=null)return Fn(this.node.rawAttrs,s,o);if(m.list.s!=null)return qn(this.node.rawAttrs,s,o);if(m.list.shape!=null)return Bn(this.node.rawAttrs,s,o);if(m.list.b!=null)return Ie(this.node.rawAttrs,s,o);if(m.list.type!=null)return zn(this.node.rawAttrs,s,o)}return o}}var q=S(4337);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Te=(i,s,o,m=He)=>{switch(i.op){case"BiasAdd":case"AddV2":case"Add":return[m.add(p("a",i,s,o),p("b",i,s,o))];case"AddN":return[m.addN(p("tensors",i,s,o))];case"FloorMod":case"Mod":return[m.mod(p("a",i,s,o),p("b",i,s,o))];case"Mul":return[m.mul(p("a",i,s,o),p("b",i,s,o))];case"RealDiv":case"Div":return[m.div(p("a",i,s,o),p("b",i,s,o))];case"DivNoNan":return[m.divNoNan(p("a",i,s,o),p("b",i,s,o))];case"FloorDiv":return[m.floorDiv(p("a",i,s,o),p("b",i,s,o))];case"Sub":return[m.sub(p("a",i,s,o),p("b",i,s,o))];case"Minimum":return[m.minimum(p("a",i,s,o),p("b",i,s,o))];case"Maximum":return[m.maximum(p("a",i,s,o),p("b",i,s,o))];case"Pow":return[m.pow(p("a",i,s,o),p("b",i,s,o))];case"SquaredDifference":return[m.squaredDifference(p("a",i,s,o),p("b",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},We="arithmetic";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ct=(i,s,o,m=He)=>{switch(i.op){case"Abs":case"ComplexAbs":return[m.abs(p("x",i,s,o))];case"Acos":return[m.acos(p("x",i,s,o))];case"Acosh":return[m.acosh(p("x",i,s,o))];case"Asin":return[m.asin(p("x",i,s,o))];case"Asinh":return[m.asinh(p("x",i,s,o))];case"Atan":return[m.atan(p("x",i,s,o))];case"Atan2":return[m.atan2(p("x",i,s,o),p("y",i,s,o))];case"Atanh":return[m.atanh(p("x",i,s,o))];case"Ceil":return[m.ceil(p("x",i,s,o))];case"Complex":return[m.complex(p("real",i,s,o),p("imag",i,s,o))];case"Cos":return[m.cos(p("x",i,s,o))];case"Cosh":return[m.cosh(p("x",i,s,o))];case"Elu":return[m.elu(p("x",i,s,o))];case"Erf":return[m.erf(p("x",i,s,o))];case"Exp":return[m.exp(p("x",i,s,o))];case"Expm1":return[m.expm1(p("x",i,s,o))];case"Floor":return[m.floor(p("x",i,s,o))];case"Log":return[m.log(p("x",i,s,o))];case"Log1p":return[m.log1p(p("x",i,s,o))];case"Imag":return[m.imag(p("x",i,s,o))];case"Neg":return[m.neg(p("x",i,s,o))];case"Reciprocal":return[m.reciprocal(p("x",i,s,o))];case"Real":return[m.real(p("x",i,s,o))];case"Relu":return[m.relu(p("x",i,s,o))];case"Round":return[m.round(p("x",i,s,o))];case"Selu":return[m.selu(p("x",i,s,o))];case"Sigmoid":return[m.sigmoid(p("x",i,s,o))];case"Sin":return[m.sin(p("x",i,s,o))];case"Sign":return[m.sign(p("x",i,s,o))];case"Sinh":return[m.sinh(p("x",i,s,o))];case"Softplus":return[m.softplus(p("x",i,s,o))];case"Sqrt":return[m.sqrt(p("x",i,s,o))];case"Square":return[m.square(p("x",i,s,o))];case"Tanh":return[m.tanh(p("x",i,s,o))];case"Tan":return[m.tan(p("x",i,s,o))];case"ClipByValue":return[m.clipByValue(p("x",i,s,o),p("clipValueMin",i,s,o),p("clipValueMax",i,s,o))];case"Relu6":return[m.relu6(p("x",i,s,o))];case"Rsqrt":return[m.rsqrt(Se(i.inputNames[0],s,o))];case"LeakyRelu":return[m.leakyRelu(p("x",i,s,o),p("alpha",i,s,o))];case"Prelu":return[m.prelu(p("x",i,s,o),p("alpha",i,s,o))];case"IsNan":return[m.isNaN(Se(i.inputNames[0],s,o))];case"IsInf":return[m.isInf(Se(i.inputNames[0],s,o))];case"IsFinite":return[m.isFinite(Se(i.inputNames[0],s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},ht="basic_math";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vt(i,s,o=""){if(!(typeof i=="number"||typeof s=="number")){j.D5U.assert(i.length===s.length,()=>o+` Shapes ${i} and ${s} must match`);for(let m=0;m<i.length;m++){const $=i[m],O=s[m];j.D5U.assert($<0||O<0||$===O,()=>o+` Shapes ${i} and ${s} must match`)}}}function Qt(i){return!(typeof i=="number"||i.some(s=>s<0))}function Gt(i,s,o){let m=xn(i,o);const $=!Qt(m);if($&&s.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${m}`);if($&&s.forEach(O=>{m=xn(O.shape,m)}),!Qt(m))throw new Error(`Non-fully-defined elementShape: ${m}`);return m}function xn(i,s){if(typeof i=="number")return s;if(typeof s=="number")return i;if(i.length!==s.length)throw new Error(`Incompatible ranks during merge: ${i} vs. ${s}`);const o=[];for(let m=0;m<i.length;++m){const $=i[m],O=s[m];if($>=0&&O>=0&&$!==O)throw new Error(`Incompatible shape during merge: ${i} vs. ${s}`);o[m]=$>=0?$:O}return o}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tt{constructor(s,o,m,$,O,L,U){this.name=s,this.dtype=o,this.maxSize=m,this.elementShape=$,this.identicalElementShapes=O,this.dynamicSize=L,this.clearAfterRead=U,this.tensors=[],this.closed_=!1,this.idTensor=(0,j.iD$)(0),(0,j.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(s){this.tensors.forEach(o=>{(s==null||!s.has(o.tensor.id))&&o.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(s){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(s<0||s>=this.size())throw new Error(`Tried to read from index ${s}, but array size is: ${this.size()}`);const o=this.tensors[s];if(o.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${s} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(o.cleared=!0),o.read=!0,o.tensor}readMany(s){return s.map(o=>this.read(o))}write(s,o){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(s<0||!this.dynamicSize&&s>=this.maxSize)throw new Error(`Tried to write to index ${s}, but array is not resizeable and size is: ${this.maxSize}`);const m=this.tensors[s]||{};if(o.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${s},
          because the value dtype is ${o.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=o.shape),vt(this.elementShape,o.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${s}.`),m.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${s}, because it has already been read.`);if(m.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${s}, because it has already been written.`);m.tensor=o,(0,j.CnY)(o),m.written=!0,this.tensors[s]=m}writeMany(s,o){if(s.length!==o.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${s.length} is not the same as tensors size: ${o.length}.`);s.forEach((m,$)=>this.write(m,o[$]))}gather(s,o){if(o&&o!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${o}`);if(s)s=s.slice(0,this.size());else{s=[];for(let $=0;$<this.size();$++)s.push($)}if(s.length===0)return(0,j.XeE)([],[0].concat(this.elementShape));const m=this.readMany(s);return vt(this.elementShape,m[0].shape,"TensorArray shape mismatch: "),(0,j.knu)(m,0)}concat(s){if(s&&s!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${s}`);if(this.size()===0)return(0,j.XeE)([],[0].concat(this.elementShape));const o=[];for(let $=0;$<this.size();$++)o.push($);const m=this.readMany(o);return vt(this.elementShape,m[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${m[0].shape})`),(0,j.zoF)(m,0)}scatter(s,o){if(o.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${o.dtype}`);if(s.length!==o.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${s.length} vs. ${o.shape[0]}`);const m=Math.max(...s);if(!this.dynamicSize&&m>=this.maxSize)throw new Error(`Max index must be < array size (${m}  vs. ${this.maxSize})`);this.writeMany(s,(0,j.HHK)(o,0))}split(s,o){if(o.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${o.dtype}`);let m=0;const $=s.map(ue=>(m+=ue,m));if(m!==o.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${m}, and tensor's shape is: ${o.shape}`);if(!this.dynamicSize&&s.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${s.length}), and the TensorArray is not marked as dynamically resizeable`);const O=m===0?0:o.size/m,L=[];(0,j.lub)(()=>{o=(0,j.XLQ)(o,[1,m,O]);for(let ue=0;ue<s.length;++ue){const Ke=[0,ue===0?0:$[ue-1],0],Ze=[1,s[ue],O];L[ue]=(0,j.XLQ)((0,j.tPi)(o,Ke,Ze),this.elementShape)}return L});const U=[];for(let ue=0;ue<s.length;ue++)U[ue]=ue;this.writeMany(U,L)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ft{get id(){return this.idTensor.id}constructor(s,o,m,$=-1){this.tensors=s,this.elementShape=o,this.elementDtype=m,s?.forEach(O=>{if(m!==O.dtype)throw new Error(`Invalid data types; op elements ${m}, but list elements ${O.dtype}`);vt(o,O.shape,"TensorList shape mismatch: "),(0,j.CnY)(O)}),this.idTensor=(0,j.iD$)(0),this.maxNumElements=$,(0,j.CnY)(this.idTensor)}copy(){return new Ft([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(s){this.tensors.forEach(o=>{(s==null||!s.has(o.id))&&o.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(s,o,m=-1){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(m!==-1&&this.tensors.length!==m)throw new Error(`Operation expected a list with ${m} elements but got a list with ${this.tensors.length} elements.`);vt(s,this.elementShape,"TensorList shape mismatch: ");const $=Gt(this.elementShape,this.tensors,s);return(0,j.lub)(()=>{const O=this.tensors.map(L=>(0,j.XLQ)(L,$));return(0,j.knu)(O,0)})}popBack(s,o){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const m=Gt(this.elementShape,this.tensors,s),$=this.tensors.pop();return $.kept=!1,vt($.shape,s,"TensorList shape mismatch: "),(0,j.XLQ)($,m)}pushBack(s){if(s.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s.dtype}, but list elements ${this.elementDtype}`);if(vt(s.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,j.CnY)(s),this.tensors.push(s)}resize(s){if(s<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${s}`);if(this.maxNumElements!==-1&&s>this.maxNumElements)throw new Error(`TensorListResize input size ${s} is greater maxNumElement ${this.maxNumElements}.`);const o=new Ft([],this.elementShape,this.elementDtype,this.maxNumElements);o.tensors.length=s;for(let m=0;m<Math.min(this.tensors.length,s);++m)o.tensors[m]=this.tensors[m];return o}getItem(s,o,m){if(m!==this.elementDtype)throw new Error(`Invalid data types; op elements ${m}, but list elements ${this.elementDtype}`);if(s<0||s>this.tensors.length)throw new Error(`Trying to access element ${s} in a list with ${this.tensors.length} elements.`);if(this.tensors[s]==null)throw new Error(`element at index ${s} is null.`);vt(this.tensors[s].shape,o,"TensorList shape mismatch: ");const $=Gt(this.elementShape,this.tensors,o);return(0,j.XLQ)(this.tensors[s],$)}setItem(s,o){if(o.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o.dtype}, but list elements ${this.elementDtype}`);if(s<0||this.maxNumElements!==-1&&s>=this.maxNumElements)throw new Error(`Trying to set element ${s} in a list with max ${this.maxNumElements} elements.`);vt(this.elementShape,o.shape,"TensorList shape mismatch: "),(0,j.CnY)(o),this.tensors[s]!=null&&(this.tensors[s].kept=!1),this.tensors[s]=o}gather(s,o,m){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);vt(this.elementShape,m,"TensorList shape mismatch: "),s=s.slice(0,this.size());const $=Gt(this.elementShape,this.tensors,m);return s.length===0?(0,j.XeE)([],[0].concat($)):(0,j.lub)(()=>{const O=s.map(L=>(0,j.XLQ)(this.tensors[L],$));return(0,j.knu)(O,0)})}concat(s,o){if(s&&s!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${s}`);vt(this.elementShape,o,"TensorList shape mismatch: ");const m=Gt(this.elementShape,this.tensors,o);return this.size()===0?(0,j.XeE)([],[0].concat(m)):(0,j.lub)(()=>{const $=this.tensors.map(O=>(0,j.XLQ)(O,m));return(0,j.zoF)($,0)})}}function en(i,s,o){const m=i.dtype;if(i.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${i.shape}`);if(i.dtype!==o)throw new Error(`Invalid data types; op elements ${i.dtype}, but list elements ${o}`);const $=i.shape.slice(1);vt($,s,"TensorList shape mismatch: ");const O=(0,j.HHK)(i);return new Ft(O,s,m)}function ds(i,s,o,m){return new Ft([],i,s,m)}function ir(i,s,o,m){if(s.length!==i.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${s.length} vs. ${i.shape[0]}`);const $=Math.max(...s);if(m!=null&&m!==-1&&$>=m)throw new Error(`Max index must be < array size (${$}  vs. ${m})`);const O=new Ft([],o,i.dtype,m),L=(0,j.HHK)(i,0);return s.forEach((U,ue)=>{O.setItem(U,L[ue])}),O}function Ln(i,s,o){let m=0;const $=s.map(Ke=>(m+=Ke,m));if(m!==i.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${m}, and tensor's shape is: ${i.shape}`);const O=i.shape.slice(1),L=xn(O,o),U=m===0?0:i.size/m,ue=(0,j.lub)(()=>{const Ke=[];i=(0,j.XLQ)(i,[1,m,U]);for(let Ze=0;Ze<s.length;++Ze){const ut=[0,Ze===0?0:$[Ze-1],0],_t=[1,s[Ze],U];Ke[Ze]=(0,j.XLQ)((0,j.tPi)(i,ut,_t),L)}return i.dispose(),Ke}),Me=new Ft([],o,i.dtype,s.length);for(let Ke=0;Ke<ue.length;Ke++)Me.setItem(Ke,ue[Ke]);return Me}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gn=async(i,s,o)=>{switch(i.op){case"If":case"StatelessIf":{const m=p("thenBranch",i,s,o),$=p("elseBranch",i,s,o),O=p("cond",i,s,o),L=p("args",i,s,o);return(await O.data())[0]?o.functionMap[m].executeFunctionAsync(L,o.tensorArrayMap,o.tensorListMap):o.functionMap[$].executeFunctionAsync(L,o.tensorArrayMap,o.tensorListMap)}case"While":case"StatelessWhile":{const m=p("body",i,s,o),$=p("cond",i,s,o),O=p("args",i,s,o),L=await o.functionMap[$].executeFunctionAsync(O,o.tensorArrayMap,o.tensorListMap),U=O.map(Ke=>Ke.id);let ue=await L[0].data();L.forEach(Ke=>{!Ke.kept&&U.indexOf(Ke.id)===-1&&Ke.dispose()});let Me=O;for(;ue[0];){const Ke=Me;Me=await o.functionMap[m].executeFunctionAsync(Me,o.tensorArrayMap,o.tensorListMap);const Ze=Me.map(ut=>ut.id);Ke.forEach(ut=>{!ut.kept&&U.indexOf(ut.id)===-1&&Ze.indexOf(ut.id)===-1&&ut.dispose()});const tt=await o.functionMap[$].executeFunctionAsync(Me,o.tensorArrayMap,o.tensorListMap);ue=await tt[0].data(),tt.forEach(ut=>{!ut.kept&&U.indexOf(ut.id)===-1&&Ze.indexOf(ut.id)===-1&&ut.dispose()})}return Me}case"LoopCond":{const m=p("pred",i,s,o);return[we(m)]}case"Switch":{const m=p("pred",i,s,o);let $=p("data",i,s,o);return $.kept||($=we($)),(await m.data())[0]?[void 0,$]:[$,void 0]}case"Merge":{const m=i.inputNames.find($=>Se($,s,o)!==void 0);if(m){const $=Se(m,s,o);return[we($)]}return}case"Enter":{const m=p("frameName",i,s,o),$=p("tensor",i,s,o);return o.enterFrame(m),[we($)]}case"Exit":{const m=p("tensor",i,s,o);return o.exitFrame(),[we(m)]}case"NextIteration":{const m=p("tensor",i,s,o);return o.nextIteration(),[we(m)]}case"TensorArrayV3":{const m=p("size",i,s,o),$=p("dtype",i,s,o),O=p("elementShape",i,s,o),L=p("dynamicSize",i,s,o),U=p("clearAfterRead",i,s,o),ue=p("identicalElementShapes",i,s,o),Me=p("name",i,s,o),Ke=new Tt(Me,$,m,O,ue,L,U);return o.addTensorArray(Ke),[Ke.idTensor,(0,j.iD$)(1)]}case"TensorArrayWriteV3":{const m=p("tensorArrayId",i,s,o),$=p("index",i,s,o),O=p("tensor",i,s,o),L=o.getTensorArray(m.id);return L.write($,O),[L.idTensor]}case"TensorArrayReadV3":{const m=p("tensorArrayId",i,s,o),$=p("index",i,s,o);return[o.getTensorArray(m.id).read($)]}case"TensorArrayGatherV3":{const m=p("tensorArrayId",i,s,o),$=p("indices",i,s,o),O=p("dtype",i,s,o);return[o.getTensorArray(m.id).gather($,O)]}case"TensorArrayScatterV3":{const m=p("tensorArrayId",i,s,o),$=p("indices",i,s,o),O=p("tensor",i,s,o),L=o.getTensorArray(m.id);return L.scatter($,O),[L.idTensor]}case"TensorArrayConcatV3":{const m=p("tensorArrayId",i,s,o),$=o.getTensorArray(m.id),O=p("dtype",i,s,o);return[$.concat(O)]}case"TensorArraySplitV3":{const m=p("tensorArrayId",i,s,o),$=p("tensor",i,s,o),O=p("lengths",i,s,o),L=o.getTensorArray(m.id);return L.split(O,$),[L.idTensor]}case"TensorArraySizeV3":{const m=p("tensorArrayId",i,s,o),$=o.getTensorArray(m.id);return[(0,j.iD$)($.size(),"int32")]}case"TensorArrayCloseV3":{const m=p("tensorArrayId",i,s,o),$=o.getTensorArray(m.id);return $.clearAndClose(),[$.idTensor]}case"TensorListSetItem":{const m=p("tensorListId",i,s,o),$=p("index",i,s,o),O=p("tensor",i,s,o),L=o.getTensorList(m.id);return L.setItem($,O),[L.idTensor]}case"TensorListGetItem":{const m=p("tensorListId",i,s,o),$=p("index",i,s,o),O=p("elementShape",i,s,o),L=p("elementDType",i,s,o);return[o.getTensorList(m.id).getItem($,O,L)]}case"TensorListScatterV2":case"TensorListScatter":{const m=p("indices",i,s,o),$=p("tensor",i,s,o),O=p("elementShape",i,s,o),L=p("numElements",i,s,o),U=ir($,m,O,L);return o.addTensorList(U),[U.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const m=p("elementShape",i,s,o),$=p("elementDType",i,s,o);let O;i.op==="TensorListReserve"?O="numElements":O="maxNumElements";const L=p(O,i,s,o),U=i.op==="TensorListReserve"?-1:L,ue=ds(m,$,L,U);return o.addTensorList(ue),[ue.idTensor]}case"TensorListGather":{const m=p("tensorListId",i,s,o),$=p("indices",i,s,o),O=p("elementShape",i,s,o),L=p("elementDType",i,s,o);return[o.getTensorList(m.id).gather($,L,O)]}case"TensorListStack":{const m=p("tensorListId",i,s,o),$=p("elementShape",i,s,o),O=p("elementDType",i,s,o),L=p("numElements",i,s,o);return[o.getTensorList(m.id).stack($,O,L)]}case"TensorListFromTensor":{const m=p("tensor",i,s,o),$=p("elementShape",i,s,o),O=p("elementDType",i,s,o),L=en(m,$,O);return o.addTensorList(L),[L.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const m=p("tensorListId",i,s,o),$=o.getTensorList(m.id),O=p("dtype",i,s,o),L=p("elementShape",i,s,o);return[$.concat(O,L)]}case"TensorListPushBack":{const m=p("tensorListId",i,s,o),$=p("tensor",i,s,o),O=o.getTensorList(m.id);return O.pushBack($),[O.idTensor]}case"TensorListPopBack":{const m=p("tensorListId",i,s,o),$=p("elementShape",i,s,o),O=p("elementDType",i,s,o);return[o.getTensorList(m.id).popBack($,O)]}case"TensorListSplit":{const m=p("tensor",i,s,o),$=p("elementShape",i,s,o),O=p("lengths",i,s,o),L=Ln(m,O,$);return o.addTensorList(L),[L.idTensor]}case"TensorListLength":{const m=p("tensorListId",i,s,o),$=o.getTensorList(m.id);return[(0,j.iD$)($.size(),"int32")]}case"TensorListResize":{const m=p("tensorListId",i,s,o),$=p("size",i,s,o),L=o.getTensorList(m.id).resize($);return o.addTensorList(L),[L.idTensor]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},ur="control";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vs(i,s,o){const[m,$]=p("fusedOps",i,s,o),O=m==="biasadd",L=!O,U=$==="prelu",ue=m==="fusedbatchnorm",Me=p("numArgs",i,s,o);if(O){if(U&&Me!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!U&&O&&Me!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(ue)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const Ke=p("strides",i,s,o),Ze=H(i,s,o),tt=p("dataFormat",i,s,o).toUpperCase(),ut=p("dilations",i,s,o);let[_t,wt]=p("args",i,s,o);L&&(wt=_t,_t=void 0);const ft=p("leakyreluAlpha",i,s,o);return{stride:Ke,pad:Ze,dataFormat:tt,dilations:ut,biasArg:_t,preluArg:wt,activationFunc:$,leakyreluAlpha:ft}}const Es=(i,s,o,m=He)=>{switch(i.op){case"Conv1D":{const $=p("stride",i,s,o),O=p("pad",i,s,o),L=p("dataFormat",i,s,o).toUpperCase(),U=p("dilation",i,s,o);return[m.conv1d(p("x",i,s,o),p("filter",i,s,o),$,O,L,U)]}case"Conv2D":{const $=p("strides",i,s,o),O=H(i,s,o),L=p("dataFormat",i,s,o).toUpperCase(),U=p("dilations",i,s,o);return[m.conv2d(p("x",i,s,o),p("filter",i,s,o),[$[1],$[2]],O,L,[U[1],U[2]])]}case"_FusedConv2D":{const{stride:$,pad:O,dataFormat:L,dilations:U,biasArg:ue,preluArg:Me,activationFunc:Ke,leakyreluAlpha:Ze}=vs(i,s,o);return[m.fused.conv2d({x:p("x",i,s,o),filter:p("filter",i,s,o),strides:[$[1],$[2]],pad:O,dataFormat:L,dilations:[U[1],U[2]],bias:ue,activation:Ke,preluActivationWeights:Me,leakyreluAlpha:Ze})]}case"FusedDepthwiseConv2dNative":{const{stride:$,pad:O,dataFormat:L,dilations:U,biasArg:ue,preluArg:Me,activationFunc:Ke,leakyreluAlpha:Ze}=vs(i,s,o);return[m.fused.depthwiseConv2d({x:p("x",i,s,o),filter:p("filter",i,s,o),strides:[$[1],$[2]],pad:O,dataFormat:L,dilations:[U[1],U[2]],bias:ue,activation:Ke,preluActivationWeights:Me,leakyreluAlpha:Ze})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const $=p("outputShape",i,s,o),O=p("strides",i,s,o),L=H(i,s,o);return[m.conv2dTranspose(p("x",i,s,o),p("filter",i,s,o),$,[O[1],O[2]],L)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const $=p("strides",i,s,o),O=H(i,s,o),L=p("dilations",i,s,o),U=p("dataFormat",i,s,o).toUpperCase();return[m.depthwiseConv2d(p("input",i,s,o),p("filter",i,s,o),[$[1],$[2]],O,U,[L[1],L[2]])]}case"Conv3D":{const $=p("strides",i,s,o),O=p("pad",i,s,o),L=p("dataFormat",i,s,o).toUpperCase(),U=p("dilations",i,s,o);return[m.conv3d(p("x",i,s,o),p("filter",i,s,o),[$[1],$[2],$[3]],O,L,[U[1],U[2],U[3]])]}case"AvgPool":{const $=p("strides",i,s,o),O=p("pad",i,s,o),L=p("kernelSize",i,s,o);return[m.avgPool(p("x",i,s,o),[L[1],L[2]],[$[1],$[2]],O)]}case"MaxPool":{const $=p("strides",i,s,o),O=p("pad",i,s,o),L=p("kernelSize",i,s,o);return[m.maxPool(p("x",i,s,o),[L[1],L[2]],[$[1],$[2]],O)]}case"MaxPoolWithArgmax":{const $=p("strides",i,s,o),O=p("pad",i,s,o),L=p("kernelSize",i,s,o),U=p("includeBatchInIndex",i,s,o),{result:ue,indexes:Me}=m.maxPoolWithArgmax(p("x",i,s,o),[L[1],L[2]],[$[1],$[2]],O,U);return[ue,Me]}case"AvgPool3D":{const $=p("strides",i,s,o),O=p("pad",i,s,o),L=p("kernelSize",i,s,o);return[m.avgPool3d(p("x",i,s,o),[L[1],L[2],L[3]],[$[1],$[2],$[3]],O)]}case"MaxPool3D":{const $=p("strides",i,s,o),O=p("pad",i,s,o),L=p("kernelSize",i,s,o);return[m.maxPool3d(p("x",i,s,o),[L[1],L[2],L[3]],[$[1],$[2],$[3]],O)]}case"Dilation2D":{const $=p("strides",i,s,o),O=p("pad",i,s,o),L=p("dilations",i,s,o),U=$[1],ue=$[2],Me=L[1],Ke=L[2];return[m.dilation2d(p("x",i,s,o),p("filter",i,s,o),[U,ue],O,[Me,Ke],"NHWC")]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},Bs="convolution";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ls=(i,s,o,m=He)=>{switch(i.op){case"Fill":{const $=p("shape",i,s,o),O=p("dtype",i,s,o),L=p("value",i,s,o);return[m.fill($,L,O)]}case"LinSpace":{const $=p("start",i,s,o),O=p("stop",i,s,o),L=p("num",i,s,o);return[m.linspace($,O,L)]}case"Multinomial":{const $=p("logits",i,s,o),O=p("numSamples",i,s,o),L=p("seed",i,s,o);return[m.multinomial($,O,L)]}case"OneHot":{const $=p("indices",i,s,o),O=p("depth",i,s,o),L=p("onValue",i,s,o),U=p("offValue",i,s,o),ue=p("dtype",i,s,o);return[m.oneHot($,O,L,U,ue)]}case"Ones":return[m.ones(p("shape",i,s,o),p("dtype",i,s,o))];case"OnesLike":return[m.onesLike(p("x",i,s,o))];case"RandomStandardNormal":return[m.randomStandardNormal(p("shape",i,s,o),p("dtype",i,s,o),p("seed",i,s,o))];case"RandomUniform":return[m.randomUniform(p("shape",i,s,o),p("minval",i,s,o),p("maxval",i,s,o),p("dtype",i,s,o))];case"RandomUniformInt":return[m.randomUniformInt(p("shape",i,s,o),p("minval",i,s,o),p("maxval",i,s,o),p("seed",i,s,o))];case"Range":{const $=p("start",i,s,o),O=p("stop",i,s,o),L=p("step",i,s,o);return[m.range($,O,L,p("dtype",i,s,o))]}case"TruncatedNormal":{const $=p("shape",i,s,o),O=p("mean",i,s,o),L=p("stdDev",i,s,o),U=p("seed",i,s,o);return[m.truncatedNormal($,O,L,p("dtype",i,s,o),U)]}case"Zeros":return[m.zeros(p("shape",i,s,o),p("dtype",i,s,o))];case"ZerosLike":return[m.zerosLike(p("x",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},lr="creation";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(i,s,o){const m=p("boxes",i,s,o),$=p("scores",i,s,o),O=p("maxOutputSize",i,s,o),L=p("iouThreshold",i,s,o),U=p("scoreThreshold",i,s,o),ue=p("softNmsSigma",i,s,o);return{boxes:m,scores:$,maxOutputSize:O,iouThreshold:L,scoreThreshold:U,softNmsSigma:ue}}const Us=async(i,s,o,m,$=He)=>{switch(i.op){case"NonMaxSuppressionV5":{const{boxes:O,scores:L,maxOutputSize:U,iouThreshold:ue,scoreThreshold:Me,softNmsSigma:Ke}=Zn(i,s,o),Ze=await $.image.nonMaxSuppressionWithScoreAsync(O,L,U,ue,Me,Ke);return[Ze.selectedIndices,Ze.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:O,scores:L,maxOutputSize:U,iouThreshold:ue,scoreThreshold:Me}=Zn(i,s,o),Ke=p("padToMaxOutputSize",i,s,o),Ze=await $.image.nonMaxSuppressionPaddedAsync(O,L,U,ue,Me,Ke);return[Ze.selectedIndices,Ze.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:O,scores:L,maxOutputSize:U,iouThreshold:ue,scoreThreshold:Me}=Zn(i,s,o);return[await $.image.nonMaxSuppressionAsync(O,L,U,ue,Me)]}case"Where":{const O=$.cast(p("condition",i,s,o),"bool"),L=[await $.whereAsync(O)];return O.dispose(),L}case"ListDiff":return $.setdiff1dAsync(p("x",i,s,o),p("y",i,s,o));default:throw TypeError(`Node type ${i.op} is not implemented`)}},gn="dynamic";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn=(i,s,o,m=He)=>{switch(i.op){case"LowerBound":{const $=p("sortedSequence",i,s,o),O=p("values",i,s,o);return[m.lowerBound($,O)]}case"TopKV2":{const $=p("x",i,s,o),O=p("k",i,s,o),L=p("sorted",i,s,o),U=m.topk($,O,L);return[U.values,U.indices]}case"UpperBound":{const $=p("sortedSequence",i,s,o),O=p("values",i,s,o);return[m.upperBound($,O)]}case"Unique":{const $=p("x",i,s,o),O=m.unique($);return[O.values,O.indices]}case"UniqueV2":{const $=p("x",i,s,o),O=p("axis",i,s,o),L=m.unique($,O);return[L.values,L.indices]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},Vs="evaluation";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ps=(i,s,o,m=He)=>{switch(i.op){case"Const":return s[i.name];case"PlaceholderWithDefault":const $=p("default",i,s,o);return[Se(i.name,s,o)||$];case"Placeholder":return[Se(i.name,s,o)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const Ke=p("x",i,s,o);return[we(Ke)]}case"IdentityN":return p("x",i,s,o).map(Ke=>we(Ke));case"Snapshot":const O=p("x",i,s,o);return[we(O)];case"Shape":return[m.tensor1d(p("x",i,s,o).shape,"int32")];case"ShapeN":return p("x",i,s,o).map(Ke=>m.tensor1d(Ke.shape));case"Size":return[m.scalar(p("x",i,s,o).size,"int32")];case"Rank":return[m.scalar(p("x",i,s,o).rank,"int32")];case"NoOp":return[m.scalar(1)];case"Print":const L=p("x",i,s,o),U=p("data",i,s,o),ue=p("message",i,s,o),Me=p("summarize",i,s,o);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(ue);for(let Ke=0;Ke<U.length;Ke++)console.log(Array.prototype.slice.call(U[Ke].dataSync()).slice(0,Me));return[L];default:throw TypeError(`Node type ${i.op} is not implemented`)}},cr="graph";var Ws=S(528);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ws{get id(){return this.handle.id}constructor(s,o){this.keyDType=s,this.valueDType=o,this.handle=(0,j.iD$)(0),this.tensorMap=new Map,(0,j.CnY)(this.handle)}clearAndClose(){this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ws.i(this.size(),"int32")}async import(s,o){this.checkKeyAndValueTensor(s,o);const m=await s.data();return this.tensorMap.forEach($=>$.dispose()),this.tensorMap.clear(),(0,j.lub)(()=>{const $=(0,j.HHK)(o),O=m.length,L=$.length;j.D5U.assert(O===L,()=>`The number of elements doesn't match, keys has ${O} elements, the values has ${L} elements.`);for(let U=0;U<O;U++){const ue=m[U],Me=$[U];(0,j.CnY)(Me),this.tensorMap.set(ue,Me)}return this.handle})}async find(s,o){this.checkKeyAndValueTensor(s,o);const m=await s.data();return(0,j.lub)(()=>{const $=[];for(let O=0;O<m.length;O++){const L=m[O],U=this.findWithDefault(L,o);$.push(U)}return(0,j.knu)($)})}findWithDefault(s,o){const m=this.tensorMap.get(s);return m??o}checkKeyAndValueTensor(s,o){if(s.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${s.dtype}`);if(o.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${o.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dr=async(i,s,o,m)=>{switch(i.op){case"HashTable":case"HashTableV2":{const $=m.getHashTableHandleByName(i.name);if($!=null)return[$];{const O=p("keyDType",i,s,o),L=p("valueDType",i,s,o),U=new ws(O,L);return m.addHashTable(i.name,U),[U.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const $=p("tableHandle",i,s,o,m),O=p("keys",i,s,o),L=p("values",i,s,o);return[await m.getHashTableById($.id).import(O,L)]}case"LookupTableFind":case"LookupTableFindV2":{const $=p("tableHandle",i,s,o,m),O=p("keys",i,s,o),L=p("defaultValue",i,s,o);return[await m.getHashTableById($.id).find(O,L)]}case"LookupTableSize":case"LookupTableSizeV2":{const $=p("tableHandle",i,s,o,m);return[m.getHashTableById($.id).tensorSize()]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},Br="hash_table";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ms=(i,s,o,m=He)=>{switch(i.op){case"ResizeBilinear":{const $=p("images",i,s,o),O=p("size",i,s,o),L=p("alignCorners",i,s,o),U=p("halfPixelCenters",i,s,o);return[m.image.resizeBilinear($,[O[0],O[1]],L,U)]}case"ResizeNearestNeighbor":{const $=p("images",i,s,o),O=p("size",i,s,o),L=p("alignCorners",i,s,o),U=p("halfPixelCenters",i,s,o);return[m.image.resizeNearestNeighbor($,[O[0],O[1]],L,U)]}case"CropAndResize":{const $=p("image",i,s,o),O=p("boxes",i,s,o),L=p("boxInd",i,s,o),U=p("cropSize",i,s,o),ue=p("method",i,s,o),Me=p("extrapolationValue",i,s,o);return[m.image.cropAndResize($,O,L,U,ue,Me)]}case"ImageProjectiveTransformV3":{const $=p("images",i,s,o),O=p("transforms",i,s,o),L=p("outputShape",i,s,o),U=p("fillValue",i,s,o),ue=p("interpolation",i,s,o),Me=p("fillMode",i,s,o);return[m.image.transform($,O,ue.toLowerCase(),Me.toLowerCase(),U,L)]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},pr="image";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=(i,s,o,m=He)=>{switch(i.op){case"Equal":return[m.equal(p("a",i,s,o),p("b",i,s,o))];case"NotEqual":return[m.notEqual(p("a",i,s,o),p("b",i,s,o))];case"Greater":return[m.greater(p("a",i,s,o),p("b",i,s,o))];case"GreaterEqual":return[m.greaterEqual(p("a",i,s,o),p("b",i,s,o))];case"Less":return[m.less(p("a",i,s,o),p("b",i,s,o))];case"LessEqual":return[m.lessEqual(p("a",i,s,o),p("b",i,s,o))];case"LogicalAnd":return[m.logicalAnd(p("a",i,s,o),p("b",i,s,o))];case"LogicalNot":return[m.logicalNot(p("a",i,s,o))];case"LogicalOr":return[m.logicalOr(p("a",i,s,o),p("b",i,s,o))];case"Select":case"SelectV2":return[m.where(p("condition",i,s,o),p("a",i,s,o),p("b",i,s,o))];case"BitwiseAnd":return[m.bitwiseAnd(p("a",i,s,o),p("b",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},Lr="logical";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cs=(i,s,o,m=He)=>{switch(i.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[m.matMul(p("a",i,s,o),p("b",i,s,o),p("transposeA",i,s,o),p("transposeB",i,s,o))];case"Einsum":return[m.einsum(p("equation",i,s,o),...p("tensors",i,s,o))];case"Transpose":return[m.transpose(p("x",i,s,o),p("perm",i,s,o))];case"_FusedMatMul":const[$,O]=p("fusedOps",i,s,o),L=$==="biasadd",U=O==="prelu",ue=p("numArgs",i,s,o),Me=p("leakyreluAlpha",i,s,o);if(L){if(U&&ue!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!U&&ue!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[Ke,Ze]=p("args",i,s,o);return[m.fused.matMul({a:p("a",i,s,o),b:p("b",i,s,o),transposeA:p("transposeA",i,s,o),transposeB:p("transposeB",i,s,o),bias:Ke,activation:O,preluActivationWeights:Ze,leakyreluAlpha:Me})];case"MatrixBandPart":return[m.linalg.bandPart(p("a",i,s,o),p("numLower",i,s,o),p("numUpper",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},Kn="matrices";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr=(i,s,o,m=He)=>{switch(i.op){case"EuclideanNorm":return[m.euclideanNorm(p("x",i,s,o),p("axis",i,s,o),p("keepDims",i,s,o))];case"FusedBatchNorm":case"FusedBatchNormV2":return[m.batchNorm(p("x",i,s,o),p("mean",i,s,o),p("variance",i,s,o),p("offset",i,s,o),p("scale",i,s,o),p("epsilon",i,s,o))];case"FusedBatchNormV3":return[m.batchNorm(p("x",i,s,o),p("mean",i,s,o),p("variance",i,s,o),p("offset",i,s,o),p("scale",i,s,o),p("epsilon",i,s,o))];case"LRN":return[m.localResponseNormalization(p("x",i,s,o),p("radius",i,s,o),p("bias",i,s,o),p("alpha",i,s,o),p("beta",i,s,o))];case"Softmax":return[m.softmax(p("x",i,s,o))];case"LogSoftmax":return[m.logSoftmax(p("x",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},mr="normalization";/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hs=(i,s,o,m=He)=>{switch(i.op){case"RaggedGather":{const{outputNestedSplits:$,outputDenseValues:O}=m.raggedGather(p("paramsNestedSplits",i,s,o),p("paramsDenseValues",i,s,o),p("indices",i,s,o),p("outputRaggedRank",i,s,o));return $.concat(O)}case"RaggedRange":{const{rtNestedSplits:$,rtDenseValues:O}=m.raggedRange(p("starts",i,s,o),p("limits",i,s,o),p("splits",i,s,o));return[$,O]}case"RaggedTensorToTensor":return[m.raggedTensorToTensor(p("shape",i,s,o),p("values",i,s,o),p("defaultValue",i,s,o),p("rowPartitionTensors",i,s,o),p("rowPartitionTypes",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},gr="ragged";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs=(i,s,o,m=He)=>{switch(i.op){case"Max":{const U=p("axis",i,s,o),ue=p("keepDims",i,s,o);return[m.max(p("x",i,s,o),U,ue)]}case"Mean":{const U=p("axis",i,s,o),ue=p("keepDims",i,s,o);return[m.mean(p("x",i,s,o),U,ue)]}case"Min":{const U=p("axis",i,s,o),ue=p("keepDims",i,s,o);return[m.min(p("x",i,s,o),U,ue)]}case"Sum":{const U=p("axis",i,s,o),ue=p("keepDims",i,s,o);return[m.sum(p("x",i,s,o),U,ue)]}case"All":{const U=p("axis",i,s,o),ue=p("keepDims",i,s,o);return[m.all(p("x",i,s,o),U,ue)]}case"Any":{const U=p("axis",i,s,o),ue=p("keepDims",i,s,o);return[m.any(p("x",i,s,o),U,ue)]}case"ArgMax":{const U=p("axis",i,s,o);return[m.argMax(p("x",i,s,o),U)]}case"ArgMin":{const U=p("axis",i,s,o);return[m.argMin(p("x",i,s,o),U)]}case"Prod":{const U=p("axis",i,s,o),ue=p("keepDims",i,s,o);return[m.prod(p("x",i,s,o),U,ue)]}case"Cumprod":{const U=p("axis",i,s,o),ue=p("exclusive",i,s,o),Me=p("reverse",i,s,o);return[m.cumprod(p("x",i,s,o),U,ue,Me)]}case"Cumsum":{const U=p("axis",i,s,o),ue=p("exclusive",i,s,o),Me=p("reverse",i,s,o);return[m.cumsum(p("x",i,s,o),U,ue,Me)]}case"Bincount":const $=p("x",i,s,o),O=p("weights",i,s,o),L=p("size",i,s,o);return[m.bincount($,O,L)];case"DenseBincount":{const U=p("x",i,s,o),ue=p("weights",i,s,o),Me=p("size",i,s,o),Ke=p("binaryOutput",i,s,o);return[m.denseBincount(U,ue,Me,Ke)]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},Ur="reduction";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yr=(i,s,o,m=He)=>{switch(i.op){case"ConcatV2":case"Concat":{const $=p("n",i,s,o),O=p("axis",i,s,o);let L=p("tensors",i,s,o);return L=L.slice(0,$),[m.concat(L,O)]}case"Gather":{const $=p("x",i,s,o),O=p("indices",i,s,o);return[m.gather($,m.cast(O,"int32"),0)]}case"GatherV2":{const $=p("axis",i,s,o),O=p("batchDims",i,s,o),L=p("x",i,s,o),U=p("indices",i,s,o);return[m.gather(L,m.cast(U,"int32"),$,O)]}case"Reverse":{const $=p("dims",i,s,o),O=[];for(let U=0;U<$.length;U++)$[U]&&O.push(U);const L=p("x",i,s,o);return[m.reverse(L,O)]}case"ReverseV2":{const $=p("axis",i,s,o),O=p("x",i,s,o);return[m.reverse(O,$)]}case"Slice":{const $=p("begin",i,s,o),O=p("size",i,s,o);return[m.slice(p("x",i,s,o),$,O)]}case"StridedSlice":{const $=p("begin",i,s,o),O=p("end",i,s,o),L=p("strides",i,s,o),U=p("beginMask",i,s,o),ue=p("endMask",i,s,o),Me=p("ellipsisMask",i,s,o),Ke=p("newAxisMask",i,s,o),Ze=p("shrinkAxisMask",i,s,o),tt=p("x",i,s,o);return[m.stridedSlice(tt,$,O,L,U,ue,Me,Ke,Ze)]}case"Pack":return(0,j.lub)(()=>{const $=p("axis",i,s,o),O=p("tensors",i,s,o),L=O[0].shape,U=m.squeeze(O[0]).shape,ue=O.map(Me=>{const Ke=j.D5U.arraysEqual(Me.shape,L);if(!Ke&&!j.D5U.arraysEqual(m.squeeze(Me).shape,U))throw new Error("the input tensors shape does not match");return Ke?Me:m.reshape(Me,L)});return[m.stack(ue,$)]});case"Unpack":{const $=p("axis",i,s,o),O=p("tensor",i,s,o);return m.unstack(O,$)}case"Tile":{const $=p("reps",i,s,o);return[m.tile(p("x",i,s,o),$)]}case"Split":case"SplitV":{const $=p("axis",i,s,o),O=p("numOrSizeSplits",i,s,o),L=p("x",i,s,o);return m.split(L,O,$)}case"ScatterNd":{const $=p("indices",i,s,o),O=p("values",i,s,o),L=p("shape",i,s,o);return[m.scatterND($,O,L)]}case"GatherNd":{const $=p("x",i,s,o),O=p("indices",i,s,o);return[m.gatherND($,O)]}case"SparseToDense":{const $=p("sparseIndices",i,s,o),O=p("outputShape",i,s,o),L=p("sparseValues",i,s,o),U=p("defaultValue",i,s,o);return[m.sparseToDense($,L,O,L.dtype===U.dtype?U:m.cast(U,L.dtype))]}case"TensorScatterUpdate":{const $=p("indices",i,s,o),O=p("values",i,s,o),L=p("tensor",i,s,o);return[m.tensorScatterUpdate(L,$,O)]}default:throw TypeError(`Node type ${i.op} is not implemented`)}},tn="slice_join";/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qt=(i,s,o,m=He)=>{switch(i.op){case"SparseFillEmptyRows":{const{outputIndices:$,outputValues:O,emptyRowIndicator:L,reverseIndexMap:U}=m.sparse.sparseFillEmptyRows(p("indices",i,s,o),p("values",i,s,o),p("denseShape",i,s,o),p("defaultValue",i,s,o));return[$,O,L,U]}case"SparseReshape":{const{outputIndices:$,outputShape:O}=m.sparse.sparseReshape(p("inputIndices",i,s,o),p("inputShape",i,s,o),p("newShape",i,s,o));return[$,O]}case"SparseSegmentMean":return[m.sparse.sparseSegmentMean(p("data",i,s,o),p("indices",i,s,o),p("segmentIds",i,s,o))];case"SparseSegmentSum":return[m.sparse.sparseSegmentSum(p("data",i,s,o),p("indices",i,s,o),p("segmentIds",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},Vr="sparse";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fs=(i,s,o,m=He)=>{switch(i.op){case"FFT":return[m.fft(p("x",i,s,o))];case"IFFT":return[m.ifft(p("x",i,s,o))];case"RFFT":return[m.rfft(p("x",i,s,o))];case"IRFFT":return[m.irfft(p("x",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},Wr="spectral";/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn=(i,s,o,m=He)=>{switch(i.op){case"StaticRegexReplace":return[m.string.staticRegexReplace(p("input",i,s,o),p("pattern",i,s,o),p("rewrite",i,s,o),p("replaceGlobal",i,s,o))];case"StringNGrams":{const{nGrams:$,nGramsSplits:O}=m.string.stringNGrams(p("data",i,s,o),p("dataSplits",i,s,o),p("separator",i,s,o),p("nGramWidths",i,s,o),p("leftPad",i,s,o),p("rightPad",i,s,o),p("padWidth",i,s,o),p("preserveShortSequences",i,s,o));return[$,O]}case"StringSplit":{const{indices:$,values:O,shape:L}=m.string.stringSplit(p("input",i,s,o),p("delimiter",i,s,o),p("skipEmpty",i,s,o));return[$,O,L]}case"StringToHashBucketFast":return[m.string.stringToHashBucketFast(p("input",i,s,o),p("numBuckets",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},Ts="string";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gs=(i,s,o,m=He)=>{switch(i.op){case"Cast":return[m.cast(p("x",i,s,o),p("dtype",i,s,o))];case"ExpandDims":{const $=p("axis",i,s,o);return[m.expandDims(p("x",i,s,o),$)]}case"Squeeze":{const $=p("axis",i,s,o);return[m.squeeze(p("x",i,s,o),$)]}case"Reshape":return[m.reshape(p("x",i,s,o),p("shape",i,s,o))];case"EnsureShape":return[m.ensureShape(p("x",i,s,o),p("shape",i,s,o))];case"MirrorPad":return[m.mirrorPad(p("x",i,s,o),p("padding",i,s,o),p("mode",i,s,o))];case"PadV2":case"Pad":return[m.pad(p("x",i,s,o),p("padding",i,s,o),p("constantValue",i,s,o))];case"SpaceToBatchND":{const $=p("blockShape",i,s,o),O=p("paddings",i,s,o);return[m.spaceToBatchND(p("x",i,s,o),$,O)]}case"BatchToSpaceND":{const $=p("blockShape",i,s,o),O=p("crops",i,s,o);return[m.batchToSpaceND(p("x",i,s,o),$,O)]}case"DepthToSpace":{const $=p("blockSize",i,s,o),O=p("dataFormat",i,s,o).toUpperCase();return[m.depthToSpace(p("x",i,s,o),$,O)]}case"BroadcastTo":return[m.broadcastTo(p("x",i,s,o),p("shape",i,s,o))];case"BroadcastArgs":return[m.broadcastArgs(p("s0",i,s,o),p("s1",i,s,o))];default:throw TypeError(`Node type ${i.op} is not implemented`)}},Lt="transformation";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(i,s,o,m,$=j.lub){const O=((L,U,ue)=>{switch(L.category){case"arithmetic":return $(()=>Te(L,U,ue));case"basic_math":return $(()=>ct(L,U,ue));case"control":return Gn(L,U,ue);case"convolution":return $(()=>Es(L,U,ue));case"creation":return $(()=>Ls(L,U,ue));case"dynamic":return Us(L,U,ue);case"evaluation":return $(()=>Jn(L,U,ue));case"image":return $(()=>Ms(L,U,ue));case"graph":return $(()=>ps(L,U,ue));case"logical":return $(()=>hr(L,U,ue));case"matrices":return $(()=>Cs(L,U,ue));case"normalization":return $(()=>fr(L,U,ue));case"ragged":return $(()=>hs(L,U,ue));case"reduction":return $(()=>zs(L,U,ue));case"slice_join":return $(()=>yr(L,U,ue));case"sparse":return $(()=>qt(L,U,ue));case"spectral":return $(()=>fs(L,U,ue));case"string":return $(()=>dn(L,U,ue));case"transformation":return $(()=>Gs(L,U,ue));case"hash_table":return dr(L,U,ue,m);case"custom":const Me=Z(L.op);if(Me&&Me.customExecutor)return Me.customExecutor(new ze(L,U,ue));throw TypeError(`Custom op ${L.op} is not registered.`);default:throw TypeError(`Unknown op '${L.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(i,s,o);return j.D5U.isPromise(O)?O.then(L=>[].concat(L)):[].concat(O)}class In{constructor(s={},o={},m={},$={},O){this.weightMap=s,this.tensorArrayMap=o,this.tensorListMap=m,this.functionMap=$,this.parseNodeNameCache=O,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(s,o){return{id:s,frameName:o,iterationId:0}}set currentContext(s){this.contexts!==s&&(this.contexts=s,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const s=[];for(let o=0;o<this.contexts.length-1;o++){const m=this.contexts.slice(0,this.contexts.length-o);s.push(this.contextIdforContexts(m))}s.push(""),this._currentContextIds=s}contextIdforContexts(s){return s?s.map(o=>o.id===0&&o.iterationId===0?"":`${o.frameName}-${o.iterationId}`).join("/"):""}enterFrame(s){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,s)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const s=Object.assign({},this.contexts[this.contexts.length-1]);s.iterationId+=1,s.id=this.lastId,this.contexts.splice(-1,1,s),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(s){return this.weightMap[s]}addTensorArray(s){this.tensorArrayMap[s.id]=s}getTensorArray(s){return this.tensorArrayMap[s]}addTensorList(s){this.tensorListMap[s.id]=s}getTensorList(s){return this.tensorListMap[s]}dispose(s){for(const o in this.tensorArrayMap)this.tensorArrayMap[o].clearAndClose(s);for(const o in this.tensorListMap)this.tensorListMap[o].clearAndClose(s)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(i,s,o,m){const $=new Set,O=[];let L=null,U=null;const ue=new Set,Me=new Set(Object.keys(i).map(tt=>k(tt)[0]));m=m||[];const Ke=new Set(m.map(tt=>k(tt.name)[0])),Ze=[...s];for(;Ze.length>0;){const tt=Ze.pop();if((pn(tt)||js(tt)||de(tt))&&L==null&&(L=tt,U=L.children.map(ut=>ut.name).filter(ut=>$.has(ut))),$.add(tt.name),o[tt.name]==null&&!Me.has(tt.name)&&!Ke.has(tt.name)){if(tt.inputs.length===0){O.push(tt.name);continue}tt.inputs.forEach(ut=>{ue.has(ut.name)||(ue.add(ut.name),Ze.push(ut))})}}return{inputs:i,outputs:s,usedNodes:$,missingInputs:O,dynamicNode:L,syncInputs:U}}function Dn(i,s){const{usedNodes:o,inputs:m}=s,$=Object.keys(m).map(ft=>k(ft)[0]).map(ft=>i.nodes[ft]),O=i.initNodes||[],L=ft=>o.has(typeof ft=="string"?ft:ft.name);function U(ft){return[...new Map(ft.map(St=>[St.name,St])).values()]}const ue=U([...$,...i.weights,...O]).filter(L),Me=U([...ue,...Object.values(i.nodes)]).filter(L),Ke=new Map(Me.map(ft=>[ft.name,ft])),Ze={};for(const ft of Me){Ze[ft.name]=Ze[ft.name]||0;for(const St of ft.children)L(St)||(Ze[St.name]=Number.POSITIVE_INFINITY),Ze[St.name]=(Ze[St.name]||0)+1}const tt=Object.entries(Ze).filter(([,ft])=>ft===0).map(([ft])=>ft),ut=[...tt];for(;tt.length>0;){const ft=tt.pop(),St=Ke.get(ft);for(const Kt of St.children.filter(L))--Ze[Kt.name]===0&&(ut.push(Kt.name),tt.push(Kt.name))}const _t=ut.map(ft=>Ke.get(ft)),wt=Ss(_t,ue);return xr(wt,ue),wt}function Ss(i,s){const o=new Map(i.map(L=>[L.name,L])),m=s.map(L=>L.name),$=new Set(m);for(;m.length>0;){const L=m.pop(),U=o.get(L);for(const ue of U.children)!o.has(ue.name)||$.has(ue.name)||($.add(ue.name),m.push(ue.name))}return i.filter(L=>$.has(L.name))}class ts extends Error{constructor(s){super(`NodesExecutionOrderError: ${s}`)}}function xr(i,s){const o=new Map(i.map((U,ue)=>[U.name,ue])),m=new Set(s.map(U=>U.name)),$=U=>m.has(typeof U=="string"?U:U.name),O=new Set(i.map(U=>U.name)),L=U=>O.has(typeof U=="string"?U:U.name);for(const U of i){for(const ue of U.children.filter(L)){if(!o.has(ue.name))throw new ts(`Child ${ue.name} of node ${U.name} is unreachable.`);if(o.get(U.name)>o.get(ue.name))throw new ts(`Node ${U.name} is scheduled to run after its child ${ue.name}.`)}if(!$(U))for(const ue of U.inputs){if(!o.has(ue.name))throw new ts(`Input ${ue.name} of node ${U.name} is unreachable.`);if(o.get(ue.name)>o.get(U.name))throw new ts(`Node ${U.name} is scheduled to run before its input ${ue.name}.`)}}}function Ks(i){const s=new Map(i.map((U,ue)=>[U.name,ue])),o=Number.MAX_SAFE_INTEGER,m=i.map((U,ue)=>pn(U)?o:ue),$=U=>{const ue=m[s.get(U.name)];return ue??-1},O=i.map((U,ue)=>U.children.map($).reduce((Me,Ke)=>Math.max(Me,Ke),m[ue])),L=new Map;for(let U=0;U<i.length;++U){const ue=O[U];if(ue===o)continue;const Me=i[U],Ke=i[ue];L.has(Ke.name)||L.set(Ke.name,[]),L.get(Ke.name).push(Me)}return L}const Vt=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Hn=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Hs=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function pn(i){return Vt.has(i.op)}function js(i){return Hn.has(i.op)}function de(i){return Hs.has(i.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ae{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(s){const o=Object.keys(s).map(m=>s[m].map($=>$.id));this._weightIds=[].concat(...o),this._weightMap=s}set resourceManager(s){this._resourceManager=s}get inputs(){return this._inputs.map(s=>({name:s.name,shape:s.attrParams.shape?s.attrParams.shape.value:void 0,dtype:s.attrParams.dtype?s.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(s=>({name:s.name,shape:s.attrParams.shape?s.attrParams.shape.value:void 0,dtype:s.attrParams.dtype?s.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(s=>s.signatureKey||s.name)}get outputNodes(){return this._outputs.map(s=>{const o=s.signatureKey||s.name;return s.defaultOutput?`${o}:${s.defaultOutput}`:o})}get functions(){return Object.keys(this._functions).reduce((s,o)=>(s[o]=this._functions[o].signature,s),{})}constructor(s,o){this.graph=s,this.parent=o,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=s.outputs,this._inputs=s.inputs,this._initNodes=s.initNodes,this._signature=s.signature,this._functions=s.functions,s.functions!=null&&Object.keys(s.functions).forEach(m=>{this._functionExecutorMap[m]=new ae(s.functions[m],this)})}getCompilationKey(s,o){const m=s.map(O=>O.name).sort(),$=o.map(O=>O.name).sort();return m.join(this.SEPARATOR)+"--"+$.join(this.SEPARATOR)}compile(s,o){const m=_n(s,o,this.weightMap,this._initNodes),{missingInputs:$,dynamicNode:O,syncInputs:L}=m;if(O!=null)throw new Error(`This execution contains the node '${O.name}', which has the dynamic op '${O.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${L}]`);if($.length>0){const Me=o.map(Ze=>Ze.name),Ke=Object.keys(s);throw new Error(`Cannot compute the outputs [${Me}] from the provided inputs [${Ke}]. Missing the following inputs: [${$}]`)}const U=Dn(this.graph,m),ue=Ks(U);return{orderedNodes:U,nodeLiveUntilMap:ue}}cloneAndKeepTensor(s){if(s==null)return null;const o=s.clone();return(0,j.CnY)(o),o}cloneTensorList(s){return s?s.map(m=>this.cloneAndKeepTensor(m)):null}cloneTensorMap(s){return Object.fromEntries(Object.entries(s).map(([o,m])=>[o,this.cloneTensorList(m)]))}execute(s,o){this.disposeIntermediateTensors(),s=this.mapInputs(s);const m=Object.keys(s).sort();this.checkInputs(s),this.checkInputShapeAndType(s),o=this.mapOutputs(o),this.checkOutputs(o);const $=m.map(tt=>this.graph.nodes[k(tt)[0]]),O=o.map(tt=>k(tt)[0]),L=new Set(O);let U=O.map(tt=>this.graph.nodes[tt]);U.length===0&&(U=this._outputs);const ue=this.getCompilationKey($,U);let Me=this.compiledMap.get(ue);Me==null&&(Me=this.compile(s,U),this.compiledMap.set(ue,Me));try{this.keepIntermediateTensors=(0,j.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(tt){this.keepIntermediateTensors=!1,console.warn(tt.message)}const Ke={},Ze={};return(0,j.lub)(()=>{const tt=new In(this.weightMap,Ke,Ze,this.functionExecutorMap,this.parseNodeNameCache),ut=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(s).forEach(St=>{const[Kt,En]=k(St,tt),Ut=[];Ut[En]=s[St],ut[Kt]=Ut,this.keepIntermediateTensors&&(this.clonedTensorsMap[Kt]=this.cloneTensorList(Ut))});const _t=this.getFrozenTensorIds(ut),{orderedNodes:wt,nodeLiveUntilMap:ft}=Me;for(const St of wt){if(ut[St.name])continue;const Kt=es(St,ut,tt,this._resourceManager);if(j.D5U.isPromise(Kt))throw new Error(`The execution of the op '${St.op}' returned a promise. Please use model.executeAsync() instead.`);ut[St.name]=Kt,this.keepIntermediateTensors&&(this.clonedTensorsMap[St.name]=this.cloneTensorList(Kt)),this.checkTensorForDisposalWithNodeLiveUntilInfo(St,ut,tt,_t,L,ft.get(St.name))}return this.parent==null&&tt.dispose(_t),o.map(St=>Se(St,ut,tt))})}getFrozenTensorIds(s){const o=[].concat.apply([],Object.keys(s).map(m=>s[m]).map(m=>m.map($=>$.id)));return new Set(o)}checkTensorForDisposal(s,o,m,$,O,L,U){if(!(pn(o)||L.has(s))){for(const ue of m[s])ue!=null&&(U[ue.id]=(U[ue.id]||0)+o.children.length);for(const ue of o.inputs){if(pn(ue))continue;const Me=Re(ue.name,m,$);if(Me!=null)for(const Ke of Me){if(!Ke||Ke.kept||O.has(Ke.id))continue;const Ze=U[Ke.id];Ze===1?(Ke.dispose(),delete U[Ke.id]):Ze!=null&&U[Ke.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(s,o,m,$,O,L){function U(ue){return pn(ue)||O.has(ue.name)}if(!(pn(s)||L==null))for(const ue of L){if(U(ue))continue;const Me=Re(ue.name,o,m);for(const Ke of Me)!Ke||Ke.kept||$.has(Ke.id)||Ke.dispose()}}async executeAsync(s,o){return this._executeAsync(s,o)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(s=>{for(const o of s)o&&!o.isDisposed&&o.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(s,o,m=!1,$={},O={}){this.disposeIntermediateTensors(),m||(s=this.mapInputs(s),this.checkInputs(s),this.checkInputShapeAndType(s),o=this.mapOutputs(o),this.checkOutputs(o));try{this.keepIntermediateTensors=(0,j.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(tt){this.keepIntermediateTensors=!1,console.warn(tt.message)}const L=new In(this.weightMap,$,O,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const U=await this.executeWithControlFlow(s,L,o,m),ue=o.map(tt=>Se(tt,U,L)),Me=ue.map(tt=>tt.id),Ke=Object.keys(s).map(tt=>s[tt].id),Ze=new Set([...Me,...Ke,...this.weightIds]);return Object.values(U).forEach(tt=>{tt.forEach(ut=>{ut&&!ut.isDisposed&&!Ze.has(ut.id)&&ut.dispose()})}),this.parent==null&&L.dispose(Ze),ue}async executeFunctionAsync(s,o,m){const $=s.reduce((O,L,U)=>(O[this.inputs[U].name]=L,O),{});return this._executeAsync($,this.outputNodes,!0,o,m)}async executeWithControlFlow(s,o,m,$){const O=Object.keys(s),L=O.map(Ut=>this.graph.nodes[k(Ut)[0]]),U=m.map(Ut=>k(Ut)[0]),ue=new Set(U);let Me=U.map(Ut=>this.graph.nodes[Ut]);Me.length===0&&(Me=this._outputs);const{usedNodes:Ke,missingInputs:Ze,dynamicNode:tt,syncInputs:ut}=_n(s,Me,this.weightMap,this._initNodes),_t=[...L,...this.graph.weights,...this._initNodes||[]].map(Ut=>({node:Ut,contexts:o.currentContext})),wt=Object.assign({},this.weightMap);Object.keys(s).forEach(Ut=>{const[On,$s]=k(Ut),Ns=[];Ns[$s]=s[Ut],wt[On]=Ns});const ft={},St=this.getFrozenTensorIds(wt),Kt={};for(;_t.length>0;){const Ut=this.processStack(L,_t,o,wt,Kt,St,ue,ft,Ke);await Promise.all(Ut)}tt==null&&!$&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const En=Me.filter(Ut=>!pn(Ut)&&!Se(Ut.name,wt,o)).map(Ut=>Ut.name);if(En.length>0){let Ut="";throw tt!=null&&(Ut=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${ut}]`),new Error(`Cannot compute the outputs [${En}] from the provided inputs [${O}]. Consider providing the following inputs: [${Ze}]. ${Ut}`)}return wt}processStack(s,o,m,$,O,L,U,ue,Me){const Ke=[];for(;o.length>0;){const Ze=o.pop();m.currentContext=Ze.contexts;let tt="";if(Ze.node.op==="Enter"&&p("isConstant",Ze.node,$,m)&&([tt]=M(Ze.node.name,m)),$[Ze.node.name]==null){const ut=es(Ze.node,$,m,this._resourceManager);tt||([tt]=M(Ze.node.name,m));const _t=m.currentContext;j.D5U.isPromise(ut)?Ke.push(ut.then(wt=>($[tt]=wt,this.keepIntermediateTensors&&(this.clonedTensorsMap[tt]=this.cloneTensorList(wt)),m.currentContext=_t,this.checkTensorForDisposal(tt,Ze.node,$,m,L,U,ue),this.processChildNodes(Ze.node,o,m,$,O,Me),wt))):($[tt]=ut,this.keepIntermediateTensors&&(this.clonedTensorsMap[tt]=this.cloneTensorList(ut)),this.checkTensorForDisposal(tt,Ze.node,$,m,L,U,ue),this.processChildNodes(Ze.node,o,m,$,O,Me))}else this.processChildNodes(Ze.node,o,m,$,O,Me)}return Ke}processChildNodes(s,o,m,$,O,L){s.children.forEach(U=>{const[ue]=M(U.name,m);O[ue]||!L.has(U.name)||(U.op==="Merge"?U.inputNames.some(Me=>!!Se(Me,$,m))&&(O[ue]=!0,o.push({contexts:m.currentContext,node:U})):U.inputNames.every(Me=>!!Se(Me,$,m))&&(O[ue]=!0,o.push({contexts:m.currentContext,node:U})))})}dispose(){Object.keys(this.weightMap).forEach(s=>this.weightMap[s].forEach(o=>o.dispose()))}checkInputShapeAndType(s){Object.keys(s).forEach(o=>{const m=s[o],[$]=k(o),O=this.graph.nodes[$];if(O.attrParams.shape&&O.attrParams.shape.value){const L=O.attrParams.shape.value,U=L.length===m.shape.length&&m.shape.every((ue,Me)=>L[Me]===-1||L[Me]===ue);j.D5U.assert(U,()=>`The shape of dict['${O.name}'] provided in model.execute(dict) must be [${L}], but was [${m.shape}]`)}O.attrParams.dtype&&O.attrParams.dtype.value&&j.D5U.assert(m.dtype===O.attrParams.dtype.value,()=>`The dtype of dict['${O.name}'] provided in model.execute(dict) must be ${O.attrParams.dtype.value}, but was ${m.dtype}`)})}mapInputs(s){var o,m;const $={};for(const O in s){const L=(m=(o=this._signature)===null||o===void 0?void 0:o.inputs)===null||m===void 0?void 0:m[O];L!=null?$[L.name]=s[O]:$[O]=s[O]}return $}checkInputs(s){const o=Object.keys(s).filter(m=>{const[$]=k(m);return this.graph.nodes[$]==null});if(o.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${o}] that are not part of graph`)}mapOutputs(s){return s.map(o=>{var m,$;const O=($=(m=this._signature)===null||m===void 0?void 0:m.outputs)===null||$===void 0?void 0:$[o];return O!=null?O.name:o},{})}checkOutputs(s){s.forEach(o=>{const[m]=k(o);if(!this.graph.nodes[m])throw new Error(`The output '${o}' is not found in the graph`)})}}class ne{constructor(s={},o={}){this.hashTableNameToHandle=s,this.hashTableMap=o}addHashTable(s,o){this.hashTableNameToHandle[s]=o.handle,this.hashTableMap[o.id]=o}getHashTableHandleByName(s){return this.hashTableNameToHandle[s]}getHashTableById(s){return this.hashTableMap[s]}dispose(){for(const s in this.hashTableMap)this.hashTableMap[s].clearAndClose(),delete this.hashTableMap[s];for(const s in this.hashTableNameToHandle)this.hashTableNameToHandle[s].dispose(),delete this.hashTableNameToHandle[s]}}var fe=S(1146);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xe="?tfjs-format=file",be="model.json";class Ce{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(s,o={},m=j.io){this.modelUrl=s,this.loadOptions=o,this.version="n/a",this.io=m,o==null&&(this.loadOptions={}),this.resourceManager=new ne}findIOHandler(){const s=this.modelUrl;if(s.load!=null)this.handler=s;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(s,this.loadOptions);else{const o=this.io.getLoadHandlers(s,this.loadOptions);if(o.length===0)o.push(this.io.browserHTTPRequest(s,this.loadOptions));else if(o.length>1)throw new Error(`Found more than one (${o.length}) load handlers for URL '${[s]}'`);this.handler=o[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=this.handler.load();return j.D5U.isPromise(s)?s.then(o=>o.getWeightStream==null?this.loadSync(o):this.loadStreaming(o)):this.loadSync(s)}loadSync(s){const o=this.io.decodeWeights(s.weightData,s.weightSpecs);return this.loadWithWeightMap(s,o)}async loadStreaming(s){if(s.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const o=await(0,fe.r)(s.getWeightStream(),s.weightSpecs);return this.loadWithWeightMap(s,o)}loadWithWeightMap(s,o){this.artifacts=s;const m=this.artifacts.modelTopology;let $=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const O=this.artifacts.userDefinedMetadata;O.signature!=null&&($=O.signature),O.structuredOutputKeys!=null&&(this.structuredOutputKeys=O.structuredOutputKeys)}if(this.signature=$,this.version=`${m.versions.producer}.${m.versions.minConsumer}`,this.executor=new ae(zt.Instance.transformGraph(m,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,s.modelInitializer!=null&&s.modelInitializer.node!=null){const O=zt.Instance.transformGraph(s.modelInitializer);this.initializer=new ae(O),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=s.initializerSignature}return!0}async save(s,o){if(typeof s=="string"){const m=this.io.getSaveHandlers(s);if(m.length===0)throw new Error(`Cannot find any save handlers for URL '${s}'`);if(m.length>1)throw new Error(`Found more than one (${m.length}) save handlers for URL '${s}'`);s=m[0]}if(s.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return s.save(this.artifacts)}addStructuredOutputNames(s){if(this.structuredOutputKeys){const o=s instanceof j.esB?[s]:s,m={};return o.forEach(($,O)=>m[this.structuredOutputKeys[O]]=$),m}return s}predict(s,o){const m=this.execute(s,this.outputNodes);return this.addStructuredOutputNames(m)}async predictAsync(s,o){const m=await this.executeAsync(s,this.outputNodes);return this.addStructuredOutputNames(m)}normalizeInputs(s){var o;if(!(s instanceof j.esB)&&!Array.isArray(s)){const O=(o=this.signature)===null||o===void 0?void 0:o.inputs;if(O!=null)for(const L in O){const U=O[L];U.resourceId!=null&&(s[L]=this.resourceIdToCapturedInput[U.resourceId])}return s}s=Array.isArray(s)?s:[s];const m=Object.keys(this.resourceIdToCapturedInput).length;if(s.length+m!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-m} non-resource placeholders, while there are ${s.length} input tensors provided.`);let $=0;return this.inputNodes.reduce((O,L)=>{var U,ue,Me;const Ke=(Me=(ue=(U=this.signature)===null||U===void 0?void 0:U.inputs)===null||ue===void 0?void 0:ue[L])===null||Me===void 0?void 0:Me.resourceId;return Ke!=null?O[L]=this.resourceIdToCapturedInput[Ke]:O[L]=s[$++],O},{})}normalizeOutputs(s){return s=s||this.outputNodes,Array.isArray(s)?s:[s]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(s){if(this.resourceIdToCapturedInput={},this.initializerSignature){const o=this.initializerSignature.outputs,m=Object.keys(o);for(let $=0;$<m.length;$++){const O=m[$],L=o[O];this.resourceIdToCapturedInput[L.resourceId]=s[$]}}}execute(s,o){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),s=this.normalizeInputs(s),o=this.normalizeOutputs(o);const m=this.executor.execute(s,o);return m.length>1?m:m[0]}async executeAsync(s,o){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),s=this.normalizeInputs(s),o=this.normalizeOutputs(o);const m=await this.executor.executeAsync(s,o);return m.length>1?m:m[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(s){return Object.keys(s).reduce((o,m)=>(o[m]=[s[m]],o),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,j.B90)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function _e(i,s={},o=j.io){if(i==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");s==null&&(s={}),s.fromTFHub&&typeof i=="string"&&(i=Le(i));const m=new Ce(i,s,o);return await m.load(),m}function Ee(i){if(i==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let s;if(i instanceof Array){const[m,$]=i;if(!m)throw new Error("modelJSON must be the first element of the array");if(!$||!($ instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in m))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in m))throw new Error("Model JSON is missing 'weightsManifest'");const O=io.getWeightSpecs(m.weightsManifest),L=io.getModelArtifactsForJSONSync(m,O,$);s=io.fromMemorySync(L)}else if("load"in i)s=i;else if("modelTopology"in i&&"weightSpecs"in i&&"weightData"in i)s=io.fromMemorySync(i);else throw new Error("Unknown model format");const o=new Ce(s);return o.load(),o}function Le(i){return i.endsWith("/")||(i=i+"/"),`${i}${be}${xe}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},3993:function(st,ke,S){"use strict";S.d(ke,{JL:()=>R,Zu:()=>W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u=1e-7,he=1e-4;class R{constructor(Y,V){this.backend=Y,this.dataMover=V,this.data=new WeakMap,this.dataIdsCount=0}get(Y){return this.data.has(Y)||this.dataMover.moveData(this.backend,Y),this.data.get(Y)}set(Y,V){this.dataIdsCount++,this.data.set(Y,V)}has(Y){return this.data.has(Y)}delete(Y){return this.dataIdsCount--,this.data.delete(Y)}numDataIds(){return this.dataIdsCount}}class W{refCount(Y){return x("refCount")}incRef(Y){return x("incRef")}timerAvailable(){return!0}time(Y){return x("time")}read(Y){return x("read")}readSync(Y){return x("readSync")}readToGPU(Y,V){return x("readToGPU")}numDataIds(){return x("numDataIds")}disposeData(Y,V){return x("disposeData")}write(Y,V,se){return x("write")}move(Y,V,se,J,D){return x("move")}createTensorFromGPUData(Y,V,se){return x("createTensorFromGPUData")}memory(){return x("memory")}floatPrecision(){return x("floatPrecision")}epsilon(){return this.floatPrecision()===32?u:he}dispose(){return x("dispose")}}function x(I){throw new Error(`'${I}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},371:function(st,ke,S){"use strict";S.r(ke),S.d(ke,{SELU_SCALEALPHA:()=>Z,computeDefaultPad:()=>V.aO,computeConv2DInfo:()=>V.Ix,getComplexWithIndex:()=>Oe,computeOptimalWindowSize:()=>Fe,getInnerMostAxes:()=>R.sY,getPermuted:()=>j,validateUpdateShape:()=>C.l5,ERF_A2:()=>Re,mergeRealAndImagArrays:()=>H,assertAxesAreInnerMostDims:()=>R.lB,getEinsumComputePath:()=>Xe,calculateShapes:()=>C.SU,assertParamsConsistent:()=>I,getReductionAxes:()=>W.getReductionAxes,convertConv2DDataFormat:()=>V.sl,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>zn,getSparseReshapeInputOutputMismatchErrorMessage:()=>Qn,slice_util:()=>Ve,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Yt,getSliceSize:()=>N,ERF_P:()=>p,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>kn,computeOutAndReduceShapes:()=>R.kz,getEinsumPermutation:()=>oe,computeOutShape:()=>Y,axesAreInnerMostDims:()=>R.YB,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>It,getReshaped:()=>He,ERF_A4:()=>ee,isIdentityPermutation:()=>ot,applyActivation:()=>se.QH,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>cn,SELU_SCALE:()=>re,getFusedBiasGradient:()=>se.pf,log:()=>X.c,ERF_A1:()=>Se,RowPartitionType:()=>J,fromUint8ToStringArray:()=>qn,stridesOrDilationsArePositive:()=>V.U3,getAxesPermutation:()=>R.Q3,validateDefaultValueShape:()=>ge,computePool3DInfo:()=>V.pl,getSliceBeginCoords:()=>z,decodeEinsumEquation:()=>yt,exponent:()=>je,assertAndGetBroadcastShape:()=>W.assertAndGetBroadcastShape,getBroadcastDims:()=>W.getBroadcastDims,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>cs,getReshapedPermuted:()=>ye,eitherStridesOrDilationsAreOne:()=>V.jT,fromStringArrayToUint8:()=>Bn,combineLocations:()=>R.Vh,ERF_A3:()=>M,segment_util:()=>u,tupleValuesAreOne:()=>V.I0,PARALLELIZE_THRESHOLD:()=>$e,expandShapeToKeepDim:()=>R.rv,prepareAndValidate:()=>P,checkPadOnDimRoundingMode:()=>V.m,assignToTypedArray:()=>me,computeConv3DInfo:()=>V.jw,getFusedDyActivation:()=>se.Fr,upcastType:()=>Ge.x8,shouldFuse:()=>se.uy,exponents:()=>Ue,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>ls,splitRealAndImagArrays:()=>we,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Ot,computePool2DInfo:()=>V.Xw,getImageCenter:()=>qe,checkEinsumDimSizes:()=>Be,computeDilation2DInfo:()=>V.Rf,getRaggedRank:()=>te,getRowPartitionTypesHelper:()=>b,getSparseReshapeNegativeOutputDimErrorMessage:()=>ln,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>zt,complexWithOddIndex:()=>Ye,getUndoAxesPermutation:()=>R.LJ,prepareSplitSize:()=>Ct,ERF_A5:()=>k,getSparseReshapeInputOutputMultipleErrorMessage:()=>mn,validateInput:()=>C.b0,complexWithEvenIndex:()=>Pe,warn:()=>X.Z,combineRaggedTensorToTensorShapes:()=>D});var u={};S.r(u),S.d(u,{collectGatherOpShapeInfo:()=>Fn,computeOutShape:()=>Pn,segOpComputeOptimalWindowSize:()=>an});var he=S(2891),R=S(7199),W=S(6255),x=S(9024);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(Ie,ze){const q=Ie[0].length;Ie.forEach((We,ct)=>{x.hu(We.length===q,()=>`Error in concat${q}D: rank of tensors[${ct}] must be the same as the rank of the rest (${q})`)}),x.hu(ze>=0&&ze<q,()=>`Error in concat${q}D: axis must be between 0 and ${q-1}.`);const Te=Ie[0];Ie.forEach((We,ct)=>{for(let ht=0;ht<q;ht++)x.hu(ht===ze||We[ht]===Te[ht],()=>`Error in concat${q}D: Shape of tensors[${ct}] (${We}) does not match the shape of the rest (${Te}) along the non-concatenated axis ${ct}.`)})}function Y(Ie,ze){const q=Ie[0].slice();for(let Te=1;Te<Ie.length;Te++)q[ze]+=Ie[Te][ze];return q}var V=S(2132),se=S(3608);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var J;(function(Ie){Ie[Ie.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",Ie[Ie.VALUE_ROWIDS=1]="VALUE_ROWIDS",Ie[Ie.ROW_LENGTHS=2]="ROW_LENGTHS",Ie[Ie.ROW_SPLITS=3]="ROW_SPLITS",Ie[Ie.ROW_LIMITS=4]="ROW_LIMITS",Ie[Ie.ROW_STARTS=5]="ROW_STARTS"})(J||(J={}));function D(Ie,ze,q){let Te=new Array;if(q==null&&ze==null)return Te;if(ze==null)for(;Te.length<Ie+q.length;)Te.push(-1);else Te=ze.slice();if(q==null)return Te;if(Ie+q.length!==Te.length)throw new Error(`rt input.shape and shape=${ze} are incompatible: rt input.rank = ${Ie+q.length}, but shape.rank = ${Te.length}`);for(let We=1;We<q.length;++We){const ct=q[We],ht=Te[Te.length-q.length+We],vt=Te[ht];if(ct>=0)if(vt>=0){if(vt!==ct)throw new Error(`rt input.shape and shape=${ze} are incompatible: rt input.shape[${We+Ie}] = ${ct} but shape[${We+Ie}] = ${vt}`)}else Te[ht]=ct}return Te}function b(Ie){const ze={FIRST_DIM_SIZE:J.FIRST_DIM_SIZE,VALUE_ROWIDS:J.VALUE_ROWIDS,ROW_LENGTHS:J.ROW_LENGTHS,ROW_SPLITS:J.ROW_SPLITS,ROW_LIMITS:J.ROW_LIMITS,ROW_STARTS:J.ROW_STARTS},q=[];for(const Te of Ie)if(Te in ze)q.push(ze[Te]);else break;return q}function te(Ie){return Ie.length===0?0:Ie[0]===J.FIRST_DIM_SIZE?Ie.length-1:Ie.length}function ge(Ie,ze){if(Ie==null||ze==null)return;const q=Ie.length,Te=ze.length;if(q>=Te)throw new Error(`defaultValue.shape=${Ie} and ragged tensor flatValues.shape=${ze}, are incompatible: defaultValue.rank = ${q} must be less than ragged tensor input flatValues.rank = ${Te})`);for(let We=0;We<Math.min(q,Te-1);++We){const ct=Ie[We],ht=ze[We+1];if(ct>=0&&ht>=0&&ct!==1&&ct!==ht)throw new Error(`defaultValue.shape=${Ie}, and ragged tensor input flatValues.shape=${ze} are incompatible: defaultValue.shape[${We-Ie.length}] = ${ct} but ragged tensor input.flatValues.shape[${We-Ie.length}] = ${ht}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $e=30;function Fe(Ie){return Ie<=$e?Ie:(0,x.jP)(Ie,Math.floor(Math.sqrt(Ie)))}var Ve=S(6130),Ge=S(6154);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(Ie,ze,q){const Te=q*(typeof Ie=="number"?Ie:Ie[0]),We=ze*(typeof Ie=="number"?Ie:Ie[1]);return[Te,We]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(Ie,ze,q,Te=!0){let We=[];if(Te)We=We.concat(ze.slice(0)),We.push(Ie[0]/q),We=We.concat(Ie.slice(1));else{We=We.concat(Ie[0]);const ct=ze.length;for(let ht=0;ht<ct;++ht)We=We.concat([Ie[ht+1]/ze[ht],ze[ht]]);We=We.concat(Ie.slice(ct+1))}return We}function j(Ie,ze,q=!0){const Te=[];if(q){Te.push(ze);for(let We=ze+1;We<Ie;++We)We<=2*ze?(Te.push(We),Te.push(We-(ze+1))):Te.push(We)}else{const We=[],ct=[];for(let ht=1;ht<Ie;++ht)ht>=ze*2+1||ht%2===1?ct.push(ht):We.push(ht);Te.push(...We),Te.push(0),Te.push(...ct)}return Te}function ye(Ie,ze,q,Te=!0){const We=[];Te?We.push(Ie[0]/q):We.push(Ie[0]*q);for(let ct=1;ct<Ie.length;++ct)ct<=ze.length?Te?We.push(ze[ct-1]*Ie[ct]):We.push(Ie[ct]/ze[ct-1]):We.push(Ie[ct]);return We}function z(Ie,ze){const q=[0];for(let Te=0;Te<ze;++Te)q.push(Ie[Te][0]);return q}function N(Ie,ze,q){const Te=Ie.slice(0,1);for(let We=0;We<q;++We)Te.push(Ie[We+1]-ze[We][0]-ze[We][1]);return Te}function P(Ie,ze){const q=Ie.shape.length,Te=ze.shape.length;if(q<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${q}.`);if(Te<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${Te}.`);if(ze.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${ze.dtype}.`);if(ze.shape[Te-1]>q)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${ze.shape[Te-1]} vs. ${q}`);if((0,x.NA)(Ie.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${Ie.shape}.`);const We=ze.shape,ct=We[We.length-1];let ht=1;for(let Tt=0;Tt<We.length-1;++Tt)ht*=We[Tt];const vt=Ie.shape,Qt=We.slice();Qt.pop();let Gt=1;for(let Tt=ct;Tt<q;++Tt)Gt*=vt[Tt],Qt.push(vt[Tt]);const xn=[...(0,x.e3)(Ie.shape).map(Tt=>Tt/Gt),1].slice(0,ct);return[Qt,ht,Gt,xn]}var C=S(1820);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z=1.7580993408473768,re=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p=.3275911,Se=.254829592,Re=-.284496736,M=1.421413741,ee=-1.453152027,k=1.061405429;var X=S(3386);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H(Ie,ze){if(Ie.length!==ze.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${Ie.length}, imag: ${ze.length}.`);const q=new Float32Array(Ie.length*2);for(let Te=0;Te<q.length;Te+=2)q[Te]=Ie[Te/2],q[Te+1]=ze[Te/2];return q}function we(Ie){const ze=new Float32Array(Ie.length/2),q=new Float32Array(Ie.length/2);for(let Te=0;Te<Ie.length;Te+=2)ze[Te/2]=Ie[Te],q[Te/2]=Ie[Te+1];return{real:ze,imag:q}}function Pe(Ie){const ze=Math.ceil(Ie.length/4),q=new Float32Array(ze),Te=new Float32Array(ze);for(let We=0;We<Ie.length;We+=4)q[Math.floor(We/4)]=Ie[We],Te[Math.floor(We/4)]=Ie[We+1];return{real:q,imag:Te}}function Ye(Ie){const ze=Math.floor(Ie.length/4),q=new Float32Array(ze),Te=new Float32Array(ze);for(let We=2;We<Ie.length;We+=4)q[Math.floor(We/4)]=Ie[We],Te[Math.floor(We/4)]=Ie[We+1];return{real:q,imag:Te}}function Oe(Ie,ze){const q=Ie[ze*2],Te=Ie[ze*2+1];return{real:q,imag:Te}}function me(Ie,ze,q,Te){Ie[Te*2]=ze,Ie[Te*2+1]=q}function Ue(Ie,ze){const q=new Float32Array(Ie/2),Te=new Float32Array(Ie/2);for(let We=0;We<Math.ceil(Ie/2);We++){const ct=(ze?2:-2)*Math.PI*(We/Ie);q[We]=Math.cos(ct),Te[We]=Math.sin(ct)}return{real:q,imag:Te}}function je(Ie,ze,q){const Te=(q?2:-2)*Math.PI*(Ie/ze),We=Math.cos(Te),ct=Math.sin(Te);return{real:We,imag:ct}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const at="->",rt=/->/g,Qe=",",mt="...";function yt(Ie,ze){Ie=Ie.replace(/\s/g,"");const q=(Ie.length-Ie.replace(rt,"").length)/at.length;if(q<1)throw new Error("Equations without an arrow are not supported.");if(q>1)throw new Error(`Equation must contain exactly one arrow ("${at}").`);const[Te,We]=Ie.split(at);(0,x.hu)(Te.indexOf(mt)===-1,()=>`The ellipsis notation ("${mt}") is not supported yet.`);const ct=Te.split(Qe),ht=ct.length;if(ze!==ht)throw new Error(`Expected ${ht} input tensors, received ${ze}`);if(ht>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const vt=[];for(let Ft=0;Ft<We.length;++Ft){const en=We[Ft];if(!ct.some(ds=>ds.indexOf(en)!==-1))throw new Error(`Output subscripts contain the label ${en} not present in the input subscripts.`);vt.indexOf(en)===-1&&vt.push(en)}for(let Ft=0;Ft<Te.length;++Ft){const en=Te[Ft];vt.indexOf(en)===-1&&en!==Qe&&vt.push(en)}const Qt=new Array(ct.length);for(let Ft=0;Ft<ht;++Ft){if(new Set(ct[Ft].split("")).size!==ct[Ft].length)throw new Error(`Found duplicate axes in input component ${ct[Ft]}. Support for duplicate axes in input is not implemented yet.`);Qt[Ft]=[];for(let en=0;en<ct[Ft].length;++en)Qt[Ft].push(vt.indexOf(ct[Ft][en]))}const Gt=vt.length,xn=We.length,Tt=[];for(let Ft=xn;Ft<Gt;++Ft)Tt.push(Ft);return{allDims:vt,summedDims:Tt,idDims:Qt}}function oe(Ie,ze){let q=new Array(Ie);q.fill(-1);for(let We=0;We<ze.length;++We)q[ze[We]]=We;const Te=[];for(let We=0;We<Ie;++We)q[We]===-1&&Te.push(We);return q=q.filter(We=>We!==-1),{permutationIndices:q,expandDims:Te}}function Be(Ie,ze,q){const Te=new Array(Ie);for(let We=0;We<q.length;++We){const ct=q[We].shape;for(let ht=0;ht<ze[We].length;++ht)Te[ze[We][ht]]===void 0?Te[ze[We][ht]]=ct[ht]:(0,x.hu)(Te[ze[We][ht]]===ct[ht],()=>`Expected dimension ${Te[ze[We][ht]]} at axis ${ht} of input shaped ${JSON.stringify(ct)}, but got dimension ${ct[ht]}`)}}function Xe(Ie,ze){const q=Ie,Te=[];let We=0;Ie.length===0&&q.push(-1),We=Ie.length+1;for(let ht=0;ht<We;++ht)Te.push([]);const ct=[];for(let ht=0;ht<q.length;++ht){const vt=q[ht],Qt=bt(ze,vt);for(const Gt of Qt)ct.indexOf(Gt)===-1&&(Te[ht].push(Gt),ct.push(Gt))}return{path:q,steps:Te}}function ot(Ie){return Ie.every((ze,q)=>ze===q)}function bt(Ie,ze){const q=[];for(let Te=0;Te<Ie.length;++Te)(Ie[Te].length===0||Ie[Te].indexOf(ze)!==-1||ze===-1)&&q.push(Te);return q}function Ct(Ie,ze,q=0){let Te=[];if(typeof ze=="number")(0,x.hu)(Ie.shape[q]%ze===0,()=>"Number of splits must evenly divide the axis."),Te=new Array(ze).fill(Ie.shape[q]/ze);else{const We=ze.reduce((ht,vt)=>(vt===-1&&(ht+=1),ht),0);(0,x.hu)(We<=1,()=>"There should be only one negative value in split array.");const ct=ze.indexOf(-1);if(ct!==-1){const ht=ze.reduce((vt,Qt)=>Qt>0?vt+Qt:vt);ze[ct]=Ie.shape[q]-ht}(0,x.hu)(Ie.shape[q]===ze.reduce((ht,vt)=>ht+vt),()=>"The sum of sizes must match the size of the axis dimension."),Te=ze}return Te}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function It(Ie){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${Ie}`}function Ot(Ie,ze){return`indices(${Ie}, 0) is invalid: ${ze} < 0`}function zt(Ie,ze,q){return`indices(${Ie}, 0) is invalid: ${ze} >= ${q}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(Ie,ze){return`only one output dimension may be -1, not both ${Ie} and ${ze}`}function ln(Ie,ze){return`size ${Ie} must be non-negative, not ${ze}`}function cn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function mn(Ie,ze){const q=(0,x.NA)(Ie),Te=(0,x.NA)(ze);return`Input to reshape is a SparseTensor with ${q}
  dense values, but the requested shape requires a multiple of ${Te}. inputShape=${Ie} outputShape= ${ze}`}function Qn(Ie,ze){const q=(0,x.NA)(Ie),Te=(0,x.NA)(ze);return`Input to reshape is a tensor with ${q} dense values, but the requested shape has ${Te}. inputShape=${Ie} outputShape=${ze}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(){return"segment ids must be >= 0"}function cs(){return"segment ids are not increasing"}function kn(Ie,ze){return`Segment id ${Ie} out of range [0, ${ze}), possibly because segmentIds input is not sorted.`}function zn(Ie,ze,q){return`Bad: indices[${Ie}] == ${ze} out of range [0, ${q})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(Ie,ze){let q=!1,Te;for(Ie<=$e?(Te=Ie,q=!0):Te=(0,x.jP)(Ie,Math.floor(Math.sqrt(Ie)));!q;)Te>ze||Te===Ie?q=!0:Te=(0,x.jP)(Ie,Te+1);return Te}function Pn(Ie,ze,q){const Te=[],We=Ie.length;for(let ct=0;ct<We;ct++)ct!==ze?Te.push(Ie[ct]):Te.push(q);return Te}function Fn(Ie,ze,q,Te){const We=ze.shape.length,ct=Ie.shape.length;if(Te!==0&&(Te<-We||Te>We))throw new Error(`Expect batchDims in the range of [-${We}, ${We}], but got ${Te}`);if(Te<0&&(Te+=We),Te>ct)throw new Error(`batchDims (${Te}) must be less than rank(x) (
    ${ct}).`);if(q<Te)throw new Error(`batchDims (${Te}) must be less than or equal to axis (${q}).`);for(let Tt=0;Tt<Te;++Tt)if(Ie.shape[Tt]!==ze.shape[Tt])throw new Error(`x.shape[${Tt}]: ${Ie.shape[Tt]} should be equal to indices.shape[${Tt}]: ${ze.shape[Tt]}.`);const ht=Ie.shape[q],vt=[];let Qt=1,Gt=1,xn=1;for(let Tt=0;Tt<Te;++Tt)vt.push(Ie.shape[Tt]),Qt*=Ie.shape[Tt];for(let Tt=Te;Tt<q;Tt++)vt.push(Ie.shape[Tt]),Gt*=Ie.shape[Tt];for(let Tt=Te;Tt<We;Tt++)vt.push(ze.shape[Tt]);for(let Tt=q+1;Tt<ct;Tt++)vt.push(Ie.shape[Tt]),xn*=Ie.shape[Tt];return{batchSize:Qt,sliceSize:xn,outerSize:Gt,dimSize:ht,outputShape:vt}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qn(Ie){try{return Ie.map(ze=>(0,he.decodeString)(ze))}catch(ze){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${ze}`)}}function Bn(Ie){return Ie.map(ze=>(0,he.encodeString)(ze))}},8135:function(st,ke,S){"use strict";S.d(ke,{GP:()=>x,pA:()=>Y,qP:()=>I});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u(b,te,ge){const $e=he(b,te,ge),Fe=$e<0?-($e+1):$e;b.splice(Fe,0,te)}function he(b,te,ge){return W(b,te,ge||R)}function R(b,te){return b>te?1:b<te?-1:0}function W(b,te,ge){let $e=0,Fe=b.length,Ve=0,Ge=!1;for(;$e<Fe;){Ve=$e+(Fe-$e>>>1);const qe=ge(te,b[Ve]);qe>0?$e=Ve+1:(Fe=Ve,Ge=!qe)}return Ge?$e:-$e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(b,te,ge,$e,Fe){return V(b,te,ge,$e,Fe,0)}function I(b,te,ge,$e,Fe,Ve){return V(b,te,ge,$e,Fe,0,!1,Ve,!0)}function Y(b,te,ge,$e,Fe,Ve){return V(b,te,ge,$e,Fe,Ve,!0)}function V(b,te,ge,$e,Fe,Ve,Ge=!1,qe=!1,He=!1){const j=[];for(let re=0;re<te.length;re++)te[re]>Fe&&j.push({score:te[re],boxIndex:re,suppressBeginIndex:0});j.sort(D);const ye=Ve>0?-.5/Ve:0,z=[],N=[];for(;z.length<ge&&j.length>0;){const re=j.pop(),{score:p,boxIndex:Se,suppressBeginIndex:Re}=re;if(p<Fe)break;let M=!1;for(let ee=z.length-1;ee>=Re;--ee){const k=se(b,Se,z[ee]);if(k>=$e){M=!0;break}if(re.score=re.score*J($e,ye,k),re.score<=Fe)break}re.suppressBeginIndex=z.length,M||(re.score===p?(z.push(Se),N.push(re.score)):re.score>Fe&&u(j,re,D))}const P=z.length,C=ge-P;qe&&C>0&&(z.push(...new Array(C).fill(0)),N.push(...new Array(C).fill(0)));const Z={selectedIndices:z};return Ge&&(Z.selectedScores=N),He&&(Z.validOutputs=P),Z}function se(b,te,ge){const $e=b.subarray(te*4,te*4+4),Fe=b.subarray(ge*4,ge*4+4),Ve=Math.min($e[0],$e[2]),Ge=Math.min($e[1],$e[3]),qe=Math.max($e[0],$e[2]),He=Math.max($e[1],$e[3]),j=Math.min(Fe[0],Fe[2]),ye=Math.min(Fe[1],Fe[3]),z=Math.max(Fe[0],Fe[2]),N=Math.max(Fe[1],Fe[3]),P=(qe-Ve)*(He-Ge),C=(z-j)*(N-ye);if(P<=0||C<=0)return 0;const Z=Math.max(Ve,j),re=Math.max(Ge,ye),p=Math.min(qe,z),Se=Math.min(He,N),Re=Math.max(p-Z,0)*Math.max(Se-re,0);return Re/(P+C-Re)}function J(b,te,ge){const $e=Math.exp(te*ge*ge);return ge<=b?$e:0}function D(b,te){return b.score-te.score||b.score===te.score&&te.boxIndex-b.boxIndex}},9560:function(st,ke,S){"use strict";S.d(ke,{Z:()=>he});var u=S(4865);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(R,W){const x=[];for(let V=0;V<W.length;V++)W[V]&&x.push(V);const I=(0,u.f)(R,"int32"),Y=(0,u.f)([x.length,R.length],"int32");for(let V=0;V<x.length;V++){const se=I.indexToLoc(x[V]),J=V*R.length;Y.values.set(se,J)}return Y.toTensor()}},7450:function(st,ke,S){"use strict";var u=S(6201),he=S(89),R=S(6650),W=S(2545),x=S(4655),I=S(6819),Y=S(5830);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(ye,z){return fetch(ye,z)}now(){return performance.now()}encode(ye,z){if(z!=="utf-8"&&z!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${z}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(ye)}decode(ye,z){return new TextDecoder(z).decode(ye)}setTimeoutCustom(ye,z){if(typeof window>"u"||!(0,R.OB)().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(ye,z);return}this.functionRefs.push(ye),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},z),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",N=>{if(N.source===window&&N.data.name===this.messageName){N.stopPropagation();const P=this.functionRefs[N.data.index];P(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(ye){return(0,Y.j)(ye)}}if((0,R.OB)().get("IS_BROWSER")){(0,R.OB)().setPlatform("browser",new V);try{I.xQ.registerManager(x.Ew.URL_SCHEME,new x.JL)}catch{}try{I.xQ.registerManager(W.ns.URL_SCHEME,new W.y$)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const se={importFetch:()=>S(1053)};let J;function D(){J=null}function b(j){J=j}function te(){return J}class ge{constructor(){this.util=S(6005),this.textEncoder=new this.util.TextEncoder}fetch(ye,z){return(0,R.OB)().global.fetch!=null?(0,R.OB)().global.fetch(ye,z):(J==null&&(J=se.importFetch()),J(ye,z))}now(){const ye=process.hrtime();return ye[0]*1e3+ye[1]/1e6}encode(ye,z){if(z!=="utf-8"&&z!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${z}`);return this.textEncoder.encode(ye)}decode(ye,z){return ye.length===0?"":new this.util.TextDecoder(z).decode(ye)}isTypedArray(ye){return this.util.types.isFloat32Array(ye)||this.util.types.isInt32Array(ye)||this.util.types.isUint8Array(ye)||this.util.types.isUint8ClampedArray(ye)}}(0,R.OB)().get("IS_NODE")&&!(0,R.OB)().get("IS_BROWSER")&&(0,R.OB)().setPlatform("node",new ge);var $e=S(4865),Fe=S(8341),Ve=S(8155),Ge=S(2351),qe=S(1038);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(0,u.wv)();const He={buffer:$e.f,cast:Fe.p,clone:Ve.d,print:Ge.S};(0,qe.Vp)(He)},290:function(st,ke,S){"use strict";S.d(ke,{g:()=>he});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:R=>R();function he(){return new Promise(R=>u(()=>R()))}},857:function(st,ke,S){"use strict";S.r(ke),S.d(ke,{isBrowser:()=>x,isMobile:()=>W,mockIsMobile:()=>R});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u(){return typeof navigator<"u"&&navigator!=null}let he;function R(I){he=I}function W(I){if(he!==void 0)return he;if(I||u()){if(I||(I=navigator),I.product==="ReactNative")return!0;const Y=I.userAgent||I.vendor||(typeof window<"u"?window.opera:"");if(!Y){const V=I;return V.userAgentData&&V.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(Y)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(Y.substr(0,4))}return!1}function x(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}},6201:function(st,ke,S){"use strict";S.d(ke,{BV:()=>j,wv:()=>He});var u=S(3993),he=S(6650),R=S(2360),W=S(4403),x=S(5042),I=S(3386),Y=S(2891),V=S(9024);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class se{constructor(N,P){this.backendTimer=N,this.logger=P,P==null&&(this.logger=new D)}profileKernel(N,P,C){let Z;const re=()=>{Z=C()};let p;const Se=Y.now();if(this.backendTimer.timerAvailable())p=this.backendTimer.time(re);else{re();for(const M of Z)M.dataSync();p=Promise.resolve({kernelMs:Y.now()-Se})}if((0,he.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let M=0;M<Z.length;M++){const ee=Z[M];ee.data().then(k=>{J(k,ee.dtype,N)})}return{kernelName:N,outputs:Z,inputs:P,timeMs:p.then(M=>M.kernelMs),extraInfo:p.then(M=>M.getExtraProfileInfo!=null?M.getExtraProfileInfo():"")}}logKernelProfile(N){const{kernelName:P,outputs:C,timeMs:Z,inputs:re,extraInfo:p}=N;C.forEach(Se=>{Promise.all([Se.data(),Z,p]).then(Re=>{this.logger.logKernelProfile(P,Se,Re[0],Re[1],re,Re[2])})})}}function J(z,N,P){if(N!=="float32")return!1;for(let C=0;C<z.length;C++){const Z=z[C];if(isNaN(Z)||!isFinite(Z))return console.warn(`Found ${Z} in the result of '${P}'`),!0}return!1}class D{logKernelProfile(N,P,C,Z,re,p){const Se=typeof Z=="number"?V.oj(`${Z}ms`,9):Z.error,Re=V.oj(N,25),M=P.rank,ee=P.size,k=V.oj(P.shape.toString(),14);let X="";for(const H in re){const we=re[H];if(we!=null){const Pe=we.shape||P.shape,Ye=Pe.length;X+=`${H}: ${Ye}D ${Ye>0?Pe:""} `}}console.log(`%c${Re}	%c${Se}	%c${M}D ${k}	%c${ee}	%c${X}	%c${p}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b(z,N,P){const C={},Z={};for(let Re=0;Re<N.length;Re++)C[N[Re].id]=!0;for(let Re=0;Re<z.length;Re++){const M=z[Re],ee=M.inputs;for(const k in ee){const X=ee[k];let H=!1;for(let we=0;we<N.length;we++)if(C[X.id]){M.outputs.forEach(Pe=>C[Pe.id]=!0),H=!0,Z[M.id]=!0;break}if(H)break}}const re={};re[P.id]=!0;const p={};for(let Re=z.length-1;Re>=0;Re--){const M=z[Re],ee=M.inputs;for(let k=0;k<M.outputs.length;k++)if(re[M.outputs[k].id]){for(const X in ee)re[ee[X].id]=!0,p[M.id]=!0;break}}const Se=[];for(let Re=0;Re<z.length;Re++){const M=z[Re];if(Z[M.id]&&p[M.id]){const ee={};for(const X in M.inputs){const H=M.inputs[X];C[H.id]&&(ee[X]=H)}const k=Object.assign({},M);k.inputs=ee,k.outputs=M.outputs,Se.push(k)}}return Se}function te(z,N,P,C){for(let Z=N.length-1;Z>=0;Z--){const re=N[Z],p=[];if(re.outputs.forEach(Re=>{const M=z[Re.id];M!=null?p.push(M):p.push(null)}),re.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${re.kernelName}.`);const Se=re.gradient(p);for(const Re in re.inputs){if(!(Re in Se))throw new Error(`Cannot backprop through input ${Re}. Available gradients found: ${Object.keys(Se)}.`);const M=P(()=>Se[Re]());if(M.dtype!=="float32")throw new Error(`Error in gradient for op ${re.kernelName}. The gradient of input ${Re} must have 'float32' dtype, but has '${M.dtype}'`);const ee=re.inputs[Re];if(!V.cO(M.shape,ee.shape))throw new Error(`Error in gradient for op ${re.kernelName}. The gradient of input '${Re}' has shape '${M.shape}', which does not match the shape of the input '${ee.shape}'`);if(z[ee.id]==null)z[ee.id]=M;else{const k=z[ee.id];z[ee.id]=C(k,M),k.dispose()}}}}var ge=S(1038),$e=S(6802);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(z){return z.kernelName!=null}class Ve{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(N=>N.name)))}}}dispose(){for(const N in this.registeredVariables)this.registeredVariables[N].dispose()}}class Ge{constructor(N){this.ENV=N,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ve}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const N=this.getSortedBackends();for(let P=0;P<N.length;P++){const C=N[P];if(await this.initializeBackend(C).success){await this.setBackend(C);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:N,asyncInit:P}=this.initializeBackendsAndReturnBest();if(P)throw new Error(`The highest priority backend '${N}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(N)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(N){if(!(N in this.registry))if(N in this.registryFactory){const{asyncInit:P}=this.initializeBackend(N);if(P)return null}else return null;return this.registry[N]}findBackendFactory(N){return N in this.registryFactory?this.registryFactory[N].factory:null}registerBackend(N,P,C=1){return N in this.registryFactory?(I.Z(`${N} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[N]={factory:P,priority:C},!0)}async setBackend(N){if(this.registryFactory[N]==null)throw new Error(`Backend name '${N}' not found in registry`);if(this.backendName=N,this.registry[N]==null){this.backendInstance=null;const{success:P,asyncInit:C}=this.initializeBackend(N);if(!(C?await P:P))return!1}return this.backendInstance=this.registry[N],this.setupRegisteredKernels(),this.profiler=new se(this.backendInstance),!0}setupRegisteredKernels(){(0,x.tr)(this.backendName).forEach(P=>{P.setupFunc!=null&&P.setupFunc(this.backendInstance)})}disposeRegisteredKernels(N){(0,x.tr)(N).forEach(C=>{C.disposeFunc!=null&&C.disposeFunc(this.registry[N])})}initializeBackend(N){const P=this.registryFactory[N];if(P==null)throw new Error(`Cannot initialize backend ${N}, no registration found.`);try{const C=P.factory();if(C&&!(C instanceof u.Zu)&&typeof C.then=="function"){const Z=++this.pendingBackendInitId,re=C.then(p=>Z<this.pendingBackendInitId?!1:(this.registry[N]=p,this.pendingBackendInit=null,!0)).catch(p=>(Z<this.pendingBackendInitId||(this.pendingBackendInit=null,I.Z(`Initialization of backend ${N} failed`),I.Z(p.stack||p.message)),!1));return this.pendingBackendInit=re,{success:re,asyncInit:!0}}else return this.registry[N]=C,{success:!0,asyncInit:!1}}catch(C){return I.Z(`Initialization of backend ${N} failed`),I.Z(C.stack||C.message),{success:!1,asyncInit:!1}}}removeBackend(N){if(!(N in this.registryFactory))throw new Error(`${N} backend not found in registry`);this.backendName===N&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,N in this.registry&&(this.disposeRegisteredKernels(N),this.registry[N].dispose(),delete this.registry[N]),delete this.registryFactory[N],this.backendName===N&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((N,P)=>this.registryFactory[P].priority-this.registryFactory[N].priority)}initializeBackendsAndReturnBest(){const N=this.getSortedBackends();for(let P=0;P<N.length;P++){const C=N[P],{success:Z,asyncInit:re}=this.initializeBackend(C);if(re||Z)return{name:C,asyncInit:re}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(N,P){const C=this.state.tensorInfo.get(P),Z=C.backend,re=this.readSync(P),p=Z.refCount(P);Z.disposeData(P,!0),C.backend=N,N.move(P,re,C.shape,C.dtype,p),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(N,P){let C=null;if(P==null){if(typeof N!="function")throw new Error("Please provide a function to tidy()");P=N}else{if(typeof N!="string"&&!(N instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof P!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");C=N}let Z;return this.scopedRun(()=>this.startScope(C),()=>this.endScope(Z),()=>(Z=P(),Z instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),Z))}scopedRun(N,P,C){N();try{const Z=C();return P(),Z}catch(Z){throw P(),Z}}nextTensorId(){return Ge.nextTensorId++}nextVariableId(){return Ge.nextVariableId++}clone(N){const P=j.runKernel(W.iJz,{x:N}),C={x:N},Z=p=>({x:()=>{const Se="float32",Re={x:p},M={dtype:Se};return j.runKernel(W.RFZ,Re,M)}}),re=[];return this.addTapeNode(this.state.activeScope.name,C,[P],Z,re,{}),P}runKernel(N,P,C){if(this.backendName==null&&this.backend,!((0,x.pI)(N,this.backendName)!=null))throw new Error(`Kernel '${N}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:N,inputs:P,attrs:C})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(N,P,C){const Z=this.backend.numDataIds();let re=0;C.forEach(Re=>{re+=Re.dtype==="complex64"?3:1});const p=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],Se=Z-P-re-p;if(Se>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${Se} data ids) after running '${N}'`)}runKernelFunc(N){let P,C=[];const Z=this.isTapeOn(),re=this.state.numBytes,p=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let Se;this.backendName==null&&this.backend;let Re;const M=Fe(N)?N.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Fe(N)){const{kernelName:we,inputs:Pe,attrs:Ye}=N;this.backendName==null&&this.backend;const Oe=(0,x.pI)(we,this.backendName);V.hu(Oe!=null,()=>`Cannot find registered kernel '${we}' for backend '${this.backendName}'`),Se=()=>{const me=this.backend.numDataIds();Re=Oe.kernelFunc({inputs:Pe,attrs:Ye,backend:this.backend});const Ue=Array.isArray(Re)?Re:[Re];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(we,me,Ue);const je=Ue.map(at=>at.rank!=null?at:this.makeTensorFromTensorInfo(at));if(Z){const at=this.getTensorsForGradient(we,Pe,je);C=this.saveTensorsForBackwardMode(at)}return je}}else{const{forwardFunc:we}=N,Pe=Ye=>{Z&&(C=Ye.map(Oe=>this.keep(this.clone(Oe))))};Se=()=>{const Ye=this.backend.numDataIds();Re=this.tidy(()=>we(this.backend,Pe));const Oe=Array.isArray(Re)?Re:[Re];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(M,Ye,Oe),Oe}}const{inputs:ee,attrs:k}=N,X=Fe(N)?null:N.backwardsFunc;let H;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?P=Se():(H=this.profiler.profileKernel(M,ee,()=>Se()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(H),P=H.outputs)}),Z&&this.addTapeNode(M,ee,P,X,C,k),this.state.profiling&&this.state.activeProfile.kernels.push({name:M,bytesAdded:this.state.numBytes-re,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(ee).map(we=>ee[we]!=null?ee[we].shape:null),outputShapes:P.map(we=>we.shape),kernelTimeMs:H.timeMs,extraInfo:H.extraInfo}),Array.isArray(Re)?P:P[0]}saveTensorsForBackwardMode(N){return N.map(C=>this.keep(this.clone(C)))}getTensorsForGradient(N,P,C){const Z=(0,x.uk)(N);if(Z!=null){const re=Z.inputsToSave||[],p=Z.outputsToSave||[];let Se;Z.saveAllInputs?(V.hu(Array.isArray(P),()=>"saveAllInputs is true, expected inputs to be an array."),Se=Object.keys(P).map(M=>P[M])):Se=re.map(M=>P[M]);const Re=C.filter((M,ee)=>p[ee]);return Se.concat(Re)}return[]}makeTensor(N,P,C,Z){if(N==null)throw new Error("Values passed to engine.makeTensor() are null");C=C||"float32",Z=Z||this.backend;let re=N;C==="string"&&V.HD(N[0])&&(re=N.map(Re=>Y.encodeString(Re)));const p=Z.write(re,P,C),Se=new ge.es(P,C,p,this.nextTensorId());if(this.trackTensor(Se,Z),C==="string"){const Re=this.state.tensorInfo.get(p),M=(0,V.Ub)(re);this.state.numBytes+=M-Re.bytes,Re.bytes=M}return Se}makeTensorFromDataId(N,P,C,Z){C=C||"float32";const re={dataId:N,shape:P,dtype:C};return this.makeTensorFromTensorInfo(re,Z)}makeTensorFromTensorInfo(N,P){const{dataId:C,shape:Z,dtype:re}=N,p=new ge.es(Z,re,C,this.nextTensorId());return this.trackTensor(p,P),p}makeVariable(N,P=!0,C,Z){C=C||this.nextVariableId().toString(),Z!=null&&Z!==N.dtype&&(N=N.cast(Z));const re=new ge._w(N,P,C,this.nextTensorId());if(this.state.registeredVariables[re.name]!=null)throw new Error(`Variable with name ${re.name} was already registered`);return this.state.registeredVariables[re.name]=re,this.incRef(re,this.backend),re}trackTensor(N,P){this.state.numTensors++,N.dtype==="string"&&this.state.numStringTensors++;let C=0;N.dtype!=="complex64"&&N.dtype!=="string"&&(C=N.size*V.bT(N.dtype)),this.state.numBytes+=C,this.state.tensorInfo.has(N.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(N.dataId,{backend:P||this.backend,dtype:N.dtype,shape:N.shape,bytes:C})),N instanceof ge._w||this.track(N)}incRef(N,P){this.trackTensor(N,P),this.backend.incRef(N.dataId)}removeDataId(N,P){this.state.tensorInfo.has(N)&&this.state.tensorInfo.get(N).backend===P&&(this.state.tensorInfo.delete(N),this.state.numDataBuffers--)}disposeTensor(N){if(!this.state.tensorInfo.has(N.dataId))return;const P=this.state.tensorInfo.get(N.dataId);if(this.state.numTensors--,N.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=P.bytes),N.dtype!=="complex64"&&N.dtype!=="string"){const C=N.size*V.bT(N.dtype);this.state.numBytes-=C}P.backend.disposeData(N.dataId)&&this.removeDataId(N.dataId,P.backend)}disposeVariables(){for(const N in this.state.registeredVariables){const P=this.state.registeredVariables[N];this.disposeVariable(P)}}disposeVariable(N){this.disposeTensor(N),this.state.registeredVariables[N.name]!=null&&delete this.state.registeredVariables[N.name]}memory(){const N=this.backend.memory();return N.numTensors=this.state.numTensors,N.numDataBuffers=this.state.numDataBuffers,N.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(N.unreliable=!0,N.reasons==null&&(N.reasons=[]),N.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),N}async profile(N){this.state.profiling=!0;const P=this.state.numBytes,C=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await N(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(Z=>Z.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-P,this.state.activeProfile.newTensors=this.state.numTensors-C;for(const Z of this.state.activeProfile.kernels)Z.kernelTimeMs=await Z.kernelTimeMs,Z.extraInfo=await Z.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(N,P,C,Z,re,p){const Se={id:this.state.nextTapeNodeId++,kernelName:N,inputs:P,outputs:C,saved:re},Re=(0,x.uk)(N);Re!=null&&(Z=Re.gradFunc),Z!=null&&(Se.gradient=M=>(M=M.map((ee,k)=>{if(ee==null){const X=C[k],H=V.wT(X.size,X.dtype);return this.makeTensor(H,X.shape,X.dtype)}return ee}),Z(M.length>1?M:M[0],re,p))),this.state.activeTape.push(Se)}keep(N){return N.kept=!0,N}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(N){const P={track:[],name:"unnamed scope",id:this.state.nextScopeId++};N&&(P.name=N),this.state.scopeStack.push(P),this.state.activeScope=P}endScope(N){const P=(0,$e.Vu)(N),C=new Set(P.map(re=>re.id));for(let re=0;re<this.state.activeScope.track.length;re++){const p=this.state.activeScope.track[re];!p.kept&&!C.has(p.id)&&p.dispose()}const Z=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],P.forEach(re=>{!re.kept&&re.scopeId===Z.id&&this.track(re)})}gradients(N,P,C,Z=!1){if(V.hu(P.length>0,()=>"gradients() received an empty list of xs."),C!=null&&C.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${C.dtype}'`);const re=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",N));V.hu(re instanceof ge.es,()=>"The result y returned by f() must be a tensor.");const p=b(this.state.activeTape,P,re);if(!Z&&p.length===0&&P.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const Se={};Se[re.id]=C??qe(re.shape),te(Se,p,M=>this.tidy(M),ye);const Re=P.map(M=>Se[M.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(M=>{for(const ee of M.saved)ee.dispose()}),this.state.activeTape=null),{value:re,grads:Re}})}customGrad(N){return V.hu(V.mf(N),()=>"The f passed in customGrad(f) must be a function."),(...P)=>{V.hu(P.every(Se=>Se instanceof ge.es),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let C;const Z={};P.forEach((Se,Re)=>{Z[Re]=Se});const re=(Se,Re)=>(C=N(...P,Re),V.hu(C.value instanceof ge.es,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),V.hu(V.mf(C.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),C.value),p=(Se,Re)=>{const M=C.gradFunc(Se,Re),ee=Array.isArray(M)?M:[M];V.hu(ee.length===P.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),V.hu(ee.every(X=>X instanceof ge.es),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const k={};return ee.forEach((X,H)=>{k[H]=()=>X}),k};return this.runKernelFunc({forwardFunc:re,backwardsFunc:p,inputs:Z})}}readSync(N){return this.state.tensorInfo.get(N).backend.readSync(N)}read(N){return this.state.tensorInfo.get(N).backend.read(N)}readToGPU(N,P){return this.state.tensorInfo.get(N).backend.readToGPU(N,P)}async time(N){const P=(0,Y.now)(),C=await this.backend.time(N);return C.wallMs=(0,Y.now)()-P,C}track(N){return this.state.activeScope!=null&&(N.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(N)),N}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ve;for(const N in this.registry)this.disposeRegisteredKernels(N),this.registry[N].dispose(),delete this.registry[N];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ge.nextTensorId=0,Ge.nextVariableId=0;function qe(z){const N=(0,V.p8)((0,V.NA)(z),"float32");return j.makeTensor(N,z,"float32")}function He(){const z=(0,R.D)();if(z._tfengine==null){const N=new he.qA(z);z._tfengine=new Ge(N)}return(0,he.iG)(z._tfengine.ENV),(0,ge.Vi)(()=>z._tfengine),z._tfengine}const j=He();function ye(z,N){const P={a:z,b:N};return j.runKernel(W.mm_,P)}},6650:function(st,ke,S){"use strict";S.d(ke,{OB:()=>Y,iG:()=>se,qA:()=>R});var u=S(9024);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const he="tfjsflags";class R{constructor(D){this.global=D,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=W,this.populateURLFlags()}setPlatform(D,b){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${D}.`)),this.platformName=D,this.platform=b}registerFlag(D,b,te){if(this.flagRegistry[D]={evaluationFn:b,setHook:te},this.urlFlags[D]!=null){const ge=this.urlFlags[D];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${D}: ${ge}.`),this.set(D,ge)}}async getAsync(D){return D in this.flags?this.flags[D]:(this.flags[D]=await this.evaluateFlag(D),this.flags[D])}get(D){if(D in this.flags)return this.flags[D];const b=this.evaluateFlag(D);if((0,u.tI)(b))throw new Error(`Flag ${D} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[D]=b,this.flags[D]}getNumber(D){return this.get(D)}getBool(D){return this.get(D)}getString(D){return this.get(D)}getFlags(){return this.flags}get features(){return this.flags}set(D,b){if(this.flagRegistry[D]==null)throw new Error(`Cannot set flag ${D} as it has not been registered.`);this.flags[D]=b,this.flagRegistry[D].setHook!=null&&this.flagRegistry[D].setHook(b)}evaluateFlag(D){if(this.flagRegistry[D]==null)throw new Error(`Cannot evaluate flag '${D}': no evaluation function found.`);return this.flagRegistry[D].evaluationFn()}setFlags(D){this.flags=Object.assign({},D)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const D=this.getQueryParams(this.global.location.search);he in D&&D[he].split(",").forEach(te=>{const[ge,$e]=te.split(":");this.urlFlags[ge]=I(ge,$e)})}}function W(J){const D={};return J.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(b,...te)=>(x(D,te[0],te[1]),te.join("="))),D}function x(J,D,b){J[decodeURIComponent(D)]=decodeURIComponent(b||"")}function I(J,D){const b=D.toLowerCase();return b==="true"||b==="false"?b==="true":`${+b}`===b?+b:D}function Y(){return V}let V=null;function se(J){V=J}},89:function(st,ke,S){"use strict";var u=S(6201),he=S(857),R=S(6650);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W=(0,R.OB)();W.registerFlag("DEBUG",()=>!1,x=>{x&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),W.registerFlag("IS_BROWSER",()=>he.isBrowser()),W.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),W.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),W.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),W.registerFlag("PROD",()=>!1),W.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>W.getBool("DEBUG")),W.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),W.registerFlag("IS_TEST",()=>!1),W.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>W.getBool("DEBUG")),W.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),W.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),W.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1)},2360:function(st,ke,S){"use strict";S.d(ke,{D:()=>he,R:()=>W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let u;function he(){if(u==null){let x;if(typeof window<"u")x=window;else if(typeof S.g<"u")x=S.g;else if(typeof process<"u")x=process;else if(typeof self<"u")x=self;else throw new Error("Could not find a global object");u=x}return u}function R(){const x=he();return x._tfGlobals==null&&(x._tfGlobals=new Map),x._tfGlobals}function W(x,I){const Y=R();if(Y.has(x))return Y.get(x);{const V=I();return Y.set(x,V),Y.get(x)}}},4531:function(st,ke,S){"use strict";S.d(ke,{B9:()=>ge,CQ:()=>Ve,Cn:()=>$e,N_:()=>qe,SR:()=>J,jq:()=>z,lu:()=>te,y3:()=>N});var u=S(6201),he=S(6650),R=S(1038),W=S(6802);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(){env().set("PROD",!0)}function I(){env().set("DEBUG",!0)}function Y(){env().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function V(C){(0,he.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(C+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}(0,R.FZ)(V);function se(){ENGINE.disposeVariables()}function J(){return u.BV}function D(){return ENGINE.memory()}function b(C){return ENGINE.profile(C)}function te(C,Z){return u.BV.tidy(C,Z)}function ge(C){(0,W.Vu)(C).forEach(re=>re.dispose())}function $e(C){return u.BV.keep(C)}function Fe(C){return ENGINE.time(C)}function Ve(C){return u.BV.setBackend(C)}function Ge(){return ENGINE.ready()}function qe(){return u.BV.backendName}function He(C){ENGINE.removeBackend(C)}function j(C){return ENGINE.findBackend(C)}function ye(C){return ENGINE.findBackendFactory(C)}function z(C,Z,re=1){return u.BV.registerBackend(C,Z,re)}function N(){return u.BV.backend}function P(C,Z){env().setPlatform(C,Z)}},4233:function(st,ke,S){"use strict";S.d(ke,{cb:()=>se,pn:()=>V});var u=S(6201),he=S(1038),R=S(9024);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W(D){return util.assert(util.isFunction(D),()=>"The f passed in grad(f) must be a function"),(b,te)=>{const ge=convertToTensor(b,"x","tf.grad","string_or_numeric"),$e=te!=null?convertToTensor(te,"dy","tf.grad"):null;return ENGINE.tidy(()=>{const{value:Fe,grads:Ve}=ENGINE.gradients(()=>D(ge),[ge],$e);return $e!=null&&util.assertShapesMatch(Fe.shape,$e.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),J(Ve),Ve[0]})}}function x(D){return util.assert(util.isFunction(D),()=>"The f passed in grads(f) must be a function"),(b,te)=>{util.assert(Array.isArray(b),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const ge=convertToTensorArray(b,"args","tf.grads","string_or_numeric"),$e=te!=null?convertToTensor(te,"dy","tf.grads"):null;return ENGINE.tidy(()=>{const{value:Fe,grads:Ve}=ENGINE.gradients(()=>D(...ge),ge,$e);return $e!=null&&util.assertShapesMatch(Fe.shape,$e.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),J(Ve),Ve})}}function I(D){return util.assert(util.isFunction(D),()=>"The f passed in valueAndGrad(f) must be a function"),(b,te)=>{util.assert(b instanceof Tensor,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),util.assert(te==null||te instanceof Tensor,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:ge,value:$e}=ENGINE.gradients(()=>D(b),[b],te);return J(ge),{grad:ge[0],value:$e}}}function Y(D){return util.assert(util.isFunction(D),()=>"The f passed in valueAndGrads(f) must be a function"),(b,te)=>{util.assert(Array.isArray(b)&&b.every($e=>$e instanceof Tensor),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),util.assert(te==null||te instanceof Tensor,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const ge=ENGINE.gradients(()=>D(...b),b,te);return te!=null&&util.assertShapesMatch(ge.value.shape,te.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),J(ge.grads),ge}}function V(D,b){R.hu(R.mf(D),()=>"The f passed in variableGrads(f) must be a function"),R.hu(b==null||Array.isArray(b)&&b.every(He=>He instanceof he._w),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const te=b!=null;if(!te){b=[];for(const He in u.BV.registeredVariables)b.push(u.BV.registeredVariables[He])}const ge=te?b.filter(He=>!He.trainable):null,$e=b.length;b=b.filter(He=>He.trainable),R.hu(b.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${$e} variables is trainable.`);const Fe=!0,{value:Ve,grads:Ge}=u.BV.gradients(D,b,null,Fe);R.hu(Ge.some(He=>He!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),R.hu(Ve.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${Ve.rank} tensor`);const qe={};return b.forEach((He,j)=>{Ge[j]!=null&&(qe[He.name]=Ge[j])}),ge?.forEach(He=>qe[He.name]=null),{value:Ve,grads:qe}}function se(D){return u.BV.customGrad(D)}function J(D){if(D.filter(te=>te==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}},4028:function(st,ke,S){"use strict";S.d(ke,{w:()=>he});var u=S(2891);class he{static join(x){return new he(x).slice()}constructor(x){if(this.shards=[],this.previousShardIndex=0,x==null||(x instanceof Array||(x=[x]),x=x.map(Y=>u.isTypedArray(Y)?Y.buffer:Y),x.length===0))return;this.bufferUniformSize=x[0].byteLength;let I=0;for(let Y=0;Y<x.length;Y++){const V=x[Y];Y!==x.length-1&&V.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const se=I+V.byteLength;this.shards.push({buffer:V,start:I,end:se}),I=se}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(x=0,I=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(x=isNaN(Number(x))?0:x,I=isNaN(Number(I))?0:I,x=Math.max(0,x),I=Math.min(this.byteLength,I),I<=x)return new ArrayBuffer(0);const Y=this.findShardForByte(x);if(Y===-1)throw new Error(`Could not find start shard for byte ${x}`);const V=I-x,se=new ArrayBuffer(V),J=new Uint8Array(se);let D=0;for(let b=Y;b<this.shards.length;b++){const te=this.shards[b],$e=x+D-te.start,Fe=D,Ge=Math.min(I,te.end)-te.start,qe=new Uint8Array(te.buffer,$e,Ge-$e);if(J.set(qe,Fe),D+=qe.length,I<te.end)break}return se}findShardForByte(x){if(this.shards.length===0||x<0||x>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(x/this.bufferUniformSize),this.previousShardIndex;function I(V){return x<V.start?-1:x>=V.end?1:0}if(I(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const Y=R(this.shards,I);return Y===-1?-1:(this.previousShardIndex=Y,this.previousShardIndex)}}function R(W,x){let I=0,Y=W.length;for(;I<=Y;){const V=Math.floor((Y-I)/2)+I,se=x(W[V]);if(se===0)return V;se<0?Y=V:I=V+1}return-1}},2545:function(st,ke,S){"use strict";S.d(ke,{ns:()=>te,y$:()=>Ve});var u=S(89),he=S(6650),R=S(1146),W=S(8933),x=S(4028);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I="tensorflowjs",Y=1,V="models_store",se="model_info_store";async function J(){const Ge=D();return new Promise((qe,He)=>{const j=Ge.deleteDatabase(I);j.onsuccess=()=>qe(),j.onerror=ye=>He(ye)})}function D(){if(!(0,he.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const Ge=typeof window>"u"?self:window,qe=Ge.indexedDB||Ge.mozIndexedDB||Ge.webkitIndexedDB||Ge.msIndexedDB||Ge.shimIndexedDB;if(qe==null)throw new Error("The current browser does not appear to support IndexedDB.");return qe}function b(Ge){const qe=Ge.result;qe.createObjectStore(V,{keyPath:"modelPath"}),qe.createObjectStore(se,{keyPath:"modelPath"})}class te{constructor(qe){if(this.indexedDB=D(),qe==null||!qe)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=qe}async save(qe){if(qe.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,qe)}async load(){return this.databaseAction(this.modelPath)}databaseAction(qe,He){return new Promise((j,ye)=>{const z=this.indexedDB.open(I,Y);z.onupgradeneeded=()=>b(z),z.onsuccess=()=>{const N=z.result;if(He==null){const P=N.transaction(V,"readonly"),Z=P.objectStore(V).get(this.modelPath);Z.onsuccess=()=>{if(Z.result==null)return N.close(),ye(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));j(Z.result.modelArtifacts)},Z.onerror=re=>(N.close(),ye(Z.error)),P.oncomplete=()=>N.close()}else{He.weightData=x.w.join(He.weightData);const P=(0,R.Q)(He),C=N.transaction(se,"readwrite");let Z=C.objectStore(se),re;try{re=Z.put({modelPath:this.modelPath,modelArtifactsInfo:P})}catch(Se){return ye(Se)}let p;re.onsuccess=()=>{p=N.transaction(V,"readwrite");const Se=p.objectStore(V);let Re;try{Re=Se.put({modelPath:this.modelPath,modelArtifacts:He,modelArtifactsInfo:P})}catch(M){return ye(M)}Re.onsuccess=()=>j({modelArtifactsInfo:P}),Re.onerror=M=>{Z=C.objectStore(se);const ee=Z.delete(this.modelPath);ee.onsuccess=()=>(N.close(),ye(Re.error)),ee.onerror=k=>(N.close(),ye(Re.error))}},re.onerror=Se=>(N.close(),ye(re.error)),C.oncomplete=()=>{p==null?N.close():p.oncomplete=()=>N.close()}}},z.onerror=N=>ye(z.error)})}}te.URL_SCHEME="indexeddb://";const ge=Ge=>(0,he.OB)().getBool("IS_BROWSER")&&!Array.isArray(Ge)&&Ge.startsWith(te.URL_SCHEME)?$e(Ge.slice(te.URL_SCHEME.length)):null;W.U3.registerSaveRouter(ge),W.U3.registerLoadRouter(ge);function $e(Ge){return new te(Ge)}function Fe(Ge){return Ge.startsWith(te.URL_SCHEME)?Ge.slice(te.URL_SCHEME.length):Ge}class Ve{constructor(){this.indexedDB=D()}async listModels(){return new Promise((qe,He)=>{const j=this.indexedDB.open(I,Y);j.onupgradeneeded=()=>b(j),j.onsuccess=()=>{const ye=j.result,z=ye.transaction(se,"readonly"),P=z.objectStore(se).getAll();P.onsuccess=()=>{const C={};for(const Z of P.result)C[Z.modelPath]=Z.modelArtifactsInfo;qe(C)},P.onerror=C=>(ye.close(),He(P.error)),z.oncomplete=()=>ye.close()},j.onerror=ye=>He(j.error)})}async removeModel(qe){return qe=Fe(qe),new Promise((He,j)=>{const ye=this.indexedDB.open(I,Y);ye.onupgradeneeded=()=>b(ye),ye.onsuccess=()=>{const z=ye.result,N=z.transaction(se,"readwrite"),P=N.objectStore(se),C=P.get(qe);let Z;C.onsuccess=()=>{if(C.result==null)return z.close(),j(new Error(`Cannot find model with path '${qe}' in IndexedDB.`));{const re=P.delete(qe),p=()=>{Z=z.transaction(V,"readwrite");const Re=Z.objectStore(V).delete(qe);Re.onsuccess=()=>He(C.result.modelArtifactsInfo),Re.onerror=M=>j(C.error)};re.onsuccess=p,re.onerror=Se=>(p(),z.close(),j(C.error))}},C.onerror=re=>(z.close(),j(C.error)),N.oncomplete=()=>{Z==null?z.close():Z.oncomplete=()=>z.close()}},ye.onerror=z=>j(ye.error)})}}},7884:function(st,ke,S){"use strict";S.r(ke),S.d(ke,{getSaveHandlers:()=>I.yB,decodeWeightsStream:()=>x.r,browserFiles:()=>Fe,getModelArtifactsForJSONSync:()=>x.ji,encodeWeights:()=>x.yz,getLoadHandlers:()=>I.rM,registerSaveRouter:()=>I.tf,browserHTTPRequest:()=>Re,loadWeights:()=>ye,getModelArtifactsInfoForJSON:()=>x.Q,getWeightSpecs:()=>x.hu,registerLoadRouter:()=>I.pS,withSaveHandler:()=>we,moveModel:()=>Ye.Ny,fromMemory:()=>X,getModelArtifactsForJSON:()=>x.jN,isHTTPScheme:()=>re,http:()=>Se,weightsLoaderFactory:()=>z,copyModel:()=>Ye.ID,CompositeArrayBuffer:()=>Y.w,decodeWeights:()=>x.dI,listModels:()=>Ye.h1,fromMemorySync:()=>H,removeModel:()=>Ye.gw,withSaveHandlerSync:()=>Pe,concatenateArrayBuffers:()=>x.JY});var u=S(2545),he=S(4655),R=S(89),W=S(6650),x=S(1146),I=S(8933),Y=S(4028);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V="model",se=".json",J=".weights.bin";function D(Oe){return new Promise(me=>setTimeout(me)).then(Oe)}class b{constructor(me){if(!(0,W.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");me.startsWith(b.URL_SCHEME)&&(me=me.slice(b.URL_SCHEME.length)),(me==null||me.length===0)&&(me=V),this.modelJsonFileName=me+se,this.weightDataFileName=me+J}async save(me){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const Ue=Y.w.join(me.weightData),je=window.URL.createObjectURL(new Blob([Ue],{type:"application/octet-stream"}));if(me.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const at=[{paths:["./"+this.weightDataFileName],weights:me.weightSpecs}],rt=(0,x.Yd)(me,at),Qe=window.URL.createObjectURL(new Blob([JSON.stringify(rt)],{type:"application/json"})),mt=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(mt.download=this.modelJsonFileName,mt.href=Qe,await D(()=>mt.dispatchEvent(new MouseEvent("click"))),me.weightData!=null){const yt=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;yt.download=this.weightDataFileName,yt.href=je,await D(()=>yt.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:(0,x.Q)(me)}}}}b.URL_SCHEME="downloads://";class te{constructor(me){if(me==null||me.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${me}`);this.jsonFile=me[0],this.weightsFiles=me.slice(1)}async load(){return new Promise((me,Ue)=>{const je=new FileReader;je.onload=at=>{const rt=JSON.parse(at.target.result),Qe=rt.modelTopology;if(Qe==null){Ue(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(rt.weightsManifest==null){Ue(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){me({modelTopology:Qe});return}const yt=(0,x.jN)(rt,oe=>this.loadWeights(oe));me(yt)},je.onerror=at=>Ue(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),je.readAsText(this.jsonFile)})}loadWeights(me){const Ue=[],je=[];for(const Qe of me)Ue.push(...Qe.weights),je.push(...Qe.paths);const at=this.checkManifestAndWeightFiles(me),rt=je.map(Qe=>this.loadWeightsFile(Qe,at[Qe]));return Promise.all(rt).then(Qe=>[Ue,Qe])}loadWeightsFile(me,Ue){return new Promise((je,at)=>{const rt=new FileReader;rt.onload=Qe=>{const mt=Qe.target.result;je(mt)},rt.onerror=Qe=>at(`Failed to weights data from file of path '${me}'.`),rt.readAsArrayBuffer(Ue)})}checkManifestAndWeightFiles(me){const Ue=[],je=this.weightsFiles.map(rt=>(0,x.EZ)(rt.name)),at={};for(const rt of me)rt.paths.forEach(Qe=>{const mt=(0,x.EZ)(Qe);if(Ue.indexOf(mt)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${mt}'`);if(Ue.push(mt),je.indexOf(mt)===-1)throw new Error(`Weight file with basename '${mt}' is not provided.`);at[Qe]=this.weightsFiles[je.indexOf(mt)]});if(Ue.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${Ue.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return at}}const ge=Oe=>(0,W.OB)().getBool("IS_BROWSER")&&!Array.isArray(Oe)&&Oe.startsWith(b.URL_SCHEME)?$e(Oe.slice(b.URL_SCHEME.length)):null;I.U3.registerSaveRouter(ge);function $e(Oe="model"){return new b(Oe)}function Fe(Oe){return new te(Oe)}var Ve=S(9024);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(Oe,me,Ue,je){Qe(Oe),Ue=Ue??0,je=je??1,mt(Ue,je);let at=0;const rt=yt=>(yt.then(oe=>{const Be=Ue+ ++at/Oe.length*(je-Ue);return me(Be),oe}),yt);function Qe(yt){(0,Ve.hu)(yt!=null&&Array.isArray(yt)&&yt.length>0,()=>"promises must be a none empty array")}function mt(yt,oe){(0,Ve.hu)(yt>=0&&yt<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${yt}`),(0,Ve.hu)(oe>=0&&oe<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${oe}`),(0,Ve.hu)(oe>=yt,()=>`startFraction must be no more than endFraction, but got startFraction ${yt} and endFraction ${oe}`)}return Promise.all(Oe.map(rt))}var qe=S(1864);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function He(Oe,me){me==null&&(me={});const Ue=me.fetchFunc==null?(0,W.OB)().platform.fetch:me.fetchFunc,je=Oe.map(Xe=>Ue(Xe,me.requestInit,{isBinary:!0})),mt=(me.onProgress==null?await Promise.all(je):await Ge(je,me.onProgress,0,.5)).map(Xe=>Xe.arrayBuffer());return me.onProgress==null?await Promise.all(mt):await Ge(mt,me.onProgress,.5,1)}function j(Oe,me){var Ue;const je=me.fetchFunc==null?(0,W.OB)().platform.fetch:me.fetchFunc;let at=0,rt;return(Ue=me.onProgress)===null||Ue===void 0||Ue.call(me,0),new ReadableStream({pull:async Qe=>{for(var mt;at<Oe.length;){rt||(rt=(await je(Oe[at],me.requestInit,{isBinary:!0})).body.getReader());const{done:yt,value:oe}=await rt.read();if(yt){at++,rt=void 0,(mt=me.onProgress)===null||mt===void 0||mt.call(me,at/Oe.length);continue}Qe.enqueue(oe);return}Qe.close()}})}async function ye(Oe,me="",Ue,je){return z(Qe=>He(Qe,{requestInit:je}))(Oe,me,Ue)}function z(Oe){return async(me,Ue="",je)=>{const at=me.map(()=>!1),rt={},Qe=je!=null?je.map(()=>!1):[],mt=[];if(me.forEach((bt,Ct)=>{let It=0;bt.weights.forEach(Ot=>{const zt="quantization"in Ot?Ot.quantization.dtype:Ot.dtype,Yt=qe.J[zt]*Ve.NA(Ot.shape),ln=()=>{at[Ct]=!0,rt[Ct]==null&&(rt[Ct]=[]),rt[Ct].push({manifestEntry:Ot,groupOffset:It,sizeBytes:Yt})};je!=null?je.forEach((cn,mn)=>{cn===Ot.name&&(ln(),Qe[mn]=!0)}):ln(),mt.push(Ot.name),It+=Yt})}),!Qe.every(bt=>bt)){const bt=je.filter((Ct,It)=>!Qe[It]);throw new Error(`Could not find weights in manifest with names: ${bt.join(", ")}. 
Manifest JSON has weights with names: ${mt.join(", ")}.`)}const yt=at.reduce((bt,Ct,It)=>(Ct&&bt.push(It),bt),[]),oe=[];yt.forEach(bt=>{me[bt].paths.forEach(Ct=>{const It=Ue+(Ue.endsWith("/")?"":"/")+Ct;oe.push(It)})});const Be=await Oe(oe),Xe={};let ot=0;return yt.forEach(bt=>{const Ct=me[bt].paths.length,It=new Y.w(Be.slice(ot,ot+Ct));rt[bt].forEach(zt=>{const Yt=It.slice(zt.groupOffset,zt.groupOffset+zt.sizeBytes),ln=(0,x.dI)(Yt,[zt.manifestEntry]);for(const cn in ln)Xe[cn]=ln[cn]}),ot+=Ct}),Xe}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N="application/octet-stream",P="application/json";class C{constructor(me,Ue){if(this.DEFAULT_METHOD="POST",Ue==null&&(Ue={}),this.weightPathPrefix=Ue.weightPathPrefix,this.weightUrlConverter=Ue.weightUrlConverter,Ue.fetchFunc!=null?((0,Ve.hu)(typeof Ue.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=Ue.fetchFunc):this.fetch=(0,W.OB)().platform.fetch,(0,Ve.hu)(me!=null&&me.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(me)&&(0,Ve.hu)(me.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${me.length}).`),this.path=me,Ue.requestInit!=null&&Ue.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=Ue.requestInit||{},this.loadOptions=Ue}async save(me){if(me.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const Ue=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);Ue.body=new FormData;const je=[{paths:["./model.weights.bin"],weights:me.weightSpecs}],at=(0,x.Yd)(me,je);if(Ue.body.append("model.json",new Blob([JSON.stringify(at)],{type:P}),"model.json"),me.weightData!=null){const Qe=Y.w.join(me.weightData);Ue.body.append("model.weights.bin",new Blob([Qe],{type:N}),"model.weights.bin")}const rt=await this.fetch(this.path,Ue);if(rt.ok)return{modelArtifactsInfo:(0,x.Q)(me),responses:[rt]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${rt.status}.`)}async loadModelJSON(){const me=await this.fetch(this.path,this.requestInit);if(!me.ok)throw new Error(`Request to ${this.path} failed with status code ${me.status}. Please verify this URL points to the model JSON of the model to load.`);let Ue;try{Ue=await me.json()}catch{let Qe=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?Qe+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":Qe+=" Please make sure the server is serving valid JSON for this request.",new Error(Qe)}const je=Ue.modelTopology,at=Ue.weightsManifest;if(je==null&&at==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ue}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const me=await this.loadModelJSON();return(0,x.jN)(me,Ue=>this.loadWeights(Ue))}async loadStream(){const me=await this.loadModelJSON(),Ue=await this.getWeightUrls(me.weightsManifest),je=(0,x.hu)(me.weightsManifest),at=()=>j(Ue,this.loadOptions);return Object.assign(Object.assign({},me),{weightSpecs:je,getWeightStream:at})}async getWeightUrls(me){const Ue=Array.isArray(this.path)?this.path[1]:this.path,[je,at]=Z(Ue),rt=this.weightPathPrefix||je,Qe=[],mt=[];for(const yt of me)for(const oe of yt.paths)this.weightUrlConverter!=null?mt.push(this.weightUrlConverter(oe)):Qe.push(rt+oe+at);return this.weightUrlConverter&&Qe.push(...await Promise.all(mt)),Qe}async loadWeights(me){const Ue=await this.getWeightUrls(me),je=(0,x.hu)(me),at=await He(Ue,this.loadOptions);return[je,at]}}C.URL_SCHEME_REGEX=/^https?:\/\//;function Z(Oe){const me=Oe.lastIndexOf("/"),Ue=Oe.lastIndexOf("?"),je=Oe.substring(0,me),at=Ue>me?Oe.substring(Ue):"";return[je+"/",at]}function re(Oe){return Oe.match(C.URL_SCHEME_REGEX)!=null}const p=(Oe,me)=>{if(typeof fetch>"u"&&(me==null||me.fetchFunc==null))return null;{let Ue=!0;if(Array.isArray(Oe)?Ue=Oe.every(je=>re(je)):Ue=re(Oe),Ue)return Se(Oe,me)}return null};I.U3.registerSaveRouter(p),I.U3.registerLoadRouter(p);function Se(Oe,me){return new C(Oe,me)}function Re(Oe,me){return Se(Oe,me)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M{constructor(me){this.modelArtifacts=me}load(){return this.modelArtifacts}}class ee{constructor(me){this.saveHandler=me}save(me){return this.saveHandler(me)}}class k{constructor(me){me.load&&(this.load=()=>Promise.resolve(me.load())),me.save&&(this.save=Ue=>Promise.resolve(me.save(Ue)))}}function X(Oe,me,Ue,je){const at=arguments;return new k(H(...at))}function H(Oe,me,Ue,je){return arguments.length===1?Oe.modelTopology!=null||Oe.weightSpecs!=null?new M(Oe):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new M({modelTopology:Oe})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new M({modelTopology:Oe,weightSpecs:me,weightData:Ue,trainingConfig:je}))}function we(Oe){return new ee(Oe)}function Pe(Oe){return new ee(Oe)}var Ye=S(6819);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},1146:function(st,ke,S){"use strict";S.d(ke,{EZ:()=>ye,JY:()=>j,Q:()=>C,Yd:()=>z,_n:()=>qe,dI:()=>J,hu:()=>Z,jN:()=>P,ji:()=>N,n7:()=>He,r:()=>$e,yz:()=>se});var u=S(1788),he=S(4594),R=S(9024),W=S(1864),x=S(4028),I=S(4531),Y=S(6650);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V=4;async function se(M,ee){const k=[],X=[],H=Array.isArray(M)?M.map(Pe=>Pe.name):Object.keys(M);for(let Pe=0;Pe<H.length;++Pe){const Ye=H[Pe],Oe=Array.isArray(M)?M[Pe].tensor:M[Ye];if(Oe.dtype!=="float32"&&Oe.dtype!=="int32"&&Oe.dtype!=="bool"&&Oe.dtype!=="string"&&Oe.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${Ye}': ${Oe.dtype}`);const me={name:Ye,shape:Oe.shape,dtype:Oe.dtype};if(Oe.dtype==="string"){const Ue=new Promise(async je=>{const at=await Oe.bytes(),rt=at.reduce((yt,oe)=>yt+oe.length,0)+V*at.length,Qe=new Uint8Array(rt);let mt=0;for(let yt=0;yt<at.length;yt++){const oe=at[yt],Be=new Uint8Array(new Uint32Array([oe.length]).buffer);Qe.set(Be,mt),mt+=V,Qe.set(oe,mt),mt+=oe.length}je(Qe)});X.push(Ue)}else X.push(Oe.data());ee!=null&&(me.group=ee),k.push(me)}const we=await Promise.all(X);return{data:Fe(we),specs:k}}function J(M,ee){const k=new x.w(M),X={};let H=0;for(const we of ee){const Pe=D(we,(Ye,Oe)=>k.slice(H+Ye,H+Oe));X[we.name]=te(we,k.slice(H,H+Pe)),H+=Pe}return X}function D(M,ee){const k=(0,R.NA)(M.shape);let X;if("quantization"in M){const H=M.quantization;X=W.J[H.dtype]}else if(M.dtype==="string"){let H=0;for(let we=0;we<k;we++)H+=V+new Uint32Array(ee(H,H+V))[0];return H}else X=W.J[M.dtype];return k*X}async function b(M,ee){const k=(0,R.NA)(M.shape);let X;if("quantization"in M){const H=M.quantization;X=W.J[H.dtype]}else if(M.dtype==="string"){let H=0;for(let we=0;we<k;we++)H+=V+new Uint32Array(await ee(H,H+V))[0];return H}else X=W.J[M.dtype];return k*X}function te(M,ee){const k=M.name,X=M.dtype,H=M.shape,we=(0,R.NA)(H);let Pe,Ye=0;if("quantization"in M){const Oe=M.quantization;if(Oe.dtype==="uint8"||Oe.dtype==="uint16"){if(!("min"in Oe&&"scale"in Oe))throw new Error(`Weight ${M.name} with quantization ${Oe.dtype} doesn't have corresponding metadata min and scale.`)}else if(Oe.dtype==="float16"){if(X!=="float32")throw new Error(`Weight ${M.name} is quantized with ${Oe.dtype} which only supports weights of type float32 not ${X}.`)}else throw new Error(`Weight ${M.name} has unknown quantization dtype ${Oe.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const me=W.J[Oe.dtype],Ue=Oe.dtype==="uint8"?new Uint8Array(ee):new Uint16Array(ee);if(X==="float32")if(Oe.dtype==="uint8"||Oe.dtype==="uint16"){Pe=new Float32Array(Ue.length);for(let je=0;je<Ue.length;je++){const at=Ue[je];Pe[je]=at*Oe.scale+Oe.min}}else if(Oe.dtype==="float16")Pe=Re()(Ue);else throw new Error(`Unsupported quantization type ${Oe.dtype} for weight type float32.`);else if(X==="int32"){if(Oe.dtype!=="uint8"&&Oe.dtype!=="uint16")throw new Error(`Unsupported quantization type ${Oe.dtype} for weight type int32.`);Pe=new Int32Array(Ue.length);for(let je=0;je<Ue.length;je++){const at=Ue[je];Pe[je]=Math.round(at*Oe.scale+Oe.min)}}else throw new Error(`Unsupported dtype in weight '${k}': ${X}`);Ye+=we*me}else if(X==="string"){const Oe=(0,R.NA)(M.shape);Pe=[];for(let me=0;me<Oe;me++){const Ue=new Uint32Array(ee.slice(Ye,Ye+V))[0];Ye+=V;const je=new Uint8Array(ee.slice(Ye,Ye+Ue));Pe.push(je),Ye+=Ue}}else{const Oe=W.J[X];if(X==="float32")Pe=new Float32Array(ee);else if(X==="int32")Pe=new Int32Array(ee);else if(X==="bool")Pe=new Uint8Array(ee);else if(X==="complex64"){Pe=new Float32Array(ee);const me=new Float32Array(Pe.length/2),Ue=new Float32Array(Pe.length/2);for(let Qe=0;Qe<me.length;Qe++)me[Qe]=Pe[Qe*2],Ue[Qe]=Pe[Qe*2+1];const je=(0,he.X)(me,H,"float32"),at=(0,he.X)(Ue,H,"float32"),rt=(0,u.P)(je,at);return je.dispose(),at.dispose(),rt}else throw new Error(`Unsupported dtype in weight '${k}': ${X}`);Ye+=we*Oe}return(0,he.X)(Pe,H,X)}async function ge(M,ee,k){let X=new Uint8Array(ee);for(;X.byteLength<k;){const{done:H,value:we}=await M.read();if(H&&we==null){const Ye=k-X.byteLength;throw new Error(`Reader is done but ${Ye} bytes are still expected`)}const Pe=new Uint8Array(X.length+we.byteLength);Pe.set(X,0),Pe.set(new Uint8Array(we),X.length),X=Pe}return X.buffer}async function $e(M,ee){const k={},X=M.getReader();let H=new ArrayBuffer(0);for(const we of ee){const Pe=await b(we,async(me,Ue)=>(H=await ge(X,H,Ue),H.slice(me,Ue)));H=await ge(X,H,Pe);const Ye=H.slice(0,Pe);H=H.slice(Pe);const Oe=te(we,Ye);if(k[we.name]=Oe,(0,I.N_)()==="webgpu"){const me=(0,I.y3)();"uploadToGPU"in me&&(0,R.NA)(Oe.shape)>=(0,Y.OB)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&me.uploadToGPU(Oe.dataId)}}return k}function Fe(M){if(M===null)throw new Error(`Invalid input value: ${JSON.stringify(M)}`);let ee=0;const k=[];M.forEach(we=>{if(ee+=we.byteLength,k.push(we.byteLength===we.buffer.byteLength?we:new we.constructor(we)),!(we instanceof Float32Array||we instanceof Int32Array||we instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${we.constructor.name}`)});const X=new Uint8Array(ee);let H=0;return k.forEach(we=>{X.set(new Uint8Array(we.buffer),H),H+=we.byteLength}),X.buffer}const Ve=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Ge(M){return Ve?Buffer.byteLength(M,"utf8"):new Blob([M]).size}function qe(M){if(Ve)return Buffer.from(M).toString("base64");const ee=new Uint8Array(M);let k="";for(let X=0,H=ee.length;X<H;X++)k+=String.fromCharCode(ee[X]);return btoa(k)}function He(M){if(Ve){const X=Buffer.from(M,"base64");return X.buffer.slice(X.byteOffset,X.byteOffset+X.byteLength)}const ee=atob(M),k=new Uint8Array(ee.length);for(let X=0;X<ee.length;++X)k.set([ee.charCodeAt(X)],X);return k.buffer}function j(M){return x.w.join(M)}function ye(M){const ee="/";for(M=M.trim();M.endsWith(ee);)M=M.slice(0,M.length-1);const k=M.split(ee);return k[k.length-1]}function z(M,ee){const k={modelTopology:M.modelTopology,format:M.format,generatedBy:M.generatedBy,convertedBy:M.convertedBy,weightsManifest:ee};return M.signature!=null&&(k.signature=M.signature),M.userDefinedMetadata!=null&&(k.userDefinedMetadata=M.userDefinedMetadata),M.modelInitializer!=null&&(k.modelInitializer=M.modelInitializer),M.initializerSignature!=null&&(k.initializerSignature=M.initializerSignature),M.trainingConfig!=null&&(k.trainingConfig=M.trainingConfig),k}function N(M,ee,k){const X={modelTopology:M.modelTopology,format:M.format,generatedBy:M.generatedBy,convertedBy:M.convertedBy};if(M.trainingConfig!=null&&(X.trainingConfig=M.trainingConfig),M.weightsManifest!=null){if(!ee)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!k)throw new Error("modelJSON has weightsManifest but weightData is null");X.weightSpecs=ee,X.weightData=k}return M.signature!=null&&(X.signature=M.signature),M.userDefinedMetadata!=null&&(X.userDefinedMetadata=M.userDefinedMetadata),M.modelInitializer!=null&&(X.modelInitializer=M.modelInitializer),M.initializerSignature!=null&&(X.initializerSignature=M.initializerSignature),X}async function P(M,ee){let k,X;return M.weightsManifest!=null&&([k,X]=await ee(M.weightsManifest)),N(M,k,X)}function C(M){if(M.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:M.modelTopology==null?0:Ge(JSON.stringify(M.modelTopology)),weightSpecsBytes:M.weightSpecs==null?0:Ge(JSON.stringify(M.weightSpecs)),weightDataBytes:M.weightData==null?0:new x.w(M.weightData).byteLength}}function Z(M){const ee=[];for(const k of M)ee.push(...k.weights);return ee}function re(){const M=k=>{let X=k<<13,H=0;for(;(X&8388608)===0;)H-=8388608,X<<=1;return X&=-8388609,H+=947912704,X|H},ee=new Uint32Array(2048);ee[0]=0;for(let k=1;k<1024;k++)ee[k]=M(k);for(let k=1024;k<2048;k++)ee[k]=939524096+(k-1024<<13);return ee}function p(){const M=new Uint32Array(64);M[0]=0,M[31]=1199570944,M[32]=2147483648,M[63]=3347054592;for(let ee=1;ee<31;ee++)M[ee]=ee<<23;for(let ee=33;ee<63;ee++)M[ee]=2147483648+(ee-32<<23);return M}function Se(){const M=new Uint32Array(64);for(let ee=0;ee<64;ee++)M[ee]=1024;return M[0]=M[32]=0,M}function Re(){const M=re(),ee=p(),k=Se();return X=>{const H=new ArrayBuffer(4*X.length),we=new Uint32Array(H);for(let Pe=0;Pe<X.length;Pe++){const Ye=X[Pe],Oe=M[k[Ye>>10]+(Ye&1023)]+ee[Ye>>10];we[Pe]=Oe}return new Float32Array(H)}}},4655:function(st,ke,S){"use strict";S.d(ke,{Ew:()=>qe,JL:()=>ye});var u=S(89),he=S(6650),R=S(9024),W=S(1146),x=S(4028),I=S(8933);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y="/",V="tensorflowjs_models",se="info",J="model_topology",D="weight_specs",b="weight_data",te="model_metadata";function ge(){if(!env().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("purgeLocalStorageModels() cannot proceed because local storage is unavailable in the current environment.");const z=window.localStorage,N=[];for(let P=0;P<z.length;++P){const C=z.key(P),Z=V+Y;if(C.startsWith(Z)&&C.length>Z.length){z.removeItem(C);const re=Ve(C);N.indexOf(re)===-1&&N.push(re)}}return N}function $e(z){return{info:[V,z,se].join(Y),topology:[V,z,J].join(Y),weightSpecs:[V,z,D].join(Y),weightData:[V,z,b].join(Y),modelMetadata:[V,z,te].join(Y)}}function Fe(z){for(const N of Object.values(z))window.localStorage.removeItem(N)}function Ve(z){const N=z.split(Y);if(N.length<3)throw new Error(`Invalid key format: ${z}`);return N.slice(1,N.length-1).join(Y)}function Ge(z){return z.startsWith(qe.URL_SCHEME)?z.slice(qe.URL_SCHEME.length):z}class qe{constructor(N){if(!(0,he.OB)().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,N==null||!N)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=N,this.keys=$e(this.modelPath)}async save(N){if(N.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const P=JSON.stringify(N.modelTopology),C=JSON.stringify(N.weightSpecs),Z=(0,W.Q)(N),re=x.w.join(N.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(Z)),this.LS.setItem(this.keys.topology,P),this.LS.setItem(this.keys.weightSpecs,C),this.LS.setItem(this.keys.weightData,(0,W._n)(re));const p={format:N.format,generatedBy:N.generatedBy,convertedBy:N.convertedBy,signature:N.signature!=null?N.signature:void 0,userDefinedMetadata:N.userDefinedMetadata!=null?N.userDefinedMetadata:void 0,modelInitializer:N.modelInitializer!=null?N.modelInitializer:void 0,initializerSignature:N.initializerSignature!=null?N.initializerSignature:void 0,trainingConfig:N.trainingConfig!=null?N.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(p)),{modelArtifactsInfo:Z}}catch{throw Fe(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${Z.modelTopologyBytes}, weightSpecsBytes=${Z.weightSpecsBytes}, weightDataBytes=${Z.weightDataBytes}.`)}}}async load(){const N=JSON.parse(this.LS.getItem(this.keys.info));if(N==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(N.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const P={},C=JSON.parse(this.LS.getItem(this.keys.topology));if(C==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);P.modelTopology=C;const Z=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(Z==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);P.weightSpecs=Z;const re=this.LS.getItem(this.keys.modelMetadata);if(re!=null){const Se=JSON.parse(re);P.format=Se.format,P.generatedBy=Se.generatedBy,P.convertedBy=Se.convertedBy,Se.signature!=null&&(P.signature=Se.signature),Se.userDefinedMetadata!=null&&(P.userDefinedMetadata=Se.userDefinedMetadata),Se.modelInitializer!=null&&(P.modelInitializer=Se.modelInitializer),Se.initializerSignature!=null&&(P.initializerSignature=Se.initializerSignature),Se.trainingConfig!=null&&(P.trainingConfig=Se.trainingConfig)}const p=this.LS.getItem(this.keys.weightData);if(p==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return P.weightData=(0,W.n7)(p),P}}qe.URL_SCHEME="localstorage://";const He=z=>(0,he.OB)().getBool("IS_BROWSER")&&!Array.isArray(z)&&z.startsWith(qe.URL_SCHEME)?j(z.slice(qe.URL_SCHEME.length)):null;I.U3.registerSaveRouter(He),I.U3.registerLoadRouter(He);function j(z){return new qe(z)}class ye{constructor(){(0,R.hu)((0,he.OB)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),(0,R.hu)(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const N={},P=V+Y,C=Y+se;for(let Z=0;Z<this.LS.length;++Z){const re=this.LS.key(Z);if(re.startsWith(P)&&re.endsWith(C)){const p=Ve(re);N[p]=JSON.parse(this.LS.getItem(re))}}return N}async removeModel(N){N=Ge(N);const P=$e(N);if(this.LS.getItem(P.info)==null)throw new Error(`Cannot find model at path '${N}'`);const C=JSON.parse(this.LS.getItem(P.info));return Fe(P),C}}},6819:function(st,ke,S){"use strict";S.d(ke,{ID:()=>se,Ny:()=>J,gw:()=>V,h1:()=>Y,xQ:()=>W});var u=S(9024),he=S(8933);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R="://";class W{constructor(){this.managers={}}static getInstance(){return W.instance==null&&(W.instance=new W),W.instance}static registerManager(b,te){(0,u.hu)(b!=null,()=>"scheme must not be undefined or null."),b.endsWith(R)&&(b=b.slice(0,b.indexOf(R))),(0,u.hu)(b.length>0,()=>"scheme must not be an empty string.");const ge=W.getInstance();(0,u.hu)(ge.managers[b]==null,()=>`A model store manager is already registered for scheme '${b}'.`),ge.managers[b]=te}static getManager(b){const te=W.getInstance().managers[b];if(te==null)throw new Error(`Cannot find model manager for scheme '${b}'`);return te}static getSchemes(){return Object.keys(W.getInstance().managers)}}function x(D){if(D.indexOf(R)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${W.getSchemes().join(",")}`);return{scheme:D.split(R)[0],path:D.split(R)[1]}}async function I(D,b,te=!1){(0,u.hu)(D!==b,()=>`Old path and new path are the same: '${D}'`);const ge=he.U3.getLoadHandlers(D);(0,u.hu)(ge.length>0,()=>`Copying failed because no load handler is found for source URL ${D}.`),(0,u.hu)(ge.length<2,()=>`Copying failed because more than one (${ge.length}) load handlers for source URL ${D}.`);const $e=ge[0],Fe=he.U3.getSaveHandlers(b);(0,u.hu)(Fe.length>0,()=>`Copying failed because no save handler is found for destination URL ${b}.`),(0,u.hu)(Fe.length<2,()=>`Copying failed because more than one (${ge.length}) save handlers for destination URL ${b}.`);const Ve=Fe[0],Ge=x(D).scheme,qe=x(D).path,He=Ge===x(D).scheme,j=await $e.load();te&&He&&await W.getManager(Ge).removeModel(qe);const ye=await Ve.save(j);return te&&!He&&await W.getManager(Ge).removeModel(qe),ye.modelArtifactsInfo}async function Y(){const D=W.getSchemes(),b={};for(const te of D){const ge=await W.getManager(te).listModels();for(const $e in ge){const Fe=te+R+$e;b[Fe]=ge[$e]}}return b}async function V(D){const b=x(D);return W.getManager(b.scheme).removeModel(b.path)}async function se(D,b){return I(D,b,!1)}async function J(D,b){return I(D,b,!0)}},8933:function(st,ke,S){"use strict";S.d(ke,{U3:()=>u,pS:()=>R,rM:()=>x,tf:()=>he,yB:()=>W});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return u.instance==null&&(u.instance=new u),u.instance}static registerSaveRouter(Y){u.getInstance().saveRouters.push(Y)}static registerLoadRouter(Y){u.getInstance().loadRouters.push(Y)}static getSaveHandlers(Y){return u.getHandlers(Y,"save")}static getLoadHandlers(Y,V){return u.getHandlers(Y,"load",V)}static getHandlers(Y,V,se){const J=[];return(V==="load"?u.getInstance().loadRouters:u.getInstance().saveRouters).forEach(b=>{const te=b(Y,se);te!==null&&J.push(te)}),J}}const he=I=>u.registerSaveRouter(I),R=I=>u.registerLoadRouter(I),W=I=>u.getSaveHandlers(I),x=(I,Y)=>u.getLoadHandlers(I,Y)},1864:function(st,ke,S){"use strict";S.d(ke,{J:()=>u});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},5042:function(st,ke,S){"use strict";S.d(ke,{pI:()=>x,tr:()=>Y,uk:()=>I,wC:()=>V});var u=S(2360),he=S(3386);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R=(0,u.R)("kernelRegistry",()=>new Map),W=(0,u.R)("gradRegistry",()=>new Map);function x(ge,$e){const Fe=te(ge,$e);return R.get(Fe)}function I(ge){return W.get(ge)}function Y(ge){const $e=R.entries(),Fe=[];for(;;){const{done:Ve,value:Ge}=$e.next();if(Ve)break;const[qe,He]=Ge,[j]=qe.split("_");j===ge&&Fe.push(He)}return Fe}function V(ge){const{kernelName:$e,backendName:Fe}=ge,Ve=te($e,Fe);R.has(Ve)&&he.Z(`The kernel '${$e}' for backend '${Fe}' is already registered`),R.set(Ve,ge)}function se(ge){const{kernelName:$e}=ge;W.has($e)&&env().getBool("DEBUG")&&log.warn(`Overriding the gradient for '${$e}'`),W.set($e,ge)}function J(ge,$e){const Fe=te(ge,$e);if(!R.has(Fe))throw new Error(`The kernel '${ge}' for backend '${$e}' is not registered`);R.delete(Fe)}function D(ge){if(!W.has(ge))throw new Error(`The gradient '${ge}' for backend is not registered`);W.delete(ge)}function b(ge,$e){Y(ge).forEach(Ve=>{const Ge=Object.assign({},Ve,{backendName:$e});V(Ge)})}function te(ge,$e){return`${$e}_${ge}`}},3386:function(st,ke,S){"use strict";S.d(ke,{Z:()=>he,c:()=>R});var u=S(6650);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(...W){(0,u.OB)().getBool("IS_TEST")||(0,u.OB)().getBool("PROD")||console.warn(...W)}function R(...W){(0,u.OB)().getBool("IS_TEST")||(0,u.OB)().getBool("PROD")||console.log(...W)}},5136:function(st,ke,S){"use strict";S.d(ke,{W:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y){const V=(0,R._1)(Y,"x","abs");if(V.dtype==="complex64"){const se={x:V};return u.BV.runKernel(he.yj2,se)}else{const se={x:V};return u.BV.runKernel(he.SYM,se)}}const I=(0,W.op)({abs_:x})},2364:function(st,ke,S){"use strict";S.d(ke,{I:()=>Y});var u=S(6201),he=S(4403),R=S(6802),W=S(6857),x=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(V,se){let J=(0,W._1)(V,"a","add"),D=(0,W._1)(se,"b","add");[J,D]=(0,R.T_)(J,D);const b={a:J,b:D};return u.BV.runKernel(he.mm_,b)}const Y=(0,x.op)({add_:I})},7199:function(st,ke,S){"use strict";S.d(ke,{LJ:()=>V,Q3:()=>Y,Vh:()=>R,YB:()=>he,kz:()=>W,lB:()=>I,rv:()=>x,sY:()=>se});var u=S(9024);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(J,D){for(let b=0;b<J.length;++b)if(J[J.length-b-1]!==D-1-b)return!1;return!0}function R(J,D,b){const te=J.length+D.length,ge=[];let $e=0,Fe=0;for(let Ve=0;Ve<te;Ve++)b.indexOf(Ve)===-1?ge.push(J[$e++]):ge.push(D[Fe++]);return ge}function W(J,D){const b=[],te=J.length;for(let $e=0;$e<te;$e++)D.indexOf($e)===-1&&b.push(J[$e]);const ge=D.map($e=>J[$e]);return[b,ge]}function x(J,D){const b=D.map(te=>1);return R(J,b,D)}function I(J,D,b){u.hu(he(D,b),()=>`${J} supports only inner-most axes for now. Got axes ${D} and rank-${b} input.`)}function Y(J,D){if(he(J,D))return null;const b=[];for(let te=0;te<D;++te)J.indexOf(te)===-1&&b.push(te);return J.forEach(te=>b.push(te)),b}function V(J){return J.map((D,b)=>[b,D]).sort((D,b)=>D[1]-b[1]).map(D=>D[0])}function se(J,D){const b=[];for(let te=D-J;te<D;++te)b.push(te);return b}},6255:function(st,ke,S){"use strict";S.r(ke),S.d(ke,{assertAndGetBroadcastShape:()=>R,getBroadcastDims:()=>u,getReductionAxes:()=>he});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u(W,x){const I=W.length,Y=[];for(let V=0;V<I;V++){const se=I-1-V,J=W[se]||1;(x[x.length-1-V]||1)>1&&J===1&&Y.unshift(se)}return Y}function he(W,x){const I=[];for(let Y=0;Y<x.length;Y++){const V=W[W.length-Y-1],se=x.length-Y-1,J=x[se];(V==null||V===1&&J>1)&&I.unshift(se)}return I}function R(W,x){const I=Math.max(W.length,x.length),Y=new Array(I);for(let V=0;V<I;V++){let se=W[W.length-V-1];se==null&&(se=1);let J=x[x.length-V-1];if(J==null&&(J=1),se===1)Y[I-V-1]=J;else if(J===1)Y[I-V-1]=se;else if(se!==J){const D=`Operands could not be broadcast together with shapes ${W} and ${x}.`;throw Error(D)}else Y[I-V-1]=se}return Y}},4697:function(st,ke,S){"use strict";S.r(ke),S.d(ke,{draw:()=>j,fromPixels:()=>ye,fromPixelsAsync:()=>Ve,toPixels:()=>He});var u=S(6201),he=S(6650),R=S(4403),W=S(5042),x=S(1038),I=S(6857),Y=S(8341),V=S(7264),se=S(7158);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let J,D=!1;function b(z,N=3){if(N>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(z==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let P=!1,C=!1,Z=!1,re=!1,p=!1,Se=!1;if(z.data instanceof Uint8Array)P=!0;else if(typeof ImageData<"u"&&z instanceof ImageData)C=!0;else if(typeof HTMLVideoElement<"u"&&z instanceof HTMLVideoElement)Z=!0;else if(typeof HTMLImageElement<"u"&&z instanceof HTMLImageElement)re=!0;else if(z.getContext!=null)p=!0;else if(typeof ImageBitmap<"u"&&z instanceof ImageBitmap)Se=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${z.constructor.name}`);if((0,W.pI)(R.eBW,u.BV.backendName)!=null){const we={pixels:z},Pe={numChannels:N};return u.BV.runKernel(R.eBW,we,Pe)}const[M,ee]=Z?[z.videoWidth,z.videoHeight]:[z.width,z.height];let k;if(p)k=z.getContext("2d").getImageData(0,0,M,ee).data;else if(C||P)k=z.data;else if(re||Z||Se){if(J==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")J=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else J=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});J.canvas.width=M,J.canvas.height=ee,J.drawImage(z,0,0,M,ee),k=J.getImageData(0,0,M,ee).data}let X;if(N===4)X=new Int32Array(k);else{const we=M*ee;X=new Int32Array(we*N);for(let Pe=0;Pe<we;Pe++)for(let Ye=0;Ye<N;++Ye)X[Pe*N+Ye]=k[Pe*4+Ye]}const H=[ee,M,N];return(0,se.w)(X,H,"int32")}function te(z){return z!=null&&z.data instanceof Uint8Array}function ge(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function $e(z){return z!=null&&z.width!==0&&z.height!==0}function Fe(z){return ge()&&!(z instanceof ImageBitmap)&&$e(z)&&!te(z)}async function Ve(z,N=3){let P=null;if((0,he.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&Fe(z)){let C;try{C=await createImageBitmap(z,{premultiplyAlpha:"none"})}catch{C=null}C!=null&&C.width===z.width&&C.height===z.height?P=C:P=z}else P=z;return b(P,N)}function Ge(z){if(z.rank!==2&&z.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${z.rank}.`);const N=z.rank===2?1:z.shape[2];if(N>4||N===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${N}`);if(z.dtype!=="float32"&&z.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${z.dtype}. Please use float32 or int32 tensors.`)}function qe(z){const N=z?.alpha||1;if(N>1||N<0)throw new Error(`Alpha value ${N} is suppoed to be in range [0 - 1].`)}async function He(z,N){let P=(0,I._1)(z,"img","toPixels");if(!(z instanceof x.es)){const M=P;P=(0,Y.p)(M,"int32"),M.dispose()}Ge(P);const[C,Z]=P.shape.slice(0,2),re=P.rank===2?1:P.shape[2],p=await P.data(),Se=P.dtype==="float32"?255:1,Re=new Uint8ClampedArray(Z*C*4);for(let M=0;M<C*Z;++M){const ee=[0,0,0,255];for(let X=0;X<re;X++){const H=p[M*re+X];if(P.dtype==="float32"){if(H<0||H>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${H}.`)}else if(P.dtype==="int32"&&(H<0||H>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${H}.`);re===1?(ee[0]=H*Se,ee[1]=H*Se,ee[2]=H*Se):ee[X]=H*Se}const k=M*4;Re[k+0]=Math.round(ee[0]),Re[k+1]=Math.round(ee[1]),Re[k+2]=Math.round(ee[2]),Re[k+3]=Math.round(ee[3])}if(N!=null){D||(0,W.pI)(R.hGc,u.BV.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),D=!0),N.width=Z,N.height=C;const M=N.getContext("2d"),ee=new ImageData(Re,Z,C);M.putImageData(ee,0,0)}return P!==z&&P.dispose(),Re}function j(z,N,P){let C=(0,I._1)(z,"img","draw");if(!(z instanceof x.es)){const p=C;C=(0,Y.p)(p,"int32"),p.dispose()}Ge(C),qe(P?.imageOptions);const Z={image:C},re={canvas:N,options:P};u.BV.runKernel(R.hGc,Z,re)}const ye=(0,V.op)({fromPixels_:b})},4865:function(st,ke,S){"use strict";S.d(ke,{f:()=>R});var u=S(1038),he=S(9024);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R(W,x="float32",I){return x=x||"float32",he.Mu(W),new u.YD(W,x,I)}},8341:function(st,ke,S){"use strict";S.d(ke,{p:()=>Y});var u=S(6201),he=S(4403),R=S(6857),W=S(9024),x=S(7264);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(V,se){const J=(0,R._1)(V,"x","cast");if(!W.LP(se))throw new Error(`Failed to cast to unknown dtype ${se}`);if(se==="string"&&J.dtype!=="string"||se!=="string"&&J.dtype==="string")throw new Error("Only strings can be casted to strings");const D={x:J},b={dtype:se};return u.BV.runKernel(he.RFZ,D,b)}const Y=(0,x.op)({cast_:I})},8155:function(st,ke,S){"use strict";S.d(ke,{d:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y){const se={x:(0,R._1)(Y,"x","clone","string_or_numeric")};return u.BV.runKernel(he.iJz,se)}const I=(0,W.op)({clone_:x})},1788:function(st,ke,S){"use strict";S.d(ke,{P:()=>Y});var u=S(6201),he=S(4403),R=S(6857),W=S(9024),x=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(V,se){const J=(0,R._1)(V,"real","complex"),D=(0,R._1)(se,"imag","complex");W.k5(J.shape,D.shape,`real and imag shapes, ${J.shape} and ${D.shape}, must match in call to tf.complex().`);const b={real:J,imag:D};return u.BV.runKernel(he.Zz9,b)}const Y=(0,x.op)({complex_:I})},2132:function(st,ke,S){"use strict";S.d(ke,{I0:()=>Fe,Ix:()=>x,Rf:()=>he,U3:()=>Ge,Xw:()=>R,aO:()=>se,jT:()=>Ve,jw:()=>I,m:()=>He,pl:()=>W,sl:()=>qe});var u=S(9024);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(j,ye,z,N,P="NHWC",C){const Z=j[3],re=[...ye,Z],p=qe(P);return x(j,re,z,C,N,null,null,p)}function R(j,ye,z,N,P,C,Z="channelsLast"){const[re,p]=J(ye);let Se;if(Z==="channelsLast")Se=[re,p,j[3],j[3]];else if(Z==="channelsFirst")Se=[re,p,j[1],j[1]];else throw new Error(`Unknown dataFormat ${Z}`);return x(j,Se,z,N,P,C,!1,Z)}function W(j,ye,z,N,P,C,Z="NDHWC"){const[re,p,Se]=D(ye);let Re,M;if(Z==="NDHWC")M="channelsLast",Re=[re,p,Se,j[4],j[4]];else if(Z==="NCDHW")M="channelsFirst",Re=[re,p,Se,j[1],j[1]];else throw new Error(`Unknown dataFormat ${Z}`);return I(j,Re,z,N,P,!1,M,C)}function x(j,ye,z,N,P,C,Z=!1,re="channelsLast"){let[p,Se,Re,M]=[-1,-1,-1,-1];if(re==="channelsLast")[p,Se,Re,M]=j;else if(re==="channelsFirst")[p,M,Se,Re]=j;else throw new Error(`Unknown dataFormat ${re}`);const[ee,k,,X]=ye,[H,we]=J(z),[Pe,Ye]=J(N),Oe=b(ee,Pe),me=b(k,Ye),{padInfo:Ue,outHeight:je,outWidth:at}=te(P,Se,Re,H,we,Oe,me,C,re),rt=Z?X*M:X;let Qe;return re==="channelsFirst"?Qe=[p,rt,je,at]:re==="channelsLast"&&(Qe=[p,je,at,rt]),{batchSize:p,dataFormat:re,inHeight:Se,inWidth:Re,inChannels:M,outHeight:je,outWidth:at,outChannels:rt,padInfo:Ue,strideHeight:H,strideWidth:we,filterHeight:ee,filterWidth:k,effectiveFilterHeight:Oe,effectiveFilterWidth:me,dilationHeight:Pe,dilationWidth:Ye,inShape:j,outShape:Qe,filterShape:ye}}function I(j,ye,z,N,P,C=!1,Z="channelsLast",re){let[p,Se,Re,M,ee]=[-1,-1,-1,-1,-1];if(Z==="channelsLast")[p,Se,Re,M,ee]=j;else if(Z==="channelsFirst")[p,ee,Se,Re,M]=j;else throw new Error(`Unknown dataFormat ${Z}`);const[k,X,H,,we]=ye,[Pe,Ye,Oe]=D(z),[me,Ue,je]=D(N),at=b(k,me),rt=b(X,Ue),Qe=b(H,je),{padInfo:mt,outDepth:yt,outHeight:oe,outWidth:Be}=ge(P,Se,Re,M,Pe,Ye,Oe,at,rt,Qe,re),Xe=C?we*ee:we;let ot;return Z==="channelsFirst"?ot=[p,Xe,yt,oe,Be]:Z==="channelsLast"&&(ot=[p,yt,oe,Be,Xe]),{batchSize:p,dataFormat:Z,inDepth:Se,inHeight:Re,inWidth:M,inChannels:ee,outDepth:yt,outHeight:oe,outWidth:Be,outChannels:Xe,padInfo:mt,strideDepth:Pe,strideHeight:Ye,strideWidth:Oe,filterDepth:k,filterHeight:X,filterWidth:H,effectiveFilterDepth:at,effectiveFilterHeight:rt,effectiveFilterWidth:Qe,dilationDepth:me,dilationHeight:Ue,dilationWidth:je,inShape:j,outShape:ot,filterShape:ye}}function Y(j,ye,z,N,P){N==null&&(N=se(j,ye,z));const C=j[0],Z=j[1],re=$e((C-ye+2*N)/z+1,P),p=$e((Z-ye+2*N)/z+1,P);return[re,p]}function V(j,ye,z,N,P,C){P==null&&(P=se(j,ye[0],N[0]));const Z=[0,0,0,z];for(let re=0;re<3;re++)j[re]+2*P>=ye[re]&&(Z[re]=$e((j[re]-ye[re]+2*P)/N[re]+1,C));return Z}function se(j,ye,z,N=1){const P=b(ye,N);return Math.floor((j[0]*(z-1)-z+P)/2)}function J(j){return typeof j=="number"?[j,j,j]:j.length===2?[j[0],j[1],1]:j}function D(j){return typeof j=="number"?[j,j,j]:j}function b(j,ye){return ye<=1?j:j+(j-1)*(ye-1)}function te(j,ye,z,N,P,C,Z,re,p){let Se,Re,M;if(typeof j=="number"){Se={top:j,bottom:j,left:j,right:j,type:j===0?"VALID":"NUMBER"};const k=Y([ye,z],C,N,j,re);Re=k[0],M=k[1]}else if(j==="same"){Re=Math.ceil(ye/N),M=Math.ceil(z/P);const ee=Math.max(0,(Re-1)*N+C-ye),k=Math.max(0,(M-1)*P+Z-z),X=Math.floor(ee/2),H=ee-X,we=Math.floor(k/2),Pe=k-we;Se={top:X,bottom:H,left:we,right:Pe,type:"SAME"}}else if(j==="valid")Se={top:0,bottom:0,left:0,right:0,type:"VALID"},Re=Math.ceil((ye-C+1)/N),M=Math.ceil((z-Z+1)/P);else if(typeof j=="object"){const ee=p==="channelsLast"?j[1][0]:j[2][0],k=p==="channelsLast"?j[1][1]:j[2][1],X=p==="channelsLast"?j[2][0]:j[3][0],H=p==="channelsLast"?j[2][1]:j[3][1];Se={top:ee,bottom:k,left:X,right:H,type:ee===0&&k===0&&X===0&&H===0?"VALID":"EXPLICIT"},Re=$e((ye-C+ee+k)/N+1,re),M=$e((z-Z+X+H)/P+1,re)}else throw Error(`Unknown padding parameter: ${j}`);return{padInfo:Se,outHeight:Re,outWidth:M}}function ge(j,ye,z,N,P,C,Z,re,p,Se,Re){let M,ee,k,X;if(j==="valid"&&(j=0),typeof j=="number"){M={top:j,bottom:j,left:j,right:j,front:j,back:j,type:j===0?"VALID":"NUMBER"};const we=V([ye,z,N,1],[re,p,Se],1,[P,C,Z],j,Re);ee=we[0],k=we[1],X=we[2]}else if(j==="same"){ee=Math.ceil(ye/P),k=Math.ceil(z/C),X=Math.ceil(N/Z);const H=(ee-1)*P+re-ye,we=(k-1)*C+p-z,Pe=(X-1)*Z+Se-N,Ye=Math.floor(H/2),Oe=H-Ye,me=Math.floor(we/2),Ue=we-me,je=Math.floor(Pe/2),at=Pe-je;M={top:me,bottom:Ue,left:je,right:at,front:Ye,back:Oe,type:"SAME"}}else throw Error(`Unknown padding parameter: ${j}`);return{padInfo:M,outDepth:ee,outHeight:k,outWidth:X}}function $e(j,ye){if(!ye)return Math.trunc(j);switch(ye){case"round":return Math.round(j);case"ceil":return Math.ceil(j);case"floor":return Math.floor(j);default:throw new Error(`Unknown roundingMode ${ye}`)}}function Fe(j){const[ye,z,N]=J(j);return ye===1&&z===1&&N===1}function Ve(j,ye){return Fe(j)||Fe(ye)}function Ge(j){return J(j).every(ye=>ye>0)}function qe(j){if(j==="NHWC")return"channelsLast";if(j==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${j}`)}function He(j,ye,z){if(z!=null){if(typeof ye=="string")throw Error(`Error in ${j}: pad must be an integer when using dimRoundingMode ${z} but got pad ${ye}.`);if(typeof ye=="number")u.hu(u.GN(ye),()=>`Error in ${j}: pad must be an integer when using dimRoundingMode ${z} but got pad ${ye}.`);else if(typeof ye=="object")ye.forEach(N=>{N.forEach(P=>{u.hu(u.GN(P),()=>`Error in ${j}: pad must be an integer when using dimRoundingMode ${z} but got pad ${P}.`)})});else throw Error(`Error in ${j}: Unknown padding parameter: ${ye}`)}}},8670:function(st,ke,S){"use strict";S.d(ke,{h:()=>V});var u=S(6201),he=S(4403),R=S(6802),W=S(6857),x=S(2951),I=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y(se,J){let D=(0,W._1)(se,"a","div"),b=(0,W._1)(J,"b","div");if([D,b]=(0,R.T_)(D,b),D.dtype==="int32"&&b.dtype==="int32")return(0,x.q)(D,b);const te={a:D,b},ge={};return u.BV.runKernel(he.oHH,te,ge)}const V=(0,I.op)({div_:Y})},3777:function(st,ke,S){"use strict";S.d(ke,{p:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y){const se={x:(0,R._1)(Y,"x","elu","float32")};return u.BV.runKernel(he.SX0,se)}const I=(0,W.op)({elu_:x})},7809:function(st,ke,S){"use strict";S.d(ke,{h:()=>W});var u=S(6201),he=S(4403),R=S(9024);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W(x,I,Y){(0,R.Mu)(x),Y=Y||(0,R.D2)(I);const V={shape:x,value:I,dtype:Y};return u.BV.runKernel(he.deh,{},V)}},2951:function(st,ke,S){"use strict";S.d(ke,{q:()=>Y});var u=S(6201),he=S(4403),R=S(6802),W=S(6857),x=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(V,se){let J=(0,W._1)(V,"a","floorDiv"),D=(0,W._1)(se,"b","floorDiv");[J,D]=(0,R.T_)(J,D);const b={a:J,b:D};return u.BV.runKernel(he.jeX,b)}const Y=(0,x.op)({floorDiv_:I})},3608:function(st,ke,S){"use strict";S.d(ke,{Fr:()=>b,QH:()=>ge,pf:()=>te,uy:()=>$e});var u=S(6255),he=S(3777),R=S(7625),W=S(2107),x=S(7966),I=S(2124),Y=S(656),V=S(1067),se=S(5466),J=S(1965),D=S(5580);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b(Fe,Ve,Ge){if(Ge==null||Ge==="linear")return Fe;if(Ge==="relu")return(0,W.d)(Fe,(0,J.N)(Ve));throw new Error(`Cannot compute gradient for fused activation ${Ge}.`)}function te(Fe,Ve){let Ge=Ve;const qe=u.getReductionAxes(Fe.shape,Ve.shape);return qe.length>0&&(Ge=(0,D.S)(Ge,qe)),(0,V.X)(Ge,Fe.shape)}function ge(Fe,Ve,Ge,qe){if(Ve==="linear")return Fe;if(Ve==="relu")return(0,I.U)(Fe);if(Ve==="elu")return(0,he.p)(Fe);if(Ve==="relu6")return(0,Y.b)(Fe);if(Ve==="prelu")return(0,x.A)(Fe,Ge);if(Ve==="leakyrelu")return(0,R.h)(Fe,qe);if(Ve==="sigmoid")return(0,se.X)(Fe);throw new Error(`Unknown fused activation ${Ve}.`)}const $e=(Fe,Ve)=>!(Fe>0)||Ve==="linear"},7625:function(st,ke,S){"use strict";S.d(ke,{h:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y,V=.2){const J={x:(0,R._1)(Y,"x","leakyRelu")},D={alpha:V};return u.BV.runKernel(he.J$2,J,D)}const I=(0,W.op)({leakyRelu_:x})},3624:function(st,ke,S){"use strict";S.d(ke,{g:()=>se});var u=S(6201),he=S(4403),R=S(6802),W=S(6857),x=S(6255),I=S(8341),Y=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V(J,D){let b=(0,W._1)(J,"a","maximum"),te=(0,W._1)(D,"b","maximum");[b,te]=(0,R.T_)(b,te),b.dtype==="bool"&&(b=(0,I.p)(b,"int32"),te=(0,I.p)(te,"int32")),(0,x.assertAndGetBroadcastShape)(b.shape,te.shape);const ge={a:b,b:te};return u.BV.runKernel(he.BMI,ge)}const se=(0,Y.op)({maximum_:V})},2107:function(st,ke,S){"use strict";S.d(ke,{d:()=>Y});var u=S(6201),he=S(4403),R=S(6802),W=S(6857),x=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(V,se){let J=(0,W._1)(V,"a","mul"),D=(0,W._1)(se,"b","mul");[J,D]=(0,R.T_)(J,D);const b={a:J,b:D};return u.BV.runKernel(he.wYn,b)}const Y=(0,x.op)({mul_:I})},7264:function(st,ke,S){"use strict";S.d(ke,{op:()=>W,z:()=>R});var u=S(6201),he=S(9024);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R="__op";function W(x){const I=Object.keys(x);if(I.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${I.length} keys.`);let Y=I[0];const V=x[Y];Y.endsWith("_")&&(Y=Y.substring(0,Y.length-1)),Y=Y+R;const se=(...J)=>{u.BV.startScope(Y);try{const D=V(...J);return(0,he.tI)(D)&&console.error("Cannot return a Promise inside of tidy."),u.BV.endScope(D),D}catch(D){throw u.BV.endScope(null),D}};return Object.defineProperty(se,"name",{value:Y,configurable:!0}),se}},4337:function(st,ke,S){"use strict";S.d(ke,{btT:()=>fn.b,KOy:()=>Ee,VdP:()=>Vn,PAt:()=>vs,XLQ:()=>H.X,Xxe:()=>$i,Z_8:()=>zl,yXz:()=>qi,XD2:()=>mt.X,S0v:()=>Ds.S,sx7:()=>mi,iD$:()=>ne.i,snQ:()=>xu,WnP:()=>he.W,w6H:()=>qs,zbp:()=>hr,bp0:()=>vi,pyx:()=>Ss.p,h62:()=>xe.h,gME:()=>Gt,dC7:()=>Qe.d,odF:()=>tr,wOQ:()=>Qi.w,V3u:()=>Su,wQq:()=>Bo,$gW:()=>ti,_sB:()=>Er,LGj:()=>Qr,pe5:()=>ui,XeE:()=>ta.X,Pg0:()=>tu,Vl2:()=>Zs,TN_:()=>wa,i2d:()=>oo,UWc:()=>ro,B10:()=>hs,HHK:()=>sa,bc:()=>lr,egP:()=>Io,p_:()=>gu,t$B:()=>L,VD$:()=>cu,tdS:()=>Vl,QBD:()=>ge,qPi:()=>ut.q,d_R:()=>ql,GaM:()=>lu,iyy:()=>Ke,l_t:()=>Gr,$QV:()=>ps,rq4:()=>Uo,koy:()=>Qo,Ip$:()=>Ao,UYe:()=>qr.U,z4N:()=>re,NMM:()=>Ia,gWQ:()=>ko.g,ZaL:()=>ir,Khb:()=>V,__u:()=>J,DgJ:()=>fs,Qqt:()=>o,SX3:()=>po,Fp7:()=>pn,hJK:()=>Kr,WVs:()=>ei,d9m:()=>Mr,VT$:()=>va,C80:()=>ee,mG2:()=>yi,IHx:()=>D.I,YjB:()=>Ge,op:()=>I.op,tPi:()=>oe,NXj:()=>ji,xZs:()=>Ji,Gg6:()=>ue,ycw:()=>Pn,Izb:()=>Tt,PYB:()=>vt.P,luU:()=>Bt.l,AL3:()=>Zl.A,ruB:()=>$a,QEs:()=>Jr,d9v:()=>me.d,SDf:()=>pi,mew:()=>oa,WmZ:()=>yr,d2q:()=>i,XAC:()=>Bi,$Gn:()=>Ms,t1L:()=>Zo,uR5:()=>Oe,e_t:()=>vo,E4h:()=>It,Smz:()=>be.S,kp_:()=>Zr,asL:()=>On,CmS:()=>wo,GYS:()=>os,wx0:()=>Aa,Gi7:()=>Xl,lfX:()=>zo,ppE:()=>Cs,CnO:()=>Ai,eab:()=>Do,Ka3:()=>zs,zcT:()=>Hr,zvA:()=>I.z,VV$:()=>de,pNR:()=>Cr,JY5:()=>Qn,U8D:()=>Ei,Tek:()=>Gn,vku:()=>Qs,dt4:()=>$,zoF:()=>je,yE8:()=>zn,LTh:()=>Ys,ZRM:()=>N,lls:()=>Is,iUl:()=>ht,R_K:()=>Di,Bfx:()=>Zi,Two:()=>Rs,arb:()=>dn,HvI:()=>br,ers:()=>La,vHJ:()=>ye,$6P:()=>Fe,qNN:()=>Vt,sQ3:()=>ae.s,ODp:()=>Dr,f9Y:()=>dr,lGY:()=>Jo,Sxn:()=>Or,p0P:()=>Pi,rVs:()=>Ml,$i:()=>ka,VfV:()=>C,W76:()=>Un,Quu:()=>xa,G9k:()=>fo,O$l:()=>Ii,zN1:()=>zr,dbB:()=>Eu,uN7:()=>Ul,nGf:()=>it,L9e:()=>ea,p4s:()=>ra,hg7:()=>na,Wvh:()=>pa,AEp:()=>Xe,Dxk:()=>cn,MNy:()=>en,pdZ:()=>Us,zEQ:()=>bt,NTj:()=>Lt,p3b:()=>cs,rvX:()=>Tu,kwC:()=>as,cM7:()=>Xs,diP:()=>Na,imm:()=>u,Nbs:()=>Ki.N,M25:()=>Ir,hiC:()=>tn.h,hlL:()=>We.h,WYO:()=>Dn,nTT:()=>fr,Iqj:()=>wt,brS:()=>En,jZU:()=>Da,_b3:()=>fe._,mDi:()=>Te,XsQ:()=>qn,ORZ:()=>Yi,Xu6:()=>ru,wS1:()=>Pe,NqF:()=>He,pju:()=>k.p,$r2:()=>eo,N2O:()=>Ho,tgs:()=>Yt,U_I:()=>Ci,RRF:()=>Cn,pUJ:()=>iu,YQQ:()=>fa,itS:()=>Fa,J69:()=>wr,N89:()=>si,GWj:()=>tt,fBT:()=>Sr,xVT:()=>Ns,iUs:()=>ms,GRh:()=>Ua,SJ_:()=>ns,UFq:()=>Ie,SmN:()=>Ra,BHj:()=>Ja,f3b:()=>ze.f,EDe:()=>xr,pjt:()=>St,wzB:()=>ri,P84:()=>Ts.P,anm:()=>fu,JpU:()=>Ko,ry_:()=>Po,MB5:()=>Wl,knu:()=>bs,mCk:()=>Ws,OI3:()=>rt,fvJ:()=>Re,AKD:()=>In,Krr:()=>da,K5V:()=>ha,hi7:()=>uo.h});var u={};S.r(u),S.d(u,{conv2d:()=>Ar,depthwiseConv2d:()=>Ma,matMul:()=>za});var he=S(5136),R=S(6201),W=S(4403),x=S(6857),I=S(7264);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y(y){const d={x:(0,x._1)(y,"x","acos")};return R.BV.runKernel(W.VGw,d)}const V=(0,I.op)({acos_:Y});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function se(y){const d={x:(0,x._1)(y,"x","acosh")};return R.BV.runKernel(W.SpW,d)}const J=(0,I.op)({acosh_:se});var D=S(2364),b=S(9024);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function te(y){b.hu(Array.isArray(y),()=>"The argument passed to tf.addN() must be a list of tensors"),b.hu(y.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${y.length}`);const h=y.map((w,_)=>(0,x._1)(w,`tensors${_}`,"addN")),d=h[0];h.forEach(w=>{if(w.dtype!==d.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),h.forEach(w=>{if(!b.cO(w.shape,d.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const v=h;return R.BV.runKernel(W.Xze,v)}const ge=(0,I.op)({addN_:te});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $e(y,h=null,d=!1){const w={x:(0,x._1)(y,"x","all","bool")},_={axis:h,keepDims:d};return R.BV.runKernel(W.oT6,w,_)}const Fe=(0,I.op)({all_:$e});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(y,h=null,d=!1){const w={x:(0,x._1)(y,"x","any","bool")},_={axis:h,keepDims:d};return R.BV.runKernel(W.IKK,w,_)}const Ge=(0,I.op)({any_:Ve});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(y,h=0){const v={x:(0,x._1)(y,"x","argMax")},w={axis:h};return R.BV.runKernel(W.sJF,v,w)}const He=(0,I.op)({argMax_:qe});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j(y,h=0){const v={x:(0,x._1)(y,"x","argMin")},w={axis:h};return R.BV.runKernel(W.aJk,v,w)}const ye=(0,I.op)({argMin_:j});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z(y){const d={x:(0,x._1)(y,"x","asin")};return R.BV.runKernel(W.M2y,d)}const N=(0,I.op)({asin_:z});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P(y){const d={x:(0,x._1)(y,"x","asinh")};return R.BV.runKernel(W.qw7,d)}const C=(0,I.op)({asinh_:P});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z(y){const d={x:(0,x._1)(y,"x","atan")};return R.BV.runKernel(W.jMg,d)}const re=(0,I.op)({atan_:Z});var p=S(6802);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(y,h){let d=(0,x._1)(y,"a","atan2"),v=(0,x._1)(h,"b","atan2");[d,v]=(0,p.T_)(d,v);const w={a:d,b:v};return R.BV.runKernel(W.QCc,w)}const Re=(0,I.op)({atan2_:Se});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M(y){const d={x:(0,x._1)(y,"x","atanh")};return R.BV.runKernel(W.Oyi,d)}const ee=(0,I.op)({atanh_:M});var k=S(8341),X=S(2132),H=S(1067);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(y,h,d,v,w){const _=(0,x._1)(y,"x","avgPool","float32"),F=1;b.hu(X.jT(d,F),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '${F}'`);let G=_,ie=!1;_.rank===3&&(ie=!0,G=(0,H.X)(_,[1,_.shape[0],_.shape[1],_.shape[2]])),b.hu(G.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${G.rank}.`),X.m("avgPool",v,w);const pe={x:G},De={filterSize:h,strides:d,pad:v,dimRoundingMode:w};let Ae=R.BV.runKernel(W.JhU,pe,De);return Ae=(0,k.p)(Ae,_.dtype),ie?(0,H.X)(Ae,[Ae.shape[1],Ae.shape[2],Ae.shape[3]]):Ae}const Pe=(0,I.op)({avgPool_:we});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ye(y,h,d,v,w,_="NDHWC"){const F=(0,x._1)(y,"x","avgPool3d","float32");let G=F,ie=!1;F.rank===4&&(ie=!0,G=(0,H.X)(F,[1,F.shape[0],F.shape[1],F.shape[2],F.shape[3]])),b.hu(G.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${G.rank}.`),b.hu(_==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${_}`),b.hu(typeof d=="number"&&d>0||Array.isArray(d)&&d[0]>0&&d[1]>0&&d[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${d}'`),(0,X.m)("avgPool3d",v,w);const pe={x:G},De={filterSize:h,strides:d,pad:v,dimRoundingMode:w,dataFormat:_};let Ae=R.BV.runKernel(W._k9,pe,De);return Ae=(0,k.p)(Ae,G.dtype),ie?(0,H.X)(Ae,[Ae.shape[1],Ae.shape[2],Ae.shape[3],Ae.shape[4]]):Ae}const Oe=(0,I.op)({avgPool3d_:Ye});var me=S(8155);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(y,h=0){(0,b.hu)(y.length>=1,()=>"Pass at least one tensor to concat");const d=(0,x.sI)(y,"tensors","concat","string_or_numeric");if(d[0].dtype==="complex64"&&d.forEach(_=>{if(_.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${_.dtype}. `)}),d.length===1)return(0,me.d)(d[0]);const v=d,w={axis:h};return R.BV.runKernel(W.Eh3,v,w)}const je=(0,I.op)({concat_:Ue});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(y,h,d=!1,v=!1){let w=(0,x._1)(y,"a","matMul"),_=(0,x._1)(h,"b","matMul");[w,_]=(0,p.T_)(w,_);const F={a:w,b:_},G={transposeA:d,transposeB:v};return R.BV.runKernel(W.XLW,F,G)}const rt=(0,I.op)({matMul_:at});var Qe=S(2107),mt=S(5466);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(y,h,d){const v=(0,x._1)(y,"x","slice","string_or_numeric");if(v.rank===0)throw new Error("Slicing scalar is not possible");const w={x:v},_={begin:h,size:d};return R.BV.runKernel(W.p2w,w,_)}const oe=(0,I.op)({slice_:yt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(y){const d={x:(0,x._1)(y,"x","tanh","float32")};return R.BV.runKernel(W.MIZ,d)}const Xe=(0,I.op)({tanh_:Be});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ot(y,h,d,v,w,_){const F=(0,x._1)(y,"forgetBias","basicLSTMCell"),G=(0,x._1)(h,"lstmKernel","basicLSTMCell"),ie=(0,x._1)(d,"lstmBias","basicLSTMCell"),pe=(0,x._1)(v,"data","basicLSTMCell"),De=(0,x._1)(w,"c","basicLSTMCell"),Ae=(0,x._1)(_,"h","basicLSTMCell"),nt=je([pe,Ae],1),dt=rt(nt,G),pt=(0,D.I)(dt,ie),$t=pt.shape[0],xt=pt.shape[1]/4,At=[$t,xt],on=oe(pt,[0,0],At),rn=oe(pt,[0,xt],At),jt=oe(pt,[0,xt*2],At),nn=oe(pt,[0,xt*3],At),Rt=(0,D.I)((0,Qe.d)((0,mt.X)(on),Xe(rn)),(0,Qe.d)(De,(0,mt.X)((0,D.I)(F,jt)))),Zt=(0,Qe.d)(Xe(Rt),(0,mt.X)(nn));return[Rt,Zt]}const bt=(0,I.op)({basicLSTMCell_:ot});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ct(y,h,d){const v=(0,x._1)(y,"x","batchToSpaceND"),w=h.reduce((G,ie)=>G*ie);b.hu(v.rank>=1+h.length,()=>`input rank is ${v.rank} but should be > than blockShape.length ${h.length}`),b.hu(d.length===h.length,()=>`crops.length is ${d.length} but should be equal to blockShape.length  ${h.length}`),b.hu(v.shape[0]%w===0,()=>`input tensor batch is ${v.shape[0]} but is not divisible by the product of the elements of blockShape ${h.join(" * ")} === ${w}`);const _={x:v},F={blockShape:h,crops:d};return R.BV.runKernel(W.zws,_,F)}const It=(0,I.op)({batchToSpaceND_:Ct});function Ot(y){let h;return y.rank===0||y.rank===1?h=(0,H.X)(y,[1,1,1,y.size]):y.rank===2?h=(0,H.X)(y,[1,1,y.shape[0],y.shape[1]]):y.rank===3?h=(0,H.X)(y,[1,y.shape[0],y.shape[1],y.shape[2]]):h=y,h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zt(y,h,d,v,w,_){_==null&&(_=.001);const F=(0,x._1)(y,"x","batchNorm"),G=(0,x._1)(h,"mean","batchNorm"),ie=(0,x._1)(d,"variance","batchNorm");let pe;w!=null&&(pe=(0,x._1)(w,"scale","batchNorm"));let De;v!=null&&(De=(0,x._1)(v,"offset","batchNorm")),b.hu(G.rank===ie.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.hu(De==null||G.rank===De.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.hu(pe==null||G.rank===pe.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const nt={x:Ot(F),scale:pe,offset:De,mean:G,variance:ie},dt={varianceEpsilon:_},pt=R.BV.runKernel(W.sHE,nt,dt);return(0,H.X)(pt,F.shape)}const Yt=(0,I.op)({batchNorm_:zt});function ln(y,h,d,v,w,_){const F=(0,x._1)(y,"x","batchNorm"),G=(0,x._1)(h,"mean","batchNorm"),ie=(0,x._1)(d,"variance","batchNorm");let pe;w!=null&&(pe=(0,x._1)(w,"scale","batchNorm"));let De;return v!=null&&(De=(0,x._1)(v,"offset","batchNorm")),b.hu(F.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${F.rank}.`),b.hu(G.rank===2||G.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${G.rank}.`),b.hu(ie.rank===2||ie.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${ie.rank}.`),pe!=null&&b.hu(pe.rank===2||pe.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${pe.rank}.`),De!=null&&b.hu(De.rank===2||De.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${De.rank}.`),Yt(F,G,ie,De,pe,_)}const cn=(0,I.op)({batchNorm2d_:ln});function mn(y,h,d,v,w,_){const F=(0,x._1)(y,"x","batchNorm"),G=(0,x._1)(h,"mean","batchNorm"),ie=(0,x._1)(d,"variance","batchNorm");let pe;w!=null&&(pe=(0,x._1)(w,"scale","batchNorm"));let De;return v!=null&&(De=(0,x._1)(v,"offset","batchNorm")),b.hu(F.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${F.rank}.`),b.hu(G.rank===3||G.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${G.rank}.`),b.hu(ie.rank===3||ie.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${ie.rank}.`),pe!=null&&b.hu(pe.rank===3||pe.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${pe.rank}.`),De!=null&&b.hu(De.rank===3||De.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${De.rank}.`),Yt(F,G,ie,De,pe,_)}const Qn=(0,I.op)({batchNorm3d_:mn});function ls(y,h,d,v,w,_){const F=(0,x._1)(y,"x","batchNorm"),G=(0,x._1)(h,"mean","batchNorm"),ie=(0,x._1)(d,"variance","batchNorm");let pe;w!=null&&(pe=(0,x._1)(w,"scale","batchNorm"));let De;return v!=null&&(De=(0,x._1)(v,"offset","batchNorm")),b.hu(F.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${F.rank}.`),b.hu(G.rank===4||G.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${G.rank}.`),b.hu(ie.rank===4||ie.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${ie.rank}.`),pe!=null&&b.hu(pe.rank===4||pe.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${pe.rank}.`),De!=null&&b.hu(De.rank===4||De.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${De.rank}.`),Yt(F,G,ie,De,pe,_)}const cs=(0,I.op)({batchNorm4d_:ls});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(y,h,d){const v=(0,x._1)(y,"x","bincount"),w=(0,x._1)(h,"weights","bincount");b.hu(v.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${v.dtype}`),b.hu(d>=0,()=>`size must be non-negative, but got ${d}.`),b.hu(w.size===v.size||w.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${v.shape}, weights shape: ${w.shape}.`);const _={x:v,weights:w},F={size:d};return R.BV.runKernel(W.zvY,_,F)}const zn=(0,I.op)({bincount_:kn});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(y,h){const d=(0,x._1)(y,"x","bitwiseAnd"),v=(0,x._1)(h,"y","bitwiseAnd");if(!(0,b.cO)(d.shape,v.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${d.shape}, y: ${v.shape}`);if(d.dtype!=="int32"||v.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${d.dtype} and type of y: ${v.dtype}`);const w={a:d,b:v};return R.BV.runKernel(W.hCO,w)}const Pn=(0,I.op)({bitwiseAnd_:an});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fn(y,h){const d=(0,x._1)(y,"s0","broadcastArgs","int32"),v=(0,x._1)(h,"s1","broadcastArgs","int32");if(d.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${d.rank}`);if(v.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${v.rank}`);const w={s0:d,s1:v};return R.BV.runKernel(W.eEB,w)}const qn=(0,I.op)({broadcastArgs_:Fn});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bn(y,h){let d=(0,x._1)(y,"broadcastTo","x");const v=d.shape;if((0,b.Mu)(h),h.length<d.rank)throw new Error(`broadcastTo(): shape.length=${h.length} < input.rank=${d.rank}.`);if(h.length>d.rank){const pe=d.shape.slice();for(;pe.length<h.length;)pe.unshift(1);d=(0,H.X)(d,pe)}const w=d.shape,_=Array.from(h);for(let pe=h.length-1;pe>=0;pe--)if(w[pe]===h[pe])_[pe]=1;else if(d.shape[pe]!==1)throw new Error(`broadcastTo(): [${v}] cannot be broadcast to [${h}].`);if(_.map((pe,De)=>pe>1?De:-1).filter(pe=>pe>=0).length===0)return(0,me.d)(d);const G={x:d},ie={reps:_};return R.BV.runKernel(W.n9L,G,ie)}const Ie=(0,I.op)({broadcastTo_:Bn});var ze=S(4865);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q(y){const d={x:(0,x._1)(y,"x","ceil","float32")};return R.BV.runKernel(W.gJX,d)}const Te=(0,I.op)({ceil_:q});var We=S(7809);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(y,h,d){const v=(0,x._1)(y,"x","clipByValue");if(b.hu(h<=d,()=>`Error in clip: min (${h}) must be less than or equal to max (${d}).`),h===d)return(0,We.h)(v.shape,h,v.dtype);const w={x:v},_={clipValueMin:h,clipValueMax:d};return R.BV.runKernel(W.xnO,w,_)}const ht=(0,I.op)({clipByValue_:ct});var vt=S(1788);function Qt(y){return je(y,0)}const Gt=(0,I.op)({concat1d_:Qt});function xn(y,h){return je(y,h)}const Tt=(0,I.op)({concat2d_:xn});function Ft(y,h){return je(y,h)}const en=(0,I.op)({concat3d_:Ft});function ds(y,h){return je(y,h)}const ir=(0,I.op)({concat4d_:ds});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ln(y,h,d,v,w="NHWC",_=[1,1],F){const G=(0,x._1)(y,"x","conv2d","float32"),ie=(0,x._1)(h,"filter","conv2d","float32");let pe=G,De=!1;G.rank===3&&(De=!0,pe=(0,H.X)(G,[1,G.shape[0],G.shape[1],G.shape[2]])),b.hu(pe.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${pe.rank}.`),b.hu(ie.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${ie.rank}.`),X.m("conv2d",v,F);const Ae=w==="NHWC"?pe.shape[3]:pe.shape[1];b.hu(Ae===ie.shape[2],()=>`Error in conv2d: depth of input (${Ae}) must match input depth for filter ${ie.shape[2]}.`),b.hu(X.jT(d,_),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${d} and dilations '${_}'`),b.hu(X.U3(_),()=>"Error in conv2D: Dilated rates should be larger than 0."),b.hu(X.U3(d),()=>"Error in conv2D: Strides should be larger than 0.");const nt={x:pe,filter:ie},dt={strides:d,pad:v,dataFormat:w,dilations:_,dimRoundingMode:F},pt=R.BV.runKernel(W.mhS,nt,dt);return De?(0,H.X)(pt,[pt.shape[1],pt.shape[2],pt.shape[3]]):pt}const Gn=(0,I.op)({conv2d_:Ln});function ur(y,h,d,v,w="NWC",_=1,F){const G=(0,x._1)(y,"x","conv1d"),ie=(0,x._1)(h,"filter","conv1d");let pe=G,De=!1;G.rank===2&&(De=!0,pe=(0,H.X)(G,[1,G.shape[0],G.shape[1]])),b.hu(pe.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${pe.rank}.`),b.hu(ie.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${ie.rank}.`),X.m("conv1d",v,F),b.hu(pe.shape[2]===ie.shape[1],()=>`Error in conv1d: depth of input (${pe.shape[2]}) must match input depth for filter ${ie.shape[1]}.`),b.hu(X.jT(d,_),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${d} and dilation '${_}'`),b.hu(X.U3(_),()=>"Error in conv1D: Dilated rates should be larger than 0."),b.hu(X.U3(d),()=>"Error in conv1D: Stride should be larger than 0."),b.hu(w==="NWC",()=>`Error in conv1d: got dataFormat of ${w} but only NWC is currently supported.`);const Ae=(0,H.X)(ie,[1,ie.shape[0],ie.shape[1],ie.shape[2]]),nt=(0,H.X)(pe,[pe.shape[0],1,pe.shape[1],pe.shape[2]]),xt=Gn(nt,Ae,[1,d],v,"NHWC",[1,_],F);return De?(0,H.X)(xt,[xt.shape[2],xt.shape[3]]):(0,H.X)(xt,[xt.shape[0],xt.shape[2],xt.shape[3]])}const vs=(0,I.op)({conv1d_:ur});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Es(y,h,d,v,w,_="NHWC",F){b.hu(y.length===h.rank,()=>`Length of inShape (${y.length}) and rank of dy (${h.rank}) must match`);let G=y,ie=h,pe=!1;h.rank===3&&(pe=!0,ie=(0,H.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),G=[1,y[0],y[1],y[2]]),b.hu(G.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${G.length}.`),b.hu(ie.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${ie.rank}`),b.hu(d.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${d.rank}`);const De=_==="NHWC"?G[3]:G[1],Ae=_==="NHWC"?ie.shape[3]:ie.shape[1];b.hu(De===d.shape[2],()=>`Error in conv2dDerInput: depth of input (${De}) must match input depth for filter ${d.shape[2]}.`),b.hu(Ae===d.shape[3],()=>`Error in conv2dDerInput: depth of output (${Ae}) must match output depth for filter ${d.shape[3]}.`),X.m("conv2dDerInput",w,F);const nt={dy:ie,filter:d},dt={strides:v,pad:w,dataFormat:_,dimRoundingMode:F,inputShape:G},pt=R.BV.runKernel(W.wm,nt,dt);return pe?(0,H.X)(pt,[pt.shape[1],pt.shape[2],pt.shape[3]]):pt}const Bs=(0,I.op)({conv2DBackpropInput_:Es});function Ls(y,h,d,v,w,_){const F=(0,x._1)(y,"x","conv2dTranspose"),G=(0,x._1)(h,"filter","conv2dTranspose");return Bs(d,F,G,v,w,"NHWC",_)}const lr=(0,I.op)({conv2dTranspose_:Ls});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(y,h,d,v,w="NDHWC",_=[1,1,1]){const F=(0,x._1)(y,"x","conv3d"),G=(0,x._1)(h,"filter","conv3d");let ie=F,pe=!1;F.rank===4&&(pe=!0,ie=(0,H.X)(F,[1,F.shape[0],F.shape[1],F.shape[2],F.shape[3]])),b.hu(ie.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${ie.rank}.`),b.hu(G.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${G.rank}.`),b.hu(ie.shape[4]===G.shape[3],()=>`Error in conv3d: depth of input (${ie.shape[4]}) must match input depth for filter ${G.shape[3]}.`),b.hu((0,X.jT)(d,_),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${d} and dilations '${_}'`),b.hu(w==="NDHWC",()=>`Error in conv3d: got dataFormat of ${w} but only NDHWC is currently supported.`),b.hu((0,X.U3)(_),()=>"Error in conv3D: Dilated rates should be larger than 0."),b.hu((0,X.U3)(d),()=>"Error in conv3D: Strides should be larger than 0.");const De={x:ie,filter:G},Ae={strides:d,pad:v,dataFormat:w,dilations:_},nt=R.BV.runKernel(W.x12,De,Ae);return pe?(0,H.X)(nt,[nt.shape[1],nt.shape[2],nt.shape[3],nt.shape[4]]):nt}const Us=(0,I.op)({conv3d_:Zn});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gn(y,h,d,v,w){b.hu(y.length===h.rank,()=>`Length of inShape (${y.length}) and rank of dy (${h.rank}) must match`);let _=y,F=h,G=!1;h.rank===4&&(G=!0,F=(0,H.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]]),_=[1,y[0],y[1],y[2],y[3]]);const ie=_[4],pe=F.shape[4];b.hu(_.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${_.length}.`),b.hu(F.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${F.rank}`),b.hu(d.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${d.rank}`),b.hu(ie===d.shape[3],()=>`Error in conv3dDerInput: depth of input (${ie}) must match input depth for filter ${d.shape[3]}.`),b.hu(pe===d.shape[4],()=>`Error in conv3dDerInput: depth of output (${pe}) must match output depth for filter ${d.shape[4]}.`);const De={dy:F,filter:d},Ae={pad:w,strides:v,inputShape:_},nt=R.BV.runKernel(W.ik2,De,Ae);return G?(0,H.X)(nt,[nt.shape[1],nt.shape[2],nt.shape[3],nt.shape[4]]):nt}const Jn=(0,I.op)({conv3DBackpropInput_:gn});function Vs(y,h,d,v,w){const _=(0,x._1)(y,"x","conv3dTranspose"),F=(0,x._1)(h,"filter","conv3dTranspose");return Jn(d,_,F,v,w)}const ps=(0,I.op)({conv3dTranspose_:Vs});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(y){const d={x:(0,x._1)(y,"x","cos","float32")};return R.BV.runKernel(W.mc4,d)}const Ws=(0,I.op)({cos_:cr});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(y){const d={x:(0,x._1)(y,"x","cosh","float32")};return R.BV.runKernel(W.TR1,d)}const dr=(0,I.op)({cosh_:ws});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(y,h=0,d=!1,v=!1){const _={x:(0,x._1)(y,"x","cumprod")},F={axis:h,exclusive:d,reverse:v};return R.BV.runKernel(W.Byc,_,F)}const Ms=(0,I.op)({cumprod_:Br});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pr(y,h=0,d=!1,v=!1){const _={x:(0,x._1)(y,"x","cumsum")},F={axis:h,exclusive:d,reverse:v};return R.BV.runKernel(W.iHb,_,F)}const hr=(0,I.op)({cumsum_:pr});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(y,h,d,v=!1){const w=(0,x._1)(y,"x","denseBincount"),_=(0,x._1)(h,"weights","denseBincount");b.hu(w.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${w.dtype}`),b.hu(w.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${w.rank}.`),b.hu(d>=0,()=>`size must be non-negative, but got ${d}.`),b.hu(_.size===w.size||_.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${w.shape}, weights shape: ${_.shape}.`);const F={x:w,weights:_},G={size:d,binaryOutput:v};return R.BV.runKernel(W.QRR,F,G)}const Cs=(0,I.op)({denseBincount_:Lr});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kn(y,h,d="NHWC"){const v=(0,x._1)(y,"x","depthToSpace","float32"),w=d==="NHWC"?v.shape[1]:v.shape[2],_=d==="NHWC"?v.shape[2]:v.shape[3],F=d==="NHWC"?v.shape[3]:v.shape[1];b.hu(h>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${h}`),b.hu(w*h>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${w} and ${h}  for depthToSpace with input shape
    ${v.shape}`),b.hu(_*h>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${_} and ${h} for depthToSpace with input shape
        ${v.shape}`),b.hu(F%(h*h)===0,()=>`Dimension size must be evenly divisible by ${h*h} but is ${F} for depthToSpace with input shape ${v.shape}`);const G={x:v},ie={blockSize:h,dataFormat:d};return R.BV.runKernel(W.T0n,G,ie)}const fr=(0,I.op)({depthToSpace_:Kn});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(y,h,d,v,w="NHWC",_=[1,1],F){const G=(0,x._1)(y,"x","depthwiseConv2d","float32"),ie=(0,x._1)(h,"filter","depthwiseConv2d","float32");let pe=G,De=!1;G.rank===3&&(De=!0,pe=(0,H.X)(G,[1,G.shape[0],G.shape[1],G.shape[2]])),b.hu(pe.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${pe.rank}.`),b.hu(ie.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${ie.rank}.`);const Ae=w==="NHWC"?pe.shape[3]:pe.shape[1];b.hu(Ae===ie.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${Ae}) must match the inChannels dimension in filter ${ie.shape[2]}.`),X.m("depthwiseConv2d",v,F);const nt={x:pe,filter:ie},dt={strides:d,pad:v,dataFormat:w,dilations:_,dimRoundingMode:F},pt=R.BV.runKernel(W.cie,nt,dt);return De?(0,H.X)(pt,[pt.shape[1],pt.shape[2],pt.shape[3]]):pt}const hs=(0,I.op)({depthwiseConv2d_:mr});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gr(y){const d={x:(0,x._1)(y,"x","diag")};return R.BV.runKernel(W.$w,d)}const zs=(0,I.op)({diag_:gr});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ur(y,h,d,v,w=[1,1],_="NHWC"){const F=(0,x._1)(y,"x","dilation2d"),G=(0,x._1)(h,"filter","dilation2d");b.hu(F.rank===3||F.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${F.rank}.`),b.hu(G.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${G.rank}.`),b.hu(_==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${_}`);let ie=F,pe=!1;F.rank===3&&(ie=(0,H.X)(F,[1,F.shape[0],F.shape[1],F.shape[2]]),pe=!0),b.hu(ie.shape[3]===G.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${ie.shape[3]} vs ${G.shape[2]}`);const De={x:ie,filter:G},Ae={strides:d,pad:v,dilations:w},nt=R.BV.runKernel(W.p4S,De,Ae);return pe?(0,H.X)(nt,[nt.shape[1],nt.shape[2],nt.shape[3]]):nt}const yr=(0,I.op)({dilation2d_:Ur});var tn=S(8670),qt=S(6255);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vr(y,h){let d=(0,x._1)(y,"a","equal","string_or_numeric"),v=(0,x._1)(h,"b","equal","string_or_numeric");[d,v]=(0,p.T_)(d,v),(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v};return R.BV.runKernel(W.hdR,w)}const fs=(0,I.op)({equal_:Vr});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wr(y,h,d){const v=(0,x._1)(h,"a","where"),w=(0,x._1)(d,"b","where"),_=(0,x._1)(y,"condition","where","bool"),F=(0,qt.assertAndGetBroadcastShape)((0,qt.assertAndGetBroadcastShape)(_.shape,v.shape),w.shape),G=Ie(_,F),ie=Ie(v,F),pe=Ie(w,F),De={condition:G,t:ie,e:pe};return R.BV.runKernel(W.PhF,De)}const dn=(0,I.op)({where_:Wr});var Ts=S(9146);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(y,h){let d=(0,x._1)(y,"a","div"),v=(0,x._1)(h,"b","div");[d,v]=(0,p.T_)(d,v);const w=(0,tn.h)(d,v),_=(0,Ts.P)(w),F=fs(v,_);return dn(F,_,w)}const Lt=(0,I.op)({divNoNan_:Gs});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(y,h){const d=(0,x._1)(y,"t1","dot"),v=(0,x._1)(h,"t2","dot");b.hu((d.rank===1||d.rank===2)&&(v.rank===1||v.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${d.rank} and ${v.rank}.`);const w=d.rank===1?d.size:d.shape[1],_=v.rank===1?v.size:v.shape[0];if(b.hu(w===_,()=>`Error in dot: inner dimensions of inputs must match, but got ${w} and ${_}.`),d.rank===1&&v.rank===1){const F=(0,H.X)(d,[1,-1]),G=(0,H.X)(v,[-1,1]),ie=rt(F,G);return(0,H.X)(ie,[])}else if(d.rank===1&&v.rank===2){const F=(0,H.X)(d,[1,-1]),G=(0,H.X)(v,[v.shape[0],v.shape[1]]),ie=rt(F,G);return(0,H.X)(ie,[ie.size])}else if(d.rank===2&&v.rank===1){const F=(0,H.X)(v,[-1,1]),G=rt(d,F);return(0,H.X)(G,[G.size])}else{const F=(0,H.X)(v,[v.shape[0],v.shape[1]]);return rt(d,F)}}const In=(0,I.op)({dot_:es});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(y,...h){const d=h.map((w,_)=>(0,x._1)(w,`tensors${_}`,"einsum")),v={equation:y};return R.BV.runKernel(W.$g6,d,v)}const Dn=(0,I.op)({einsum_:_n});var Ss=S(3777);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ts(y,h){const d=(0,x._1)(y,"x","ensureShape","string_or_numeric");if(!(0,b.DK)(d.shape,h))throw new Error(`EnsureShape: Shape of tensor ${d.shape} is not compatible with expected shape ${h}`);return y}const xr=(0,I.op)({ensureShape_:ts});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ks(y){let h=(0,x._1)(y,"x","erf");b.hu(h.dtype==="int32"||h.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),h.dtype==="int32"&&(h=(0,k.p)(h,"float32"));const d={x:h};return R.BV.runKernel(W.Omj,d)}const Vt=(0,I.op)({erf_:Ks});var Hn=S(7199);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hs(y,h=null,d=!1){const w={x:(0,x._1)(y,"x","max")},_={reductionIndices:h,keepDims:d};return R.BV.runKernel(W.YoZ,w,_)}const pn=(0,I.op)({max_:Hs});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function js(y,h=null,d=!1){const w={x:(0,x._1)(y,"x","min")},_={axis:h,keepDims:d};return R.BV.runKernel(W.c17,w,_)}const de=(0,I.op)({min_:js});var ae=S(5650),ne=S(528),fe=S(9896),xe=S(414),be=S(5580);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ce(y,h="euclidean",d=null,v=!1){y=(0,x._1)(y,"x","norm");const w=_e(y,h,d);let _=w.shape;if(v){const F=(0,b.EC)(d,y.shape);_=Hn.rv(w.shape,F)}return(0,H.X)(w,_)}function _e(y,h,d=null){if(y.rank===0)return(0,he.W)(y);if(y.rank!==1&&d===null)return _e((0,H.X)(y,[-1]),h,d);if(y.rank===1||typeof d=="number"||Array.isArray(d)&&d.length===1){if(h===1)return(0,be.S)((0,he.W)(y),d);if(h===1/0)return pn((0,he.W)(y),d);if(h===-1/0)return de((0,he.W)(y),d);if(h==="euclidean"||h===2)return(0,fe._)((0,be.S)((0,ae.s)((0,he.W)(y),(0,ne.i)(2,"int32")),d));throw new Error(`Error in norm: invalid ord value: ${h}`)}if(Array.isArray(d)&&d.length===2){if(h===1)return pn((0,be.S)((0,he.W)(y),d[0]),d[1]-1);if(h===1/0)return pn((0,be.S)((0,he.W)(y),d[1]),d[0]);if(h===-1/0)return de((0,be.S)((0,he.W)(y),d[1]),d[0]);if(h==="fro"||h==="euclidean")return(0,fe._)((0,be.S)((0,xe.h)(y),d));throw new Error(`Error in norm: invalid ord value: ${h}`)}throw new Error(`Error in norm: invalid axis: ${d}`)}const Ee=(0,I.op)({norm_:Ce});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Le(y,h=null,d=!1){return Ee(y,"euclidean",h,d)}const i=(0,I.op)({euclideanNorm_:Le});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s(y){const d={x:(0,x._1)(y,"x","exp")};return R.BV.runKernel(W.NEP,d)}const o=(0,I.op)({exp_:s});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m(y,h=0){const d=(0,x._1)(y,"x","expandDims","string_or_numeric");b.hu(h<=d.rank,()=>"Axis must be <= rank of the tensor");const v={input:d},w={dim:h};return R.BV.runKernel(W.YFo,v,w)}const $=(0,I.op)({expandDims_:m});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O(y){const d={x:(0,x._1)(y,"x","expm1")};return R.BV.runKernel(W.Y0y,d)}const L=(0,I.op)({expm1_:O});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U(y,h){const d=(0,x._1)(y,"x","tile","string_or_numeric");b.hu(d.rank===h.length,()=>`Error in transpose: rank of input ${d.rank} must match length of reps ${h}.`);const v={x:d},w={reps:h};return R.BV.runKernel(W.n9L,v,w)}const ue=(0,I.op)({tile_:U});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Me(y,h,d,v="float32"){h==null&&(h=y);const w=(0,ze.f)([y,h],v),_=y<=h?y:h;for(let G=0;G<_;++G)w.set(1,G,G);const F=(0,H.X)(w.toTensor(),[y,h]);if(d==null)return F;if(d.length===1)return ue($(F,0),[d[0],1,1]);if(d.length===2)return ue($($(F,0),0),[d[0],d[1],1,1]);if(d.length===3)return ue($($($(F,0),0),0),[d[0],d[1],d[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${d.length}D.`)}const Ke=(0,I.op)({eye_:Me});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(y){const d={x:(0,x._1)(y,"x","floor","float32")};return R.BV.runKernel(W.OR,d)}const tt=(0,I.op)({floor_:Ze});var ut=S(2951);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _t(y,h,d=0,v=0){const w=(0,x._1)(y,"x","gather"),_=(0,x._1)(h,"indices","gather","int32"),F={x:w,indices:_},G={axis:d,batchDims:v};return R.BV.runKernel(W.qi_,F,G)}const wt=(0,I.op)({gather_:_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ft(y,h){let d=(0,x._1)(y,"a","greater","string_or_numeric"),v=(0,x._1)(h,"b","greater","string_or_numeric");[d,v]=(0,p.T_)(d,v),(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v};return R.BV.runKernel(W.iZT,w)}const St=(0,I.op)({greater_:ft});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kt(y,h){let d=(0,x._1)(y,"a","greaterEqual","string_or_numeric"),v=(0,x._1)(h,"b","greaterEqual","string_or_numeric");[d,v]=(0,p.T_)(d,v),(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v};return R.BV.runKernel(W.Acj,w)}const En=(0,I.op)({greaterEqual_:Kt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(y){const d={input:(0,x._1)(y,"input","imag")};return R.BV.runKernel(W.J_u,d)}const On=(0,I.op)({imag_:Ut});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(y){const d={x:(0,x._1)(y,"x","isFinite")};return R.BV.runKernel(W.avt,d)}const Ns=(0,I.op)({isFinite_:$s});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function so(y){const d={x:(0,x._1)(y,"x","isInf")};return R.BV.runKernel(W.iWB,d)}const ro=(0,I.op)({isInf_:so});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ao(y){const d={x:(0,x._1)(y,"x","isNaN")};return R.BV.runKernel(W.r7n,d)}const oo=(0,I.op)({isNaN_:ao});var uo=S(7625);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(y,h){let d=(0,x._1)(y,"a","less","string_or_numeric"),v=(0,x._1)(h,"b","less","string_or_numeric");[d,v]=(0,p.T_)(d,v),(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v};return R.BV.runKernel(W.vtC,w)}const Mr=(0,I.op)({less_:lo});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function co(y,h){let d=(0,x._1)(y,"a","lessEqual","string_or_numeric"),v=(0,x._1)(h,"b","lessEqual","string_or_numeric");[d,v]=(0,p.T_)(d,v),(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v};return R.BV.runKernel(W.CAk,w)}const zr=(0,I.op)({lessEqual_:co});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function po(y,h,d){if(d<=0)throw new Error("The number of values should be positive.");const v={start:y,stop:h,num:d};return R.BV.runKernel(W.e7N,{},v)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(y,h=5,d=1,v=1,w=.5){const _=(0,x._1)(y,"x","localResponseNormalization");b.hu(_.rank===4||_.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${_.rank}.`),b.hu(b.GN(h),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${h}.`);let F=_,G=!1;_.rank===3&&(G=!0,F=(0,H.X)(_,[1,_.shape[0],_.shape[1],_.shape[2]]));const ie={x:F},pe={depthRadius:h,bias:d,alpha:v,beta:w},De=R.BV.runKernel(W.eZ0,ie,pe);return G?(0,H.X)(De,[De.shape[1],De.shape[2],De.shape[3]]):De}const fo=(0,I.op)({localResponseNormalization_:ho});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mo(y){const d={x:(0,x._1)(y,"x","log","float32")};return R.BV.runKernel(W.ZbH,d)}const Xs=(0,I.op)({log_:mo});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(y){const d={x:(0,x._1)(y,"x","log1p")};return R.BV.runKernel(W.kU,d)}const da=(0,I.op)({log1p_:go});var jn=S(4233);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yo(y){const d={x:(0,x._1)(y,"x","neg")};return R.BV.runKernel(W.kuV,d)}const Un=(0,I.op)({neg_:yo});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(y){const d={x:(0,x._1)(y,"x","softplus")};return R.BV.runKernel(W.MRv,d)}const pa=(0,I.op)({softplus_:xo});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bo(y){const h=(0,x._1)(y,"x","logSigmoid");return(0,jn.cb)(v=>({value:Un(pa(Un(v))),gradFunc:F=>(0,Qe.d)(F,(0,mt.X)(Un(v)))}))(h)}const vo=(0,I.op)({logSigmoid_:bo});var Bt=S(8712);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eo(y,h=-1){const d=(0,x._1)(y,"logits","logSoftmax");if(h===-1&&(h=d.rank-1),h!==d.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${d.rank} and axis was ${h}`);return(0,jn.cb)((w,_)=>{const G=pn(w,h,!0),ie=(0,Bt.l)(w,G),pe=(0,Bt.l)((0,k.p)(ie,"float32"),Xs((0,be.S)(o(ie),h,!0)));return _([pe]),{value:pe,gradFunc:(Ae,nt)=>{const[dt]=nt,pt=!0,$t=o(dt);return(0,Bt.l)(Ae,(0,Qe.d)((0,be.S)(Ae,h,pt),$t))}}})(d)}const wo=(0,I.op)({logSoftmax_:Eo});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Co(y,h=null,d=!1){const v=(0,x._1)(y,"x","logSumExp"),w=(0,b.EC)(h,v.shape),_=pn(v,w,!0),F=(0,Bt.l)(v,_),G=o(F),ie=(0,be.S)(G,w),pe=Xs(ie),De=(0,D.I)((0,H.X)(_,pe.shape),pe);if(d){const Ae=(0,Hn.rv)(De.shape,w);return(0,H.X)(De,Ae)}return De}const Gr=(0,I.op)({logSumExp_:Co});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function To(y,h){const d=(0,x._1)(y,"a","logicalAnd","bool"),v=(0,x._1)(h,"b","logicalAnd","bool");(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v};return R.BV.runKernel(W.PYm,w)}const br=(0,I.op)({logicalAnd_:To});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function So(y){const d={x:(0,x._1)(y,"x","logicalNot","bool")};return R.BV.runKernel(W.VfG,d)}const Kr=(0,I.op)({logicalNot_:So});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(y,h){const d=(0,x._1)(y,"a","logicalOr","bool"),v=(0,x._1)(h,"b","logicalOr","bool");(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v};return R.BV.runKernel(W.MZg,w)}const ha=(0,I.op)({logicalOr_:$o});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function No(y,h){const d=(0,x._1)(y,"a","logicalXor","bool"),v=(0,x._1)(h,"b","logicalXor","bool");return(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape),br(ha(y,h),Kr(br(y,h)))}const Io=(0,I.op)({logicalXor_:No});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr=2147483648;function _o(y,h,d="left"){const v=(0,x._1)(y,"sortedSequence","searchSorted"),w=(0,x._1)(h,"values","searchSorted"),_=v.shape[v.shape.length-1],F=w.shape[w.shape.length-1],G=(0,H.X)(v,[-1,_]),ie=(0,H.X)(w,[-1,F]);if(G.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(G.shape[0]!==ie.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,b.NA)(ie.shape)>=vr)throw new Error(`values tensor size must less than ${vr}`);if(G.shape[1]>=vr)throw new Error(`trailing dim_size must less than ${vr} for int32 output type, was ${G.shape[1]}`);const pe={sortedSequence:G,values:ie},De={side:d};return R.BV.runKernel(W.nr8,pe,De)}const Hr=(0,I.op)({searchSorted_:_o});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Do(y,h){return Hr(y,h,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(y,h,d,v,w){const _=(0,x._1)(y,"x","maxPool"),F=1;let G=_,ie=!1;_.rank===3&&(ie=!0,G=(0,H.X)(_,[1,_.shape[0],_.shape[1],_.shape[2]])),b.hu(G.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${G.rank}.`),b.hu(X.jT(d,F),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '${F}'`),X.m("maxPool",v,w);const pe={x:G},De={filterSize:h,strides:d,pad:v,dimRoundingMode:w},Ae=R.BV.runKernel(W.mTV,pe,De);return ie?(0,H.X)(Ae,[Ae.shape[1],Ae.shape[2],Ae.shape[3]]):Ae}const Er=(0,I.op)({maxPool_:Oo});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ro(y,h=[1,1,1],d,v,w,_="NDHWC"){const F=(0,x._1)(y,"x","maxPool3d");let G=F,ie=!1;F.rank===4&&(ie=!0,G=(0,H.X)(F,[1,F.shape[0],F.shape[1],F.shape[2],F.shape[3]])),b.hu(G.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${G.rank}.`),b.hu(_==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${_}`),(0,X.m)("maxPool3d",v,w);const pe={x:G},De={filterSize:h,strides:d,pad:v,dimRoundingMode:w,dataFormat:_},Ae=R.BV.runKernel(W.OAf,pe,De);return ie?(0,H.X)(Ae,[Ae.shape[1],Ae.shape[2],Ae.shape[3],Ae.shape[4]]):Ae}const fa=(0,I.op)({maxPool3d_:Ro});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(y,h,d,v,w=!1){const F={x:(0,x._1)(y,"x","maxPoolWithArgmax")},G={filterSize:h,strides:d,pad:v,includeBatchInIndex:w},ie=R.BV.runKernel(W.vFR,F,G);return{result:ie[0],indexes:ie[1]}}const Ao=(0,I.op)({maxPoolWithArgmax_:hn});var ko=S(3624);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ma(y,h=null,d=!1){const w={x:(0,x._1)(y,"x","mean")},_={axis:h,keepDims:d};return R.BV.runKernel(W.q2K,w,_)}const wr=(0,I.op)({mean_:ma});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(y,h="float32"){if((0,b.Mu)(y),h==="complex64"){const v=Is(y,"float32"),w=Is(y,"float32");return(0,vt.P)(v,w)}const d=(0,b.wT)((0,b.NA)(y),h);return R.BV.makeTensor(d,y,h)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(y,h="float32"){if((0,b.Mu)(y),h==="complex64"){const v=ms(y,"float32"),w=Is(y,"float32");return(0,vt.P)(v,w)}const d=(0,b.p8)((0,b.NA)(y),h);return R.BV.makeTensor(d,y,h)}var _s=S(1038);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Po(y,h,{indexing:d="xy"}={}){if(d!=="xy"&&d!=="ij")throw new TypeError(`${d} is not a valid third argument to meshgrid`);if(y===void 0)return[];let v=(0,x._1)(y,"x","meshgrid",y instanceof _s.es?y.dtype:"float32");if(h===void 0)return[v];let w=(0,x._1)(h,"y","meshgrid",h instanceof _s.es?h.dtype:"float32");const _=(0,b.NA)(v.shape),F=(0,b.NA)(w.shape);return d==="xy"?(v=(0,H.X)(v,[1,-1]),w=(0,H.X)(w,[-1,1]),[rt(ms([F,1],v.dtype),v),rt(w,ms([1,_],w.dtype))]):(v=(0,H.X)(v,[-1,1]),w=(0,H.X)(w,[1,-1]),[rt(v,ms([1,F],v.dtype)),rt(ms([_,1],w.dtype),w)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(y,h){let d=(0,x._1)(y,"a","minimum"),v=(0,x._1)(h,"b","minimum");[d,v]=(0,p.T_)(d,v),d.dtype==="bool"&&(d=(0,k.p)(d,"int32"),v=(0,k.p)(v,"int32")),(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v};return R.BV.runKernel(W.q8u,w)}const Ys=(0,I.op)({minimum_:Fo});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ga(y,h,d){b.hu(d==="reflect"||d==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${d}.`);const v=(0,x._1)(y,"x","mirrorPad");if(v.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");b.hu(h.length===v.rank,()=>`Padding doesn't match input. Must be ${v.rank}. Got ${h.length}.`);const w=d==="reflect"?1:0;for(let G=0;G<v.rank;G++)b.hu(h[G].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),b.hu(h[G][0]>=0&&h[G][0]<=v.shape[G]-w&&h[G][1]>=0&&h[G][1]<=v.shape[G]-w,()=>`Padding in dimension ${G} cannot be greater than or equal to ${v.shape[G]-w} or less than 0 for input of shape ${v.shape}`);const _={paddings:h,mode:d},F={x:v};return R.BV.runKernel(W.jQs,F,_)}const Vn=(0,I.op)({mirrorPad_:ga});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(y,h){let d=(0,x._1)(y,"a","mod"),v=(0,x._1)(h,"b","mod");[d,v]=(0,p.T_)(d,v);const w={a:d,b:v};return R.BV.runKernel(W.Vbg,w)}const Bo=(0,I.op)({mod_:wn});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ya(y,h=null,d=!1){y=(0,x._1)(y,"x","moments");const v=(0,b.EC)(h,y.shape),w=wr(y,v,d);let _=w.shape;d||(_=(0,Hn.rv)(w.shape,v));const F=(0,xe.h)((0,Bt.l)((0,k.p)(y,"float32"),(0,H.X)(w,_))),G=wr(F,v,d);return{mean:w,variance:G}}const Xl=(0,I.op)({moments_:ya});function Lo(y,h,d,v){const w=(0,x._1)(h,"data","multiRNNCell"),_=(0,x.sI)(d,"c","multiRNNCell"),F=(0,x.sI)(v,"h","multiRNNCell");let G=w;const ie=[];for(let Ae=0;Ae<y.length;Ae++){const nt=y[Ae](G,_[Ae],F[Ae]);ie.push(nt[0]),ie.push(nt[1]),G=nt[1]}const pe=[],De=[];for(let Ae=0;Ae<ie.length;Ae+=2)pe.push(ie[Ae]),De.push(ie[Ae+1]);return[pe,De]}const Uo=(0,I.op)({multiRNNCell_:Lo});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vo(y,h,d,v=!1){const w=(0,x._1)(y,"logits","multinomial"),_=w.size,F=w.rank;if(_<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${_}.`);if(F>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${F}`);d=d||Math.random();const ie={logits:F===1?(0,H.X)(w,[1,-1]):w},pe={numSamples:h,seed:d,normalized:v},De=R.BV.runKernel(W.NZg,ie,pe);return F===1?(0,H.X)(De,[De.size]):De}const ns=(0,I.op)({multinomial_:Vo});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wo(y,h){let d=(0,x._1)(y,"a","notEqual","string_or_numeric"),v=(0,x._1)(h,"b","notEqual","string_or_numeric");[d,v]=(0,p.T_)(d,v),(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v};return R.BV.runKernel(W.yQU,w)}const xa=(0,I.op)({notEqual_:Wo});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mo(y,h,d=1,v=0,w="int32"){if(h<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${h}`);const F={indices:(0,x._1)(y,"indices","oneHot","int32")},G={dtype:w,depth:h,onValue:d,offValue:v};return R.BV.runKernel(W.we_,F,G)}const zo=(0,I.op)({oneHot_:Mo});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Go(y){const d={x:(0,x._1)(y,"x","onesLike")};return R.BV.runKernel(W.qWM,d)}const Ko=(0,I.op)({onesLike_:Go});function ss(y,h){const d=(0,x._1)(y,"v1","outerProduct"),v=(0,x._1)(h,"v2","outerProduct");b.hu(d.rank===1&&v.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${d.rank} and ${v.rank}.`);const w=(0,H.X)(d,[-1,1]),_=(0,H.X)(v,[1,-1]);return rt(w,_)}const Ho=(0,I.op)({outerProduct_:ss});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(y,h,d=0){const v=(0,x._1)(y,"x","pad");if(v.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const w={paddings:h,constantValue:d},_={x:v};return R.BV.runKernel(W.lyA,_,w)}const Qs=(0,I.op)({pad_:jo});function Xo(y,h,d=0){return(0,b.hu)(h.length===2,()=>"Invalid number of paddings. Must be length of 2."),Qs(y,[h],d)}const Cr=(0,I.op)({pad1d_:Xo});function Yo(y,h,d=0){return(0,b.hu)(h.length===2&&h[0].length===2&&h[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qs(y,h,d)}const Qo=(0,I.op)({pad2d_:Yo});function qo(y,h,d=0){return(0,b.hu)(h.length===3&&h[0].length===2&&h[1].length===2&&h[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qs(y,h,d)}const Zo=(0,I.op)({pad3d_:qo});function Tr(y,h,d=0){return(0,b.hu)(h.length===4&&h[0].length===2&&h[1].length===2&&h[2].length===2&&h[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Qs(y,h,d)}const Jo=(0,I.op)({pad4d_:Tr});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yl(y,h,d){const v=(0,x._1)(y,"x","spaceToBatchND");b.hu(v.rank>=1+h.length,()=>`input rank ${v.rank} should be > than [blockShape] ${h.length}`),b.hu(d.length===h.length,()=>`paddings.shape[0] ${d.length} must be equal to [blockShape] ${h.length}`),b.hu(v.shape.reduce((F,G,ie)=>ie>0&&ie<=h.length?F&&(G+d[ie-1][0]+d[ie-1][1])%h[ie-1]===0:F,!0),()=>`input spatial dimensions ${v.shape.slice(1)} with paddings ${d.toString()} must be divisible by blockShapes ${h.toString()}`);const w={x:v},_={blockShape:h,paddings:d};return R.BV.runKernel(W.TQc,w,_)}const Sr=(0,I.op)({spaceToBatchND_:Yl});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ql(y,h,d,v,w,_,F){w==null&&(w=[1,1]),_==null&&(_=1),v===0&&(v="valid");const G=(0,x._1)(y,"x","maxPool");let ie=G,pe=!1;G.rank===3&&(pe=!0,ie=(0,H.X)(G,[1,G.shape[0],G.shape[1],G.shape[2]])),b.hu(X.jT(_,w),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${_} and dilations '${w}'`);const De=X.Xw(ie.shape,h,_,w,v),Ae=[De.dilationHeight,De.dilationWidth];let nt;v==="same"?nt=ys([De.filterHeight,De.filterWidth],Ae):nt=[[0,0],[0,0]];const dt=Ae[0]===1&&Ae[1]===1,[pt,$t]=gs([De.inHeight,De.inWidth],Ae,nt),xt=dt?v:"valid",At=dt?ie:Sr(ie,Ae,pt),rn=(d==="avg"?()=>Pe(At,h,_,xt,F):()=>Er(At,h,_,xt,F))(),jt=dt?rn:It(rn,Ae,$t);return pe?(0,H.X)(jt,[jt.shape[1],jt.shape[2],jt.shape[3]]):jt}function gs(y,h,d){const v=d.map(De=>De[0]),w=d.map(De=>De[1]),_=y.concat(v,w),F=h.map((De,Ae)=>(De-_[Ae]%De)%De),G=w.map((De,Ae)=>De+F[Ae]),ie=h.map((De,Ae)=>[v[Ae],G[Ae]]),pe=h.map((De,Ae)=>[0,F[Ae]]);return[ie,pe]}function ys(y,h){const v=y.map((F,G)=>F+(F-1)*(h[G]-1)).map(F=>F-1),w=v.map(F=>Math.floor(F/2)),_=v.map((F,G)=>F-w[G]);return v.map((F,G)=>[w[G],_[G]])}const ql=(0,I.op)({pool_:Ql});var Zl=S(7966),Ds=S(2351);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(y,h=null,d=!1){let v=(0,x._1)(y,"x","prod");v.dtype==="bool"&&(v=(0,k.p)(v,"int32"));const w={x:v},_={axis:h,keepDims:d};return R.BV.runKernel(W.DlI,w,_)}const ei=(0,I.op)({prod_:bn});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(y,h,d,v){const w=y.map((De,Ae)=>(0,x._1)(De,`tensors${Ae}`,"raggedGather","int32")),_=(0,x._1)(h,"paramsDenseValues","raggedGather"),F=(0,x._1)(d,"indices","raggedGather","int32"),G={paramsNestedSplits:w,paramsDenseValues:_,indices:F},ie={outputRaggedRank:v},pe=R.BV.runKernel(W.dDz,G,ie);return{outputNestedSplits:pe.slice(0,pe.length-1),outputDenseValues:pe[pe.length-1]}}const ti=(0,I.op)({raggedGather_:rs});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ba(y,h,d){const v=(0,x._1)(y,"starts","raggedRange"),w=(0,x._1)(h,"limits","raggedRange",v.dtype),_=(0,x._1)(d,"deltas","raggedRange",v.dtype),F={starts:v,limits:w,deltas:_},G=R.BV.runKernel(W.CQl,F);return{rtNestedSplits:G[0],rtDenseValues:G[1]}}const va=(0,I.op)({raggedRange_:ba});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(y,h,d,v,w){const _=(0,x._1)(y,"shape","raggedTensorToTensor","int32"),F=(0,x._1)(h,"values","raggedTensorToTensor"),G=(0,x._1)(d,"defaultValue","raggedTensorToTensor",F.dtype),ie=v.map((Ae,nt)=>(0,x._1)(Ae,`tensors${nt}`,"raggedTensorToTensor","int32")),pe={shape:_,values:F,defaultValue:G,rowPartitionTensors:ie},De={rowPartitionTypes:w};return R.BV.runKernel(W.BiW,pe,De)}const si=(0,I.op)({raggedTensorToTensor_:ni});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(y,h,d){(0,b.Mu)(y);const v=(0,b.NA)(y);let w=null;if(d==null||d==="float32")w=new Float32Array(v);else if(d==="int32")w=new Int32Array(v);else if(d==="bool")w=new Uint8Array(v);else throw new Error(`Unknown data type ${d}`);for(let _=0;_<v;_++)w[_]=h();return R.BV.makeTensor(w,y,d)}const wa=(0,I.op)({rand_:Ea});var jr=S(6963);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xr{constructor(h,d,v,w,_){this.mean=h,this.stdDev=d,this.dtype=v,this.nextVal=NaN,this.truncated=w,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const F=_||Math.random();this.random=jr.alea(F.toString())}nextValue(){if(!isNaN(this.nextVal)){const w=this.nextVal;return this.nextVal=NaN,w}let h,d,v=!1;for(;!v;){let w,_,F;do w=2*this.random()-1,_=2*this.random()-1,F=w*w+_*_;while(F>=1||F===0);const G=Math.sqrt(-2*Math.log(F)/F);h=this.mean+this.stdDev*w*G,d=this.mean+this.stdDev*_*G,(!this.truncated||this.isValidTruncated(h))&&(v=!0)}return(!this.truncated||this.isValidTruncated(d))&&(this.nextVal=this.convertValue(d)),this.convertValue(h)}convertValue(h){return this.dtype==null||this.dtype==="float32"?h:Math.round(h)}isValidTruncated(h){return h<=this.upper&&h>=this.lower}}class Os{constructor(h,d,v,w){this.alpha=h,this.beta=1/d,this.dtype=v;const _=w||Math.random();this.randu=jr.alea(_.toString()),this.randn=new Xr(0,1,v,!1,this.randu()),h<1?this.d=h+2/3:this.d=h-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let h,d,v,w,_,F;for(;;){do w=this.randn.nextValue(),F=1+this.c*w;while(F<=0);if(F*=F*F,h=w*w,d=1-.331*h*h,v=.5*h+this.d*(1-F+Math.log(F)),_=this.randu(),_<d||Math.log(_)<v)break}return F=1/this.beta*this.d*F,this.alpha<1&&(F*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(F)}convertValue(h){return this.dtype==="float32"?h:Math.round(h)}}class kt{constructor(h=0,d=1,v,w){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=h,this.range=d-h,this.dtype=v,w==null&&(w=Math.random()),typeof w=="number"&&(w=w.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${h} - ${d} <= 1 and dtype is not float`);this.random=jr.alea(w)}convertValue(h){return this.canReturnFloat()?h:Math.round(h)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}function un(y){const h=y.length,d=Sa(y),v=Ta(y),w=h/6*(Math.pow(d,2)+.25*Math.pow(v-3,2));if(w>5.991)throw new Error(`Invalid p-value for JB: ${w}`)}function $r(y,h,d,v){v==null&&(v=testEpsilon());const w=Nr(y);expectNumbersClose(w,h,v),expectNumbersClose(Ca(y,w),d,v)}function Nr(y){let h=0;for(let d=0;d<y.length;d++)h+=y[d];return h/y.length}function Ca(y,h){let d=0;for(let v=0;v<y.length;v++){const w=y[v]-h;d+=w*w}return Math.sqrt(d/y.length)}function Ta(y){const h=Nr(y),d=y.length;let v=0,w=0;for(let _=0;_<d;_++){const F=y[_]-h;v+=Math.pow(F,2),w+=Math.pow(F,4)}return 1/d*w/Math.pow(1/d*v,2)}function Sa(y){const h=Nr(y),d=y.length;let v=0,w=0;for(let _=0;_<d;_++){const F=y[_]-h;v+=Math.pow(F,2),w+=Math.pow(F,3)}return 1/d*w/Math.pow(1/(d-1)*v,3/2)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(y,h,d=1,v="float32",w){if((0,b.Mu)(y),d==null&&(d=1),v==null&&(v="float32"),v!=="float32"&&v!=="int32")throw new Error(`Unsupported data type ${v}`);const _=new Os(h,d,v,w),F=(0,ze.f)(y,v);for(let G=0;G<F.values.length;G++)F.values[G]=_.nextValue();return F.toTensor()}const ri=(0,I.op)({randomGamma_:Yr});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ai(y,h=0,d=1,v,w){if((0,b.Mu)(y),v!=null&&v==="bool")throw new Error(`Unsupported data type ${v}`);const _=new Xr(h,d,v,!1,w),F=(0,ze.f)(y,v);for(let G=0;G<F.values.length;G++)F.values[G]=_.nextValue();return F.toTensor()}const it=(0,I.op)({randomNormal_:ai});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oi(y,h,d){if(h!=null&&h==="bool")throw new Error(`Unsupported data type ${h}`);return it(y,0,1,h,d)}const $a=(0,I.op)({randomStandardNormal_:oi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ii(y,h=0,d=1,v="float32",w){(0,b.Mu)(y);const _=(0,ze.f)(y,v),F=new kt(h,d,null,w);for(let G=0;G<_.values.length;G++)_.values[G]=F.nextValue();return _.toTensor()}const Qr=(0,I.op)({randomUniform_:ii});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(y,h,d,v){return Qr(y,h,d,"int32",v)}const ui=(0,I.op)({randomUniformInt_:xs});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(y,h,d=1,v="float32"){if(d===0)throw new Error("Cannot have a step of zero");const w={start:y,stop:h,step:d,dtype:v};return R.BV.runKernel(W.e6w,{},w)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(y){const d={input:(0,x._1)(y,"input","real")};return R.BV.runKernel(W.xJR,d)}const as=(0,I.op)({real_:li});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ci(y){const d={x:(0,x._1)(y,"x","reciprocal")};return R.BV.runKernel(W.$HU,d)}const Ir=(0,I.op)({reciprocal_:ci});var qr=S(2124),fn=S(656);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function di(y,h){const v={x:(0,x._1)(y,"x","reverse")},w={dims:h};return R.BV.runKernel(W.mKl,v,w)}const os=(0,I.op)({reverse_:di});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(y){const h=(0,x._1)(y,"x","reverse");return b.hu(h.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${h.rank}.`),os(h,0)}const pi=(0,I.op)({reverse1d_:_r});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(y,h){const d=(0,x._1)(y,"x","reverse");return b.hu(d.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${d.rank}.`),os(d,h)}const Na=(0,I.op)({reverse2d_:hi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fi(y,h){const d=(0,x._1)(y,"x","reverse");return b.hu(d.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${d.rank}.`),os(d,h)}const mi=(0,I.op)({reverse3d_:fi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gi(y,h){const d=(0,x._1)(y,"x","reverse");return b.hu(d.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${d.rank}.`),os(d,h)}const yi=(0,I.op)({reverse4d_:gi});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xi(y){const d={x:(0,x._1)(y,"x","round")};return R.BV.runKernel(W.e07,d)}const Ia=(0,I.op)({round_:xi});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bi(y){const d={x:(0,x._1)(y,"x","rsqrt","float32")};return R.BV.runKernel(W.bV0,d)}const vi=(0,I.op)({rsqrt_:bi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(y){const d={x:(0,x._1)(y,"x","selu")};return R.BV.runKernel(W.oFR,d)}const Ei=(0,I.op)({selu_:_a});function wi(y,h,d,v,w,_=[1,1],F="NHWC"){const G=(0,x._1)(y,"x","separableConv2d"),ie=(0,x._1)(h,"depthwiseFilter","separableConv2d"),pe=(0,x._1)(d,"pointwiseFilter","separableConv2d");let De=G,Ae=!1;if(G.rank===3&&(Ae=!0,De=(0,H.X)(G,[1,G.shape[0],G.shape[1],G.shape[2]])),F==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");b.hu(De.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${De.rank}.`),b.hu(ie.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${ie.rank}.`),b.hu(pe.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${ie.rank}.`),b.hu(pe.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${pe.shape[0]}.`),b.hu(pe.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${pe.shape[1]}.`);const nt=ie.shape[2],dt=ie.shape[3];b.hu(pe.shape[2]===nt*dt,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${nt*dt}, but got ${pe.shape[2]}.`);const pt=hs(De,ie,v,w,F,_),xt=Gn(pt,pe,1,"valid",F);return Ae?(0,H.X)(xt,[xt.shape[1],xt.shape[2],xt.shape[3]]):xt}const Ci=(0,I.op)({separableConv2d_:wi});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Ti(y,h){const d=(0,x._1)(y,"x","setdiff1d"),v=(0,x._1)(h,"y","setdiff1d");b.hu(d.dtype===v.dtype,()=>`x and y should have the same dtype, but got x (${d.dtype}) and y (${v.dtype}).`),b.hu(d.rank===1,()=>`x should be 1D tensor, but got x (${d.shape}).`),b.hu(v.rank===1,()=>`y should be 1D tensor, but got y (${v.shape}).`);const w=await d.data(),_=await v.data(),F=new Set(_);let G=0;for(let De=0;De<w.length;De++)F.has(w[De])||G++;const ie=new _s.YD([G],d.dtype),pe=new _s.YD([G],"int32");for(let De=0,Ae=0;De<w.length;De++)F.has(w[De])||(ie.values[Ae]=w[De],pe.values[Ae]=De,Ae++);return[ie.toTensor(),pe.toTensor()]}const Dr=Ti;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Si(y){const d={x:(0,x._1)(y,"x","sign")};return R.BV.runKernel(W.i5y,d)}const $i=(0,I.op)({sign_:Si});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ni(y){const d={x:(0,x._1)(y,"x","sin","float32")};return R.BV.runKernel(W.RQH,d)}const Ii=(0,I.op)({sin_:Ni});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _i(y){const d={x:(0,x._1)(y,"x","sinh")};return R.BV.runKernel(W.wYB,d)}const Di=(0,I.op)({sinh_:_i});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oi(y,h,d){const v=(0,x._1)(y,"x","slice1d");return b.hu(v.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${v.rank} tensor`),oe(v,[h],[d])}const Da=(0,I.op)({slice1d_:Oi});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oa(y,h,d){const v=(0,x._1)(y,"x","slice2d");return b.hu(v.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${v.rank} tensor`),oe(v,h,d)}const Ra=(0,I.op)({slice2d_:Oa});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ri(y,h,d){const v=(0,x._1)(y,"x","slice3d");return b.hu(v.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${v.rank} tensor`),oe(v,h,d)}const Ai=(0,I.op)({slice3d_:Ri});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ki(y,h,d){const v=(0,x._1)(y,"x","slice4d");return b.hu(v.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${v.rank} tensor`),oe(v,h,d)}const Pi=(0,I.op)({slice4d_:ki});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fi(y,h=-1){const d=(0,x._1)(y,"logits","softmax","float32");if(h===-1&&(h=d.rank-1),h!==d.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${d.rank} and dim was ${h}`);const v={logits:d},w={dim:h};return R.BV.runKernel(W.Gcp,v,w)}const Bi=(0,I.op)({softmax_:Fi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Li(y){(0,b.hu)(y.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${y.dtype}.`);const h={input:y};return R.BV.runKernel(W.vwp,h)}const Zr=(0,I.op)({fft_:Li});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ui(y){(0,b.hu)(y.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${y.dtype}.`);const h={input:y};return R.BV.runKernel(W.Qg5,h)}const Or=(0,I.op)({ifft_:Ui});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vi(y){const h=y.shape[y.shape.length-1],d=y.size/h;let v;if(h<=2){const w=(0,H.X)(y,[d,h]);v=Or(w)}else{const w=[d,2*(h-1)],_=(0,H.X)(as(y),[d,h]),F=(0,H.X)(On(y),[d,h]),G=os(oe(_,[0,1],[d,h-2]),1),ie=(0,Qe.d)(os(oe(F,[0,1],[d,h-2]),1),(0,ne.i)(-1)),pe=je([_,G],1),De=je([F,ie],1),Ae=(0,H.X)((0,vt.P)(pe,De),[w[0],w[1]]);v=Or(Ae)}if(v=as(v),y.rank===3&&y.shape[0]!==0){const w=v,_=y.shape[0];v=(0,H.X)(v,[_,v.shape[0]/_,v.shape[1]]),w.dispose()}return v}const Aa=(0,I.op)({irfft_:Vi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wi(y,h,d=0){const w={x:(0,x._1)(y,"x","split")},_={numOrSizeSplits:h,axis:d};return R.BV.runKernel(W.L8s,w,_)}const Zs=(0,I.op)({split_:Wi});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mi(y,h){(0,b.hu)(y.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${y.dtype}`);let d=y.shape[y.shape.length-1];const v=y.size/d;let w;if(h!=null&&h<d){const pt=y.shape.map(xt=>0),$t=y.shape.map(xt=>xt);$t[y.shape.length-1]=h,w=oe(y,pt,$t),d=h}else if(h!=null&&h>d){const pt=y.shape.map($t=>$t);pt[y.shape.length-1]=h-d,w=je([y,Is(pt)],y.shape.length-1),d=h}else w=y;const _=(0,Ts.P)(w),F=(0,H.X)((0,vt.P)(w,_),[v,d]),G=Zr(F),ie=Math.floor(d/2)+1,pe=as(G),De=On(G),Ae=Zs(pe,[ie,d-ie],pe.shape.length-1),nt=Zs(De,[ie,d-ie],De.shape.length-1),dt=w.shape.slice();return dt[w.shape.length-1]=ie,(0,H.X)((0,vt.P)(Ae[0],nt[0]),dt)}const Jr=(0,I.op)({rfft_:Mi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zi(y,h){let d=(0,x._1)(y,"a","squaredDifference"),v=(0,x._1)(h,"b","squaredDifference");[d,v]=(0,p.T_)(d,v),(0,qt.assertAndGetBroadcastShape)(d.shape,v.shape);const w={a:d,b:v},_={};return R.BV.runKernel(W._tC,w,_)}const ka=(0,I.op)({squaredDifference_:zi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gi(y,h){const d=(0,x._1)(y,"x","squeeze","string_or_numeric");return(0,H.X)(d,(0,b.bp)(d.shape,h).newShape)}const ea=(0,I.op)({squeeze_:Gi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Js(y,h=0){const d=(0,x.sI)(y,"tensors","stack","string_or_numeric");b.hu(d.length>=1,()=>"Pass at least one tensor to tf.stack"),d.length>0&&b.hu(h<=d[0].rank,()=>"Axis must be <= rank of the tensor");const v=d,w={axis:h};return R.BV.runKernel(W.QiL,v,w)}const bs=(0,I.op)({stack_:Js});var Ki=S(1965);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hi(y,h,d,v,w=0,_=0,F=0,G=0,ie=0){const De={x:(0,x._1)(y,"x","stridedSlice","string_or_numeric")},Ae={begin:h,end:d,strides:v,beginMask:w,endMask:_,ellipsisMask:F,newAxisMask:G,shrinkAxisMask:ie};return R.BV.runKernel(W.jQk,De,Ae)}const ji=(0,I.op)({stridedSlice_:Hi});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xi(y){const d={x:(0,x._1)(y,"x","tan","float32")};return R.BV.runKernel(W.sEM,d)}const Yi=(0,I.op)({tan_:Xi});var ta=S(4594),er=S(9790);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cn(y,h){(0,b.Cq)(y);const d=(0,x.C)(y,h);if(d.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,er.H)(y,null,d,h)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(y,h,d){if((0,b.Cq)(y),h!=null&&h.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const v=(0,x.C)(y,d);if(v.length!==2&&v.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(v.length===1&&h==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,er.H)(y,h,v,d)}var Qi=S(7158);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(y,h,d){if((0,b.Cq)(y),h!=null&&h.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const v=(0,x.C)(y,d);if(v.length!==4&&v.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(v.length===1&&h==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,er.H)(y,h,v,d)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zi(y,h,d){if((0,b.Cq)(y),h!=null&&h.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const v=(0,x.C)(y,d);if(v.length!==5&&v.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(v.length===1&&h==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,er.H)(y,h,v,d)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ji(y,h,d){if((0,b.Cq)(y),h!=null&&h.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const v=(0,x.C)(y,d);if(v.length!==6&&v.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(v.length===1&&h==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return h=h||v,(0,er.H)(y,h,v,d)}var Pa=S(1820);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eu(y,h,d){const v=(0,x._1)(y,"tensor","tensorScatterupdate"),w=(0,x._1)(h,"indices","tensorScatterupdate","int32"),_=(0,x._1)(d,"updates","tensorScatterupdate");if(Pa.b0(_,w,v.shape),v.dtype!==_.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${v.dtype} and ${_.dtype}.`);const F={tensor:v,indices:w,updates:_},G={};return R.BV.runKernel(W.SIB,F,G)}const tu=(0,I.op)({tensorScatterUpdate_:eu});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nu(y,h=1,d=!0){const v=(0,x._1)(y,"x","topk");if(v.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const w=v.shape[v.shape.length-1];if(h<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${h}`);if(h>w)throw new Error(`'k' passed to topk() must be <= the last dimension (${w}) but got ${h}`);const _={x:v},F={k:h,sorted:d},[G,ie]=R.BV.runKernel(W.cWu,_,F);return{values:G,indices:ie}}const na=(0,I.op)({topk_:nu});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(y,h=0,d=1,v,w){if((0,b.Mu)(y),v!=null&&v==="bool")throw new Error("Unsupported data type $ { dtype }");const _=new Xr(h,d,v,!0,w),F=(0,ze.f)(y,v);for(let G=0;G<F.values.length;G++)F.values[G]=_.nextValue();return F.toTensor()}const ru=(0,I.op)({truncatedNormal_:su});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(y,h=0){const d=(0,x._1)(y,"x","unique","string_or_numeric");(0,b.hu)(d.rank>0,()=>"The input tensor must be at least 1D");const v={x:d},w={axis:h},[_,F]=R.BV.runKernel(W.kpP,v,w);return{values:_,indices:F}}const Rs=(0,I.op)({unique_:au});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ou(y,h,d){const v=(0,x._1)(y,"x","unsortedSegmentSum"),w=(0,x._1)(h,"segmentIds","unsortedSegmentSum","int32");(0,b.hu)((0,b.GN)(d),()=>"numSegments must be of dtype int");const _={x:v,segmentIds:w},F={numSegments:d};return R.BV.runKernel(W.Qvg,_,F)}const iu=(0,I.op)({unsortedSegmentSum_:ou});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uu(y,h=0){const d=(0,x._1)(y,"x","unstack","string_or_numeric");b.hu(h>=-d.shape.length&&h<d.shape.length,()=>`Axis = ${h} is not in [-${d.shape.length}, ${d.shape.length})`);const v={value:d},w={axis:h};return R.BV.runKernel(W.ToN,v,w)}const sa=(0,I.op)({unstack_:uu});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lu(y,h){return Hr(y,h,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cu(y,h=!0,d,v){return R.BV.makeVariable(y,h,d,v)}var du=S(9560);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function pu(y){const h=(0,x._1)(y,"condition","whereAsync","bool"),d=await h.data(),v=(0,du.Z)(h.shape,d);return y!==h&&h.dispose(),v}const Fa=pu;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function hu(y,h,d){const v=(0,x._1)(y,"tensor","boolMask"),w=(0,x._1)(h,"mask","boolMask","bool"),_=d??0,F=w.rank,G=v.shape;b.hu(F>0,()=>"mask cannot be scalar"),b.k5(G.slice(_,_+F),w.shape,"mask's shape must match the first K dimensions of tensor's shape,");let ie=1;for(let $t=_;$t<_+F;$t++)ie*=G[$t];const pe=G.slice(0,_).concat([ie],G.slice(_+F)),De=(0,H.X)(v,pe),Ae=(0,H.X)(w,[-1]),nt=await Fa(Ae),dt=ea(nt,[1]),pt=wt(De,dt,_);return y!==v&&v.dispose(),h!==w&&w.dispose(),dt.dispose(),De.dispose(),Ae.dispose(),nt.dispose(),pt}const fu=hu;var mu=S(4531);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(y,h,d){const v=(0,x._1)(y,"x","transpose");if(h==null&&(h=v.shape.map((F,G)=>G).reverse()),b.hu(v.rank===h.length,()=>`Error in transpose: rank of input ${v.rank} must match length of perm ${h}.`),h.forEach(F=>{b.hu(F>=0&&F<v.rank,()=>`All entries in 'perm' must be between 0 and ${v.rank-1} but got ${h}`)}),v.rank<=1)return v.clone();const w={x:v},_={perm:h};return v.dtype==="complex64"?(0,mu.lu)(()=>{let F=as(v),G=On(v);return F=R.BV.runKernel(W.G3Y,{x:F},_),G=R.BV.runKernel(W.G3Y,{x:G},_),d&&(G=Un(G)),(0,vt.P)(F,G)}):R.BV.runKernel(W.G3Y,w,_)}const ra=(0,I.op)({transpose_:Ba});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(y,h,d,v,w=!0){const _=(0,x._1)(y,"v","movingAverage"),F=(0,x._1)(h,"x","movingAverage"),G=(0,x._1)(d,"decay","movingAverage");(0,p.xg)(_,F),b.hu(b.cO(_.shape,F.shape),()=>"Shape mismatch in v and x");const ie=(0,ne.i)(1),pe=(0,Bt.l)(ie,G);let De=(0,Qe.d)((0,Bt.l)(F,_),pe);if(w){b.hu(v!=null,()=>"When using zeroDebias: true, step is required.");const Ae=(0,x._1)(v,"step","movingAverage");De=(0,tn.h)(De,(0,Bt.l)(ie,(0,ae.s)(G,Ae)))}return(0,D.I)(_,De)}const gu=(0,I.op)({movingAverage_:nr});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yu(y,h,d){(0,b.Mu)(d);const v=(0,x._1)(y,"indices","scatterND","int32"),w=(0,x._1)(h,"updates","scatterND");Pa.b0(w,v,d);const _={indices:v,updates:w},F={shape:d};return R.BV.runKernel(W.xQA,_,F)}const xu=(0,I.op)({scatterND_:yu});function aa(y,h,d,v){if(y.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${y.dtype}.`);if(y.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${y.shape}.`);const w=y.rank>0?y.shape[0]:1,_=y.rank>1?y.shape[1]:1;if(d.length!==_)throw new Error(`outputShape has incorrect number of elements:, ${d.length}, should be: ${_}.`);const F=h.size;if(!(h.rank===0||h.rank===1&&F===w))throw new Error(`sparseValues has incorrect shape ${h.shape}, should be [] or [${w}]`);if(h.dtype!==v.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bu(y,h,d,v=0){(0,b.Mu)(d);const w=(0,x._1)(y,"sparseIndices","sparseToDense","int32"),_=(0,x._1)(h,"sparseValues","sparseToDense","string_or_numeric"),F=(0,x._1)(v,"defaultValue","sparseToDense",_.dtype);aa(w,_,d,F);const G={sparseIndices:w,sparseValues:_,defaultValue:F},ie={outputShape:d};return R.BV.runKernel(W.D2d,G,ie)}const La=(0,I.op)({sparseToDense_:bu});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vu(y,h){const d=(0,x._1)(h,"indices","gatherND","int32"),w={params:(0,x._1)(y,"x","gatherND","string_or_numeric"),indices:d};return R.BV.runKernel(W.q1x,w)}const Eu=(0,I.op)({gatherND_:vu});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(y,h){if(h==null)return y.shape.slice();if(b.cO(y.shape,h))return h;if(y.shape.length===h.length){const d=[];for(let v=0;v<y.shape.length;v++)h[v]==null&&y.shape[v]!=null?d.push(y.shape[v]):d.push(h[v]);return d}return h}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cu(y,h,d,v){const w=(0,x._1)(y,"x","dropout");if(b.hu(w.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${w.dtype} tensor instead.`),b.hu(h>=0&&h<1,()=>`rate must be a float in the range [0, 1), but got ${h}.`),h===0)return y instanceof _s.es?w.clone():w;const _=wu(w,d),F=1-h,G=(0,tn.h)(tt((0,D.I)(Qr(_,0,1,"float32",v),F)),F);return(0,Qe.d)(w,G)}const Tu=(0,I.op)({dropout_:Cu});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ua(y){return Math.floor(Math.pow(2,Math.ceil(Math.log(y)/Math.log(2))))}function oa(y,h,d){const v=1-y%2,w=new Float32Array(y);for(let _=0;_<y;++_){const F=2*Math.PI*_/(y+v-1);w[_]=h-d*Math.cos(F)}return Cn(w,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Va(y,h,d=1){const v=(0,x._1)(y,"predictions","inTopK"),w=(0,x._1)(h,"targets","inTopK");(0,b.hu)(v.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${v.rank}`),(0,b.hu)(v.rank-1===w.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${v.rank} and targets rank ${w.rank}`),(0,b.k5)(v.shape.slice(0,v.shape.length-1),w.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const _=v.shape[v.shape.length-1];(0,b.hu)(d>0&&d<=_,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${_}), but got ${d}`);const F=await v.data(),G=await w.data(),[ie,pe]=[F.length/_,_],De=(0,b.WP)("bool",ie);for(let Ae=0;Ae<ie;Ae++){const nt=Ae*pe,dt=F.subarray(nt,nt+pe),pt=[];for(let $t=0;$t<dt.length;$t++)pt.push({value:dt[$t],index:$t});pt.sort(($t,xt)=>xt.value-$t.value),De[Ae]=0;for(let $t=0;$t<d;$t++)if(pt[$t].index===G[Ae]){De[Ae]=1;break}}return y!==v&&v.dispose(),h!==w&&w.dispose(),(0,ta.X)(De,w.shape,"bool")}const Su=Va;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $u(y,h,d,v,w,_="NHWC",F){let G=y;y.rank===3&&(G=(0,H.X)(y,[1,y.shape[0],y.shape[1],y.shape[2]]));let ie=h;ie.rank===3&&(ie=(0,H.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),b.hu(G.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${G.shape}.`),b.hu(ie.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${ie.shape}.`),b.hu(d.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${d}.`);const pe=_==="NHWC"?G.shape[3]:G.shape[1],De=_==="NHWC"?ie.shape[3]:ie.shape[1];b.hu(pe===d[2],()=>`Error in conv2dDerFilter: depth of input ${pe}) must match input depth in filter (${d[2]}.`),b.hu(De===d[3],()=>`Error in conv2dDerFilter: depth of dy (${De}) must match output depth for filter (${d[3]}).`),X.m("conv2dDerFilter",w,F);const Ae={x:G,dy:ie},nt={strides:v,pad:w,dataFormat:_,dimRoundingMode:F,filterShape:d};return R.BV.runKernel(W.wUP,Ae,nt)}const Nu=(0,I.op)({conv2DBackpropFilter_:$u});var Tn=S(3608);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rr({x:y,filter:h,strides:d,pad:v,dataFormat:w="NHWC",dilations:_=[1,1],dimRoundingMode:F,bias:G,activation:ie="linear",preluActivationWeights:pe,leakyreluAlpha:De}){if(ie=ie||"linear",(0,Tn.uy)(R.BV.state.gradientDepth,ie)===!1){b.hu(w==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${w} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let Rt=Gn(y,h,d,v,w,_,F);return G!=null&&(Rt=(0,D.I)(Rt,G)),(0,Tn.QH)(Rt,ie,pe,De)}const Ae=(0,x._1)(y,"x","conv2d","float32"),nt=(0,x._1)(h,"filter","conv2d","float32");let dt=Ae,pt=!1;Ae.rank===3&&(pt=!0,dt=(0,H.X)(Ae,[1,Ae.shape[0],Ae.shape[1],Ae.shape[2]])),b.hu(dt.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${dt.rank}.`),b.hu(nt.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${nt.rank}.`),X.m("fused conv2d",v,F);const $t=w==="NHWC"?dt.shape[3]:dt.shape[1];b.hu(nt.shape[2]===$t,()=>`Error in conv2d: depth of input (${$t}) must match input depth for filter ${nt.shape[2]}.`),b.hu(X.jT(d,_),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${d} and dilations '${_}'`);const xt=X.Ix(dt.shape,nt.shape,d,_,v,F);let At;G!=null&&(At=(0,x._1)(G,"bias","fused conv2d"),[At]=(0,p.T_)(At,Ae),w==="NHWC"?qt.assertAndGetBroadcastShape(xt.outShape,At.shape):(b.hu(At.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${At.shape.length}.`),b.hu(At.shape.length===0||At.shape[0]===xt.outChannels||At.shape[0]===1,()=>`Error in fused conv2d: bias shape (${At.shape}) is not compatible with the number of output channels (${xt.outChannels})`)));let on;if(pe!=null){const Rt=pe.shape;if(b.hu(Rt.length<=1||Rt.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${Rt.length}.`),Rt.length===1)b.hu(Rt[0]===1||Rt[0]===xt.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${Rt}) is not compatible with the number of output channels (${xt.outChannels}).`);else if(Rt.length===3)try{qt.assertAndGetBroadcastShape(Rt,xt.outShape)}catch{const Ht=`Error in fused conv2d: PReLU activation weights (${Rt}) is not compatible with the output shape of the conv2d (${xt.outShape}).`;throw Error(Ht)}on=(0,x._1)(pe,"prelu weights","fused conv2d")}const rn=(Rt,Zt)=>{b.hu(w==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${w} but only NHWC is currently supported.`);const[Ht,Wt,Mt,Xt]=Zt,Rn=(0,Tn.Fr)(Rt,Mt,ie);b.hu(X.I0(_),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${_}'`);const Sn=Bs(Wt.shape,Rn,Ht,d,v),$n=Nu(Wt,Rn,Ht.shape,d,v),Wn=[Sn,$n];if(Xt!=null){const ar=(0,Tn.pf)(Xt,Rn);Wn.push(ar)}return Wn},jt={x:dt,filter:nt,bias:At,preluActivationWeights:on},nn={strides:d,pad:v,dataFormat:w,dilations:_,dimRoundingMode:F,activation:ie,leakyreluAlpha:De};return G==null?(0,jn.cb)((Zt,Ht,Wt)=>{let Mt=R.BV.runKernel(W._V0,jt,nn);return Wt([Ht,Zt,Mt]),pt&&(Mt=(0,H.X)(Mt,[Mt.shape[1],Mt.shape[2],Mt.shape[3]])),{value:Mt,gradFunc:rn}})(dt,nt):(0,jn.cb)((Zt,Ht,Wt,Mt)=>{let Xt=R.BV.runKernel(W._V0,jt,nn);return Mt([Ht,Zt,Xt,Wt]),pt&&(Xt=(0,H.X)(Xt,[Xt.shape[1],Xt.shape[2],Xt.shape[3]])),{value:Xt,gradFunc:rn}})(dt,nt,At)}const Ar=(0,I.op)({fusedConv2d_:Rr});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iu(y,h,d,v,w,_=[1,1],F){let G=y;y.rank===3&&(G=(0,H.X)(y,[1,y.shape[0],y.shape[1],y.shape[2]]));let ie=h;ie.rank===3&&(ie=(0,H.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]));const pe={x:G,dy:ie},De={strides:v,pad:w,dimRoundingMode:F,dilations:_,filterShape:d};return R.BV.runKernel(W.sL$,pe,De)}const sr=(0,I.op)({depthwiseConv2dNativeBackpropFilter_:Iu});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _u(y,h,d,v,w,_=[1,1],F){let G=h,ie=!1;h.rank===3&&(ie=!0,G=(0,H.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]));const pe={dy:G,filter:d},De={strides:v,pad:w,dimRoundingMode:F,dilations:_,inputShape:y},Ae=R.BV.runKernel(W.y7R,pe,De);return ie?(0,H.X)(Ae,[Ae.shape[1],Ae.shape[2],Ae.shape[3]]):Ae}const Wa=(0,I.op)({depthwiseConv2dNativeBackpropInput_:_u});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Du({x:y,filter:h,strides:d,pad:v,dataFormat:w="NHWC",dilations:_=[1,1],dimRoundingMode:F,bias:G,activation:ie="linear",preluActivationWeights:pe,leakyreluAlpha:De}){if((0,Tn.uy)(R.BV.state.gradientDepth,ie)===!1){let nn=hs(y,h,d,v,w,_,F);return G!=null&&(nn=(0,D.I)(nn,G)),(0,Tn.QH)(nn,ie,pe,De)}const Ae=(0,x._1)(y,"x","depthwiseConv2d","float32"),nt=(0,x._1)(h,"filter","depthwiseConv2d","float32");let dt=Ae,pt=!1;Ae.rank===3&&(pt=!0,dt=(0,H.X)(Ae,[1,Ae.shape[0],Ae.shape[1],Ae.shape[2]])),b.hu(dt.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${dt.rank}.`),b.hu(nt.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${nt.rank}.`),b.hu(dt.shape[3]===nt.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${dt.shape[3]}) must match the inChannels dimension in filter ${nt.shape[2]}.`),_==null&&(_=[1,1]),b.hu(X.jT(d,_),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${d} and dilations '${_}'`),X.m("fused depthwiseConv2d",v,F);const $t=X.Ix(dt.shape,nt.shape,d,_,v,F,!0);let xt;G!=null&&(xt=(0,x._1)(G,"bias","fused conv2d"),[xt]=(0,p.T_)(xt,Ae),qt.assertAndGetBroadcastShape($t.outShape,xt.shape));let At;pe!=null&&(At=(0,x._1)(pe,"prelu weights","fused depthwiseConv2d"));const on=(nn,Rt)=>{b.hu(X.I0(_),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${_}'`);const[Zt,Ht,Wt,Mt]=Rt,Xt=(0,Tn.Fr)(nn,Wt,ie),Rn=Wa(Ht.shape,Xt,Zt,d,v,_,F),Sn=sr(Ht,Xt,Zt.shape,d,v,_,F);if(Mt!=null){const $n=(0,Tn.pf)(xt,Xt);return[Rn,Sn,$n]}return[Rn,Sn]},rn={x:dt,filter:nt,bias:xt,preluActivationWeights:At},jt={strides:d,pad:v,dataFormat:w,dilations:_,dimRoundingMode:F,activation:ie,leakyreluAlpha:De};return G==null?(0,jn.cb)((Rt,Zt,Ht)=>{let Wt=R.BV.runKernel(W.luS,rn,jt);return Ht([Zt,Rt,Wt]),pt&&(Wt=(0,H.X)(Wt,[Wt.shape[1],Wt.shape[2],Wt.shape[3]])),{value:Wt,gradFunc:on}})(dt,nt):(0,jn.cb)((Rt,Zt,Ht,Wt)=>{let Mt=R.BV.runKernel(W.luS,rn,jt);return Wt([Zt,Rt,Mt,Ht]),pt&&(Mt=(0,H.X)(Mt,[Mt.shape[1],Mt.shape[2],Mt.shape[3]])),{value:Mt,gradFunc:on}})(dt,nt,xt)}const Ma=(0,I.op)({fusedDepthwiseConv2d_:Du});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ou({a:y,b:h,transposeA:d=!1,transposeB:v=!1,bias:w,activation:_="linear",preluActivationWeights:F,leakyreluAlpha:G=.2}){if((0,Tn.uy)(R.BV.state.gradientDepth,_)===!1){let Xt=rt(y,h,d,v);return w!=null&&(Xt=(0,D.I)(Xt,w)),(0,Tn.QH)(Xt,_,F,G)}let ie=(0,x._1)(y,"a","fused matMul"),pe=(0,x._1)(h,"b","fused matMul");[ie,pe]=(0,p.T_)(ie,pe);const De=d?ie.shape[ie.rank-2]:ie.shape[ie.rank-1],Ae=v?pe.shape[pe.rank-1]:pe.shape[pe.rank-2],nt=d?ie.shape[ie.rank-1]:ie.shape[ie.rank-2],dt=v?pe.shape[pe.rank-2]:pe.shape[pe.rank-1],pt=ie.shape.slice(0,-2),$t=pe.shape.slice(0,-2),xt=b.NA(pt),At=b.NA($t);b.hu(De===Ae,()=>`Error in fused matMul: inner shapes (${De}) and (${Ae}) of Tensors with shapes ${ie.shape} and ${pe.shape} and transposeA=${d} and transposeB=${v} must match.`);const rn=qt.assertAndGetBroadcastShape(ie.shape.slice(0,-2),pe.shape.slice(0,-2)).concat([nt,dt]),jt=d?(0,H.X)(ie,[xt,De,nt]):(0,H.X)(ie,[xt,nt,De]),nn=v?(0,H.X)(pe,[At,dt,Ae]):(0,H.X)(pe,[At,Ae,dt]);let Rt;w!=null&&(Rt=(0,x._1)(w,"bias","fused matMul"),[Rt]=(0,p.T_)(Rt,ie),qt.assertAndGetBroadcastShape(rn,Rt.shape));let Zt;F!=null&&(Zt=(0,x._1)(F,"prelu weights","fused matMul"));const Ht=(Xt,Rn)=>{const[Sn,$n,Wn,ar]=Rn,is=(0,Tn.Fr)((0,H.X)(Xt,Wn.shape),Wn,_);let ks,Ps;if(!d&&!v?(ks=rt(is,$n,!1,!0),Ps=rt(Sn,is,!0,!1)):!d&&v?(ks=rt(is,$n,!1,!1),Ps=rt(is,Sn,!0,!1)):d&&!v?(ks=rt($n,is,!1,!0),Ps=rt(Sn,is,!1,!1)):(ks=rt($n,is,!0,!0),Ps=rt(is,Sn,!0,!0)),w!=null){const Gl=(0,Tn.pf)(ar,is);return[ks,Ps,Gl]}else return[ks,Ps]},Wt={a:jt,b:nn,bias:Rt,preluActivationWeights:Zt},Mt={transposeA:d,transposeB:v,activation:_,leakyreluAlpha:G};return w==null?(0,jn.cb)((Rn,Sn,$n)=>{const Wn=R.BV.runKernel(W.usg,Wt,Mt);return $n([Rn,Sn,Wn]),{value:(0,H.X)(Wn,rn),gradFunc:Ht}})(jt,nn):(0,jn.cb)((Rn,Sn,$n,Wn)=>{const ar=R.BV.runKernel(W.usg,Wt,Mt);return Wn([Rn,Sn,ar,$n]),{value:(0,H.X)(ar,rn),gradFunc:Ht}})(jt,nn,Rt)}const za=(0,I.op)({fusedMatMul_:Ou});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ru(y){return oa(y,.54,.46)}const kr=(0,I.op)({hammingWindow_:Ru});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ga(y){return oa(y,.5,.5)}const ia=(0,I.op)({hannWindow_:Ga});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Au(y,h,d,v=!1,w=0){let _=0;const F=[];for(;_+h<=y.size;)F.push(oe(y,_,h)),_+=d;if(v)for(;_<y.size;){const G=_+h-y.size,ie=je([oe(y,_,h-G),(0,We.h)([G],w)]);F.push(ie),_+=d}return F.length===0?tr([],[0,h]):(0,H.X)(je(F),[F.length,h])}const Ka=(0,I.op)({frame_:Au});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(y,h,d,v,w=ia){v==null&&(v=Ua(h));const _=Ka(y,h,d),F=(0,Qe.d)(_,w(h));return Jr(F,v)}const Pu=(0,I.op)({stft_:ku});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fu(y,h,d,v,w="bilinear",_=0){const F=(0,x._1)(y,"image","cropAndResize"),G=(0,x._1)(h,"boxes","cropAndResize","float32"),ie=(0,x._1)(d,"boxInd","cropAndResize","int32"),pe=G.shape[0];b.hu(F.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${F.rank}.`),b.hu(G.rank===2&&G.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${pe},4] but had shape ${G.shape}.`),b.hu(ie.rank===1&&ie.shape[0]===pe,()=>`Error in cropAndResize: boxInd must be have size [${pe}] but had shape ${G.shape}.`),b.hu(v.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${v.length}.`),b.hu(v[0]>=1&&v[1]>=1,()=>`cropSize must be atleast [1,1], but was ${v}`),b.hu(w==="bilinear"||w==="nearest",()=>`method must be bilinear or nearest, but was ${w}`);const De={image:F,boxes:G,boxInd:ie},Ae={method:w,extrapolationValue:_,cropSize:v};return R.BV.runKernel(W.VcC,De,Ae)}const Bu=(0,I.op)({cropAndResize_:Fu});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lu(y){const h=(0,x._1)(y,"image","flipLeftRight","float32");b.hu(h.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${h.rank}.`);const d={image:h};return R.BV.runKernel(W.Uyb,d,{})}const Uu=(0,I.op)({flipLeftRight_:Lu});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vu(y){const h=(0,x._1)(y,"image","grayscaleToRGB"),d=h.rank-1,v=h.shape[d];b.hu(h.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${h.rank}.`),b.hu(v===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${v}.`);const w=new Array(h.rank);return w.fill(1,0,d),w[d]=3,ue(h,w)}const Wu=(0,I.op)({grayscaleToRGB_:Vu});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mu(y){const h=(0,x._1)(y,"image","RGBToGrayscale"),d=h.rank-1,v=h.shape[d];b.hu(h.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${h.rank}.`),b.hu(v===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${v}.`);const w=h.dtype,_=(0,k.p)(h,"float32"),F=Cn([.2989,.587,.114]);let G;switch(h.rank){case 2:G=Dn("ij,j->i",_,F);break;case 3:G=Dn("ijk,k->ij",_,F);break;case 4:G=Dn("ijkl,l->ijk",_,F);break;case 5:G=Dn("ijklm,m->ijkl",_,F);break;case 6:G=Dn("ijklmn,n->ijklm",_,F);break;default:throw new Error("Not a valid tensor rank.")}return G=$(G,-1),(0,k.p)(G,w)}const zu=(0,I.op)({rgbToGrayscale_:Mu});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gu(y,h,d=0,v=.5){const w=(0,x._1)(y,"image","rotateWithOffset","float32");b.hu(w.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${w.rank}.`);const _={image:w},F={radians:h,fillValue:d,center:v};return R.BV.runKernel(W.b9H,_,F)}const Ku=(0,I.op)({rotateWithOffset_:Gu});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(y,h,d,v,w,_){v==null&&(v=.5),w==null&&(w=Number.NEGATIVE_INFINITY),_==null&&(_=0);const F=y.shape[0];return d=Math.min(d,F),b.hu(0<=v&&v<=1,()=>`iouThreshold must be in [0, 1], but was '${v}'`),b.hu(y.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${y.rank}'`),b.hu(y.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${y.shape[1]}`),b.hu(h.rank===1,()=>"scores must be a 1D tensor"),b.hu(h.shape[0]===F,()=>`scores has incompatible shape with boxes. Expected ${F}, but was ${h.shape[0]}`),b.hu(0<=_&&_<=1,()=>`softNmsSigma must be in [0, 1], but was '${_}'`),{maxOutputSize:d,iouThreshold:v,scoreThreshold:w,softNmsSigma:_}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hu(y,h,d,v=.5,w=Number.NEGATIVE_INFINITY){const _=(0,x._1)(y,"boxes","nonMaxSuppression","float32"),F=(0,x._1)(h,"scores","nonMaxSuppression","float32"),G=As(_,F,d,v,w);d=G.maxOutputSize,v=G.iouThreshold,w=G.scoreThreshold;const ie={maxOutputSize:d,iouThreshold:v,scoreThreshold:w};return R.BV.runKernel(W.uv1,{boxes:_,scores:F},ie)}const ju=(0,I.op)({nonMaxSuppression_:Hu});var ua=S(8135);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Xu(y,h,d,v=.5,w=Number.NEGATIVE_INFINITY){const _=(0,x._1)(y,"boxes","nonMaxSuppressionAsync"),F=(0,x._1)(h,"scores","nonMaxSuppressionAsync"),G=As(_,F,d,v,w);d=G.maxOutputSize,v=G.iouThreshold,w=G.scoreThreshold;const ie=await Promise.all([_.data(),F.data()]),pe=ie[0],De=ie[1],{selectedIndices:Ae}=(0,ua.GP)(pe,De,d,v,w);return _!==y&&_.dispose(),F!==h&&F.dispose(),Cn(Ae,"int32")}const Yu=Xu;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qu(y,h,d,v=.5,w=Number.NEGATIVE_INFINITY,_=0){const F=(0,x._1)(y,"boxes","nonMaxSuppression"),G=(0,x._1)(h,"scores","nonMaxSuppression"),ie=As(F,G,d,v,w,_);d=ie.maxOutputSize,v=ie.iouThreshold,w=ie.scoreThreshold,_=ie.softNmsSigma;const pe={boxes:F,scores:G},De={maxOutputSize:d,iouThreshold:v,scoreThreshold:w,softNmsSigma:_},Ae=R.BV.runKernel(W.W0H,pe,De);return{selectedIndices:Ae[0],selectedScores:Ae[1]}}const Jl=(0,I.op)({nonMaxSuppressionWithScore_:Qu});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qu(y,h,d,v=.5,w=Number.NEGATIVE_INFINITY,_=0){const F=(0,x._1)(y,"boxes","nonMaxSuppressionAsync"),G=(0,x._1)(h,"scores","nonMaxSuppressionAsync"),ie=As(F,G,d,v,w,_);d=ie.maxOutputSize,v=ie.iouThreshold,w=ie.scoreThreshold,_=ie.softNmsSigma;const pe=await Promise.all([F.data(),G.data()]),De=pe[0],Ae=pe[1],{selectedIndices:nt,selectedScores:dt}=(0,ua.pA)(De,Ae,d,v,w,_);return F!==y&&F.dispose(),G!==h&&G.dispose(),{selectedIndices:Cn(nt,"int32"),selectedScores:Cn(dt)}}const Zu=qu;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ju(y,h,d,v=.5,w=Number.NEGATIVE_INFINITY,_=!1){const F=(0,x._1)(y,"boxes","nonMaxSuppression"),G=(0,x._1)(h,"scores","nonMaxSuppression"),ie=As(F,G,d,v,w,null),pe=ie.maxOutputSize,De=ie.iouThreshold,Ae=ie.scoreThreshold,nt={boxes:F,scores:G},dt={maxOutputSize:pe,iouThreshold:De,scoreThreshold:Ae,padToMaxOutputSize:_},pt=R.BV.runKernel(W.cye,nt,dt);return{selectedIndices:pt[0],validOutputs:pt[1]}}const el=(0,I.op)({nonMaxSuppressionPadded_:Ju});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function tl(y,h,d,v=.5,w=Number.NEGATIVE_INFINITY,_=!1){const F=(0,x._1)(y,"boxes","nonMaxSuppressionAsync"),G=(0,x._1)(h,"scores","nonMaxSuppressionAsync"),ie=As(F,G,d,v,w,null),pe=ie.maxOutputSize,De=ie.iouThreshold,Ae=ie.scoreThreshold,[nt,dt]=await Promise.all([F.data(),G.data()]),{selectedIndices:pt,validOutputs:$t}=(0,ua.qP)(nt,dt,pe,De,Ae,_);return F!==y&&F.dispose(),G!==h&&G.dispose(),{selectedIndices:Cn(pt,"int32"),validOutputs:(0,ne.i)($t,"int32")}}const rr=tl;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ha(y,h,d=!1,v=!1){const w=(0,x._1)(y,"images","resizeBilinear");b.hu(w.rank===3||w.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${w.rank}.`),b.hu(h.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${h}.`),b.hu(v===!1||d===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let _=w,F=!1;w.rank===3&&(F=!0,_=(0,H.X)(w,[1,w.shape[0],w.shape[1],w.shape[2]]));const[]=h,G={images:_},ie={alignCorners:d,halfPixelCenters:v,size:h},pe=R.BV.runKernel(W._Yw,G,ie);return F?(0,H.X)(pe,[pe.shape[1],pe.shape[2],pe.shape[3]]):pe}const ja=(0,I.op)({resizeBilinear_:Ha});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(y,h,d=!1,v=!1){const w=(0,x._1)(y,"images","resizeNearestNeighbor");b.hu(w.rank===3||w.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${w.rank}.`),b.hu(h.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${h}.`),b.hu(w.dtype==="float32"||w.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),b.hu(v===!1||d===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let _=w,F=!1;w.rank===3&&(F=!0,_=(0,H.X)(w,[1,w.shape[0],w.shape[1],w.shape[2]]));const[]=h,G={images:_},ie={alignCorners:d,halfPixelCenters:v,size:h},pe=R.BV.runKernel(W.dpD,G,ie);return F?(0,H.X)(pe,[pe.shape[1],pe.shape[2],pe.shape[3]]):pe}const Ya=(0,I.op)({resizeNearestNeighbor_:Xa});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nl(y,h="binary",d=!1,v=.5){const w=(0,x._1)(y,"image","threshold"),_=.2989,F=.587,G=.114,ie=w.shape[0]*w.shape[1];let pe=(0,Qe.d)(Cn([v]),255),De,Ae,nt,dt;if(b.hu(w.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${w.rank}.`),b.hu(w.shape[2]===3||w.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${w.shape[2]}.`),b.hu(w.dtype==="int32"||w.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${w.dtype}.`),b.hu(h==="otsu"||h==="binary",()=>`Method must be binary or otsu, but was ${h}`),w.shape[2]===3){[De,Ae,nt]=Zs(w,[1,1,1],-1);const xt=(0,Qe.d)(De,_),At=(0,Qe.d)(Ae,F),on=(0,Qe.d)(nt,G);dt=(0,D.I)((0,D.I)(xt,At),on)}else dt=y;if(h==="otsu"){const xt=zn((0,k.p)(Ia(dt),"int32"),(0,ta.X)([]),256);pe=sl(xt,ie)}const pt=d?zr(dt,pe):St(dt,pe);return(0,k.p)((0,Qe.d)(pt,255),"int32")}function sl(y,h){let d=Cn([-1]),v=Cn([0]),w=Cn([0]),_,F,G,ie,pe,De;for(let Ae=0;Ae<y.size-1;Ae++){_=oe(y,0,Ae+1),F=oe(y,Ae+1),pe=(0,tn.h)((0,be.S)(_),h),De=(0,tn.h)((0,be.S)(F),h);const nt=(0,be.S)((0,Qe.d)(_,qs(0,_.size)));G=(0,tn.h)(nt,(0,be.S)(_));const dt=(0,We.h)(F.shape,_.size),pt=(0,D.I)(qs(0,F.size),dt),$t=(0,Qe.d)(F,pt);ie=(0,tn.h)((0,be.S)($t),(0,be.S)(F));const xt=(0,Bt.l)(G,ie),At=(0,Bt.l)(G,ie),on=(0,Qe.d)(pe,De);w=(0,Qe.d)((0,Qe.d)(on,xt),At);const rn=St(w,v);v=dn(rn,w,v),d=dn(rn,Cn([Ae]),d)}return d}const rl=(0,I.op)({threshold_:nl});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function al(y,h,d="nearest",v="constant",w=0,_){const F=(0,x._1)(y,"image","transform","float32"),G=(0,x._1)(h,"transforms","transform","float32");b.hu(F.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${F.rank}.`),b.hu(G.rank===2&&(G.shape[0]===F.shape[0]||G.shape[0]===1)&&G.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),b.hu(_==null||_.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${_}.`);const ie={image:F,transforms:G},pe={interpolation:d,fillMode:v,fillValue:w,outputShape:_};return R.BV.runKernel(W.wx7,ie,pe)}const ol=(0,I.op)({transform_:al});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function il(y,h,d){const v=(0,x._1)(y,"a","bandPart");(0,b.hu)(v.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${v.rank}.`);const w=v.shape,[_,F]=v.shape.slice(-2);let G,ie;typeof h=="number"?((0,b.hu)(h%1===0,()=>`bandPart(): numLower must be an integer, got ${h}.`),(0,b.hu)(h<=_,()=>`bandPart(): numLower (${h}) must not be greater than the number of rows (${_}).`),G=(0,x._1)(h<0?_:h,"numLower","bandPart")):((0,b.hu)(h.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),G=dn(Mr(h,0),_,Ys(h,_))),typeof d=="number"?((0,b.hu)(d%1===0,()=>`bandPart(): numUpper must be an integer, got ${d}.`),(0,b.hu)(d<=F,()=>`bandPart(): numUpper (${d}) must not be greater than the number of columns (${F}).`),ie=(0,x._1)(d<0?F:d,"numUpper","bandPart")):((0,b.hu)(d.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),ie=dn(Mr(d,0),F,Ys(d,F)));const pe=(0,H.X)(qs(0,_,1,"int32"),[-1,1]),De=qs(0,F,1,"int32"),Ae=(0,Bt.l)(pe,De),nt=br(zr(Ae,G),En(Ae,Un(ie))),dt=Is([_,F],v.dtype);return(0,H.X)(bs(sa((0,H.X)(v,[-1,_,F])).map(pt=>dn(nt,pt,dt))),w)}const ul=(0,I.op)({bandPart_:il});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ll(y){let h;if(Array.isArray(y)){h=!1,(0,b.hu)(y!=null&&y.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const w=y[0].shape[0];for(let _=1;_<y.length;++_)(0,b.hu)(y[_].shape[0]===w,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${y[_].shape[0]} vs. ${w})`)}else h=!0,y=Zs(y,y.shape[0],0).map(w=>ea(w,[0]));(0,b.hu)(y.length<=y[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${y.length}) exceeds number of dimensions (${y[0].shape[0]}).`);const d=[],v=y;for(let w=0;w<y.length;++w)d.push(R.BV.tidy(()=>{let _=v[w];if(w>0)for(let F=0;F<w;++F){const G=(0,Qe.d)((0,be.S)((0,Qe.d)(d[F],_)),d[F]);_=(0,Bt.l)(_,G)}return(0,tn.h)(_,Ee(_,"euclidean"))}));return h?bs(d,0):d}const cl=(0,I.op)({gramSchmidt_:ll});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qa(y,h=!1){if((0,b.hu)(y.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${y.rank}`),y.rank===2)return la(y,h);{const d=y.shape.slice(0,y.shape.length-2).reduce((ie,pe)=>ie*pe),v=sa((0,H.X)(y,[d,y.shape[y.shape.length-2],y.shape[y.shape.length-1]]),0),w=[],_=[];v.forEach(ie=>{const[pe,De]=la(ie,h);w.push(pe),_.push(De)});const F=(0,H.X)(bs(w,0),y.shape),G=(0,H.X)(bs(_,0),y.shape);return[F,G]}}function la(y,h=!1){return R.BV.tidy(()=>{(0,b.hu)(y.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${y.shape.length}D Tensor.`);const d=y.shape[0],v=y.shape[1];let w=Ke(d),_=(0,me.d)(y);const F=tr([[1]],[1,1]);let G=(0,me.d)(F);const ie=d>=v?v:d;for(let pe=0;pe<ie;++pe){const De=_,Ae=G,nt=w;[G,_,w]=R.BV.tidy(()=>{const dt=oe(_,[pe,pe],[d-pe,1]),pt=Ee(dt),$t=oe(_,[pe,pe],[1,1]),xt=dn(St($t,0),tr([[-1]]),tr([[1]])),At=(0,Bt.l)($t,(0,Qe.d)(xt,pt)),on=(0,tn.h)(dt,At);on.shape[0]===1?G=(0,me.d)(F):G=je([F,oe(on,[1,0],[on.shape[0]-1,on.shape[1]])],0);const rn=Un((0,tn.h)(rt(xt,At),pt)),jt=oe(_,[pe,0],[d-pe,v]),nn=(0,Qe.d)(rn,G),Rt=ra(G);if(pe===0)_=(0,Bt.l)(jt,rt(nn,rt(Rt,jt)));else{const Wt=(0,Bt.l)(jt,rt(nn,rt(Rt,jt)));_=je([oe(_,[0,0],[pe,v]),Wt],0)}const Zt=ra(nn),Ht=oe(w,[0,pe],[d,w.shape[1]-pe]);if(pe===0)w=(0,Bt.l)(Ht,rt(rt(Ht,G),Zt));else{const Wt=(0,Bt.l)(Ht,rt(rt(Ht,G),Zt));w=je([oe(w,[0,0],[d,pe]),Wt],1)}return[G,_,w]}),(0,mu.B9)([De,Ae,nt])}return!h&&d>v&&(w=oe(w,[0,0],[d,v]),_=oe(_,[0,0],[v,v])),[w,_]})}const dl=(0,I.op)({qr_:Qa});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var yn;(function(y){y[y.NONE=0]="NONE",y[y.MEAN=1]="MEAN",y[y.SUM=2]="SUM",y[y.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(yn||(yn={}));function pl(y,h,d=yn.SUM_BY_NONZERO_WEIGHTS){const v=(0,x._1)(y,"losses","computeWeightedLoss");let w=null;h!=null&&(w=(0,x._1)(h,"weights","computeWeightedLoss"));const _=w==null?v:(0,Qe.d)(v,w);if(d===yn.NONE)return _;if(d===yn.SUM)return(0,be.S)(_);if(d===yn.MEAN){if(w==null)return wr(_);{const F=v.size/w.size,G=(0,tn.h)((0,be.S)(_),(0,be.S)(w));return F>1?(0,tn.h)(G,(0,ne.i)(F)):G}}if(d===yn.SUM_BY_NONZERO_WEIGHTS){if(w==null)return(0,tn.h)((0,be.S)(_),(0,ne.i)(v.size));{const F=(0,Qe.d)(w,ms(v.shape)),G=(0,k.p)((0,be.S)(xa(F,(0,ne.i)(0))),"float32");return(0,tn.h)((0,be.S)(_),G)}}throw Error(`Unknown reduction: ${d}`)}const Xn=(0,I.op)({computeWeightedLoss_:pl});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hl(y,h,d,v=yn.SUM_BY_NONZERO_WEIGHTS){const w=(0,x._1)(y,"labels","absoluteDifference"),_=(0,x._1)(h,"predictions","absoluteDifference");let F=null;d!=null&&(F=(0,x._1)(d,"weights","absoluteDifference")),(0,b.k5)(w.shape,_.shape,"Error in absoluteDifference: ");const G=(0,he.W)((0,Bt.l)(w,_));return Xn(G,F,v)}const fl=(0,I.op)({absoluteDifference_:hl});function ml(y,h,d,v,w=yn.SUM_BY_NONZERO_WEIGHTS){const _=(0,x._1)(y,"labels","cosineDistance"),F=(0,x._1)(h,"predictions","cosineDistance");let G=null;v!=null&&(G=(0,x._1)(v,"weights","cosineDistance")),(0,b.k5)(_.shape,F.shape,"Error in cosineDistance: ");const ie=(0,ne.i)(1),pe=(0,Bt.l)(ie,(0,be.S)((0,Qe.d)(_,F),d,!0));return Xn(pe,G,w)}const gl=(0,I.op)({cosineDistance_:ml});function yl(y,h,d,v=yn.SUM_BY_NONZERO_WEIGHTS){let w=(0,x._1)(y,"labels","hingeLoss");const _=(0,x._1)(h,"predictions","hingeLoss");let F=null;d!=null&&(F=(0,x._1)(d,"weights","hingeLoss")),(0,b.k5)(w.shape,_.shape,"Error in hingeLoss: ");const G=(0,ne.i)(1);w=(0,Bt.l)((0,Qe.d)((0,ne.i)(2),w),G);const ie=(0,qr.U)((0,Bt.l)(G,(0,Qe.d)(w,_)));return Xn(ie,F,v)}const xl=(0,I.op)({hingeLoss_:yl});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bl(y,h,d,v=1,w=yn.SUM_BY_NONZERO_WEIGHTS){const _=(0,x._1)(y,"labels","huberLoss"),F=(0,x._1)(h,"predictions","huberLoss");let G=null;d!=null&&(G=(0,x._1)(d,"weights","huberLoss")),(0,b.k5)(_.shape,F.shape,"Error in huberLoss: ");const ie=(0,ne.i)(v),pe=(0,he.W)((0,Bt.l)(F,_)),De=Ys(pe,ie),Ae=(0,Bt.l)(pe,De),nt=(0,D.I)((0,Qe.d)((0,ne.i)(.5),(0,xe.h)(De)),(0,Qe.d)(ie,Ae));return Xn(nt,G,w)}const vl=(0,I.op)({huberLoss_:bl});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function El(y,h,d,v=1e-7,w=yn.SUM_BY_NONZERO_WEIGHTS){const _=(0,x._1)(y,"labels","logLoss"),F=(0,x._1)(h,"predictions","logLoss");let G=null;d!=null&&(G=(0,x._1)(d,"weights","logLoss")),(0,b.k5)(_.shape,F.shape,"Error in logLoss: ");const ie=(0,ne.i)(1),pe=(0,ne.i)(v),De=Un((0,Qe.d)(_,Xs((0,D.I)(F,pe)))),Ae=(0,Qe.d)((0,Bt.l)(ie,_),Xs((0,D.I)((0,Bt.l)(ie,F),pe))),nt=(0,Bt.l)(De,Ae);return Xn(nt,G,w)}const wl=(0,I.op)({logLoss_:El});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cl(y,h,d,v=yn.SUM_BY_NONZERO_WEIGHTS){const w=(0,x._1)(y,"labels","meanSquaredError"),_=(0,x._1)(h,"predictions","meanSquaredError");let F=null;d!=null&&(F=(0,x._1)(d,"weights","meanSquaredError")),(0,b.k5)(w.shape,_.shape,"Error in meanSquaredError: ");const G=ka(w,_);return Xn(G,F,v)}const Tl=(0,I.op)({meanSquaredError_:Cl});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ec(y,h){const d=(0,x._1)(y,"labels","sigmoidCrossEntropyWithLogits"),v=(0,x._1)(h,"logits","sigmoidCrossEntropyWithLogits");(0,b.k5)(d.shape,v.shape,"Error in sigmoidCrossEntropyWithLogits: ");const w=(0,qr.U)(v),_=(0,Qe.d)(v,d),F=da(o(Un((0,he.W)(v))));return(0,D.I)((0,Bt.l)(w,_),F)}function tc(y,h,d,v=0,w=yn.SUM_BY_NONZERO_WEIGHTS){let _=(0,x._1)(y,"multiClassLabels","sigmoidCrossEntropy");const F=(0,x._1)(h,"logits","sigmoidCrossEntropy");let G=null;if(d!=null&&(G=(0,x._1)(d,"weights","sigmoidCrossEntropy")),(0,b.k5)(_.shape,F.shape,"Error in sigmoidCrossEntropy: "),v>0){const pe=(0,ne.i)(v),De=(0,ne.i)(1),Ae=(0,ne.i)(.5);_=(0,D.I)((0,Qe.d)(_,(0,Bt.l)(De,pe)),(0,Qe.d)(Ae,pe))}const ie=ec(_,F);return Xn(ie,G,w)}const Sl=(0,I.op)({sigmoidCrossEntropy_:tc});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $l(y,h,d=-1){if(d===-1&&(d=h.rank-1),d!==h.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${h.rank} and dim was ${d}`);return(0,jn.cb)((w,_,F)=>{const ie=Gr(_,[d],!0),pe=(0,Bt.l)((0,k.p)(_,"float32"),ie);F([w,pe]);const De=Un((0,Qe.d)(pe,w));return{value:(0,be.S)(De,[d]),gradFunc:(dt,pt)=>{const[$t,xt]=pt,At=(0,Hn.rv)(dt.shape,[d]);return[(0,Qe.d)((0,H.X)(dt,At),(0,Bt.l)((0,k.p)($t,"float32"),o(xt))),(0,Qe.d)((0,H.X)(dt,At),(0,Bt.l)(o(xt),(0,k.p)($t,"float32")))]}}})(y,h)}function Nl(y,h,d,v=0,w=yn.SUM_BY_NONZERO_WEIGHTS){let _=(0,x._1)(y,"onehotLabels","softmaxCrossEntropy");const F=(0,x._1)(h,"logits","softmaxCrossEntropy");let G=null;if(d!=null&&(G=(0,x._1)(d,"weights","softmaxCrossEntropy")),(0,b.k5)(_.shape,F.shape,"Error in softmaxCrossEntropy: "),v>0){const pe=(0,ne.i)(v),De=(0,ne.i)(1),Ae=(0,ne.i)(_.shape[1]);_=(0,D.I)((0,Qe.d)(_,(0,Bt.l)(De,pe)),(0,tn.h)(pe,Ae))}const ie=$l(_,F);return Xn(ie,G,w)}const Il=(0,I.op)({softmaxCrossEntropy_:Nl});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _l(y,h,d,v){const w=(0,x._1)(y,"indices","sparseFillEmptyRows","int32"),_=(0,x._1)(h,"values","sparseFillEmptyRows"),F=(0,x._1)(d,"denseShape","sparseFillEmptyRows","int32"),G=(0,x._1)(v,"defaultValue","sparseFillEmptyRows",_.dtype);if(w.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${w.shape}`);if(_.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${_.shape}`);if(F.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${F.shape}`);if(G.rank!==0)throw new Error(`Default value should be a scalar but received shape ${G.shape}`);const ie={indices:w,values:_,denseShape:F,defaultValue:G},pe=R.BV.runKernel(W.O3z,ie);return{outputIndices:pe[0],outputValues:pe[1],emptyRowIndicator:pe[2],reverseIndexMap:pe[3]}}const Dl=(0,I.op)({sparseFillEmptyRows_:_l});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nc(y,h,d){const v=(0,x._1)(y,"inputIndices","sparseReshape","int32"),w=(0,x._1)(h,"inputShape","sparseReshape","int32"),_=(0,x._1)(d,"newShape","sparseReshape","int32");if(v.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${v.shape}`);if(w.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${w.shape}`);if(_.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${_.shape}`);const F={inputIndices:v,inputShape:w,newShape:_},G=R.BV.runKernel(W.nhH,F);return{outputIndices:G[0],outputShape:G[1]}}const sc=(0,I.op)({sparseReshape_:nc});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ol(y,h,d){const v=(0,x._1)(y,"data","sparseSegmentMean"),w=(0,x._1)(h,"indices","sparseSegmentMean","int32"),_=(0,x._1)(d,"segmentIds","sparseSegmentMean","int32");if(v.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(w.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${w.shape}`);if(_.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${_.shape}`);const F={data:v,indices:w,segmentIds:_};return R.BV.runKernel(W.w3H,F)}const Rl=(0,I.op)({sparseSegmentMean_:Ol});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Al(y,h,d){const v=(0,x._1)(y,"data","sparseSegmentSum"),w=(0,x._1)(h,"indices","sparseSegmentSum","int32"),_=(0,x._1)(d,"segmentIds","sparseSegmentSum","int32");if(v.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(w.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${w.shape}`);if(_.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${_.shape}`);const F={data:v,indices:w,segmentIds:_};return R.BV.runKernel(W.ZjV,F)}const kl=(0,I.op)({sparseSegmentSum_:Al});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pl(y,h,d,v,w,_,F,G){const ie=(0,x._1)(y,"data","stringNGrams","string");if(ie.dtype!=="string")throw new Error("Data must be of datatype string");if(ie.shape.length!==1)throw new Error(`Data must be a vector, saw: ${ie.shape}`);const pe=(0,x._1)(h,"dataSplits","stringNGrams");if(pe.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const De={separator:d,nGramWidths:v,leftPad:w,rightPad:_,padWidth:F,preserveShortSequences:G},Ae={data:ie,dataSplits:pe},nt=R.BV.runKernel(W._JP,Ae,De);return{nGrams:nt[0],nGramsSplits:nt[1]}}const Fl=(0,I.op)({stringNGrams_:Pl});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rc(y,h,d=!0){const v=(0,x._1)(y,"input","stringSplit","string"),w=(0,x._1)(h,"delimiter","stringSplit","string");if(v.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${v.shape}`);if(w.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${w.shape}`);const _={skipEmpty:d},F={input:v,delimiter:w},G=R.BV.runKernel(W.s1s,F,_);return{indices:G[0],values:G[1],shape:G[2]}}const qa=(0,I.op)({stringSplit_:rc});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bl(y,h){const d=(0,x._1)(y,"input","stringToHashBucketFast","string"),v={numBuckets:h};if(h<=0)throw new Error("Number of buckets must be at least 1");const w={input:d};return R.BV.runKernel(W.XkS,w,v)}const ca=(0,I.op)({stringToHashBucketFast_:Bl});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ll(y,h,d,v=!0){const w=(0,x._1)(y,"input","staticRegexReplace","string"),_={pattern:h,rewrite:d,replaceGlobal:v};return R.BV.runKernel(W.e0R,{x:w},_)}const Za=(0,I.op)({staticRegexReplace_:Ll});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ul={fft:Zr,ifft:Or,rfft:Jr,irfft:Aa},Vl={hammingWindow:kr,hannWindow:ia,frame:Ka,stft:Pu},Ja={flipLeftRight:Uu,grayscaleToRGB:Wu,resizeNearestNeighbor:Ya,resizeBilinear:ja,rgbToGrayscale:zu,rotateWithOffset:Ku,cropAndResize:Bu,nonMaxSuppression:ju,nonMaxSuppressionAsync:Yu,nonMaxSuppressionWithScore:Jl,nonMaxSuppressionWithScoreAsync:Zu,nonMaxSuppressionPadded:el,nonMaxSuppressionPaddedAsync:rr,threshold:rl,transform:ol},eo={bandPart:ul,gramSchmidt:cl,qr:dl},Wl={absoluteDifference:fl,computeWeightedLoss:Xn,cosineDistance:gl,hingeLoss:xl,huberLoss:vl,logLoss:wl,meanSquaredError:Tl,sigmoidCrossEntropy:Sl,softmaxCrossEntropy:Il},Ml={sparseFillEmptyRows:Dl,sparseReshape:sc,sparseSegmentMean:Rl,sparseSegmentSum:kl},zl={stringNGrams:Fl,stringSplit:qa,stringToHashBucketFast:ca,staticRegexReplace:Za}},5650:function(st,ke,S){"use strict";S.d(ke,{s:()=>Y});var u=S(6201),he=S(4403),R=S(6802),W=S(6857),x=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(V,se){let J=(0,W._1)(V,"base","pow"),D=(0,W._1)(se,"exp","pow");[J,D]=(0,R.T_)(J,D);const b={a:J,b:D};return u.BV.runKernel(he.pe_,b)}const Y=(0,x.op)({pow_:I})},7966:function(st,ke,S){"use strict";S.d(ke,{A:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y,V){const se=(0,R._1)(Y,"x","prelu"),J=(0,R._1)(V,"alpha","prelu"),D={x:se,alpha:J};return u.BV.runKernel(he.o0g,D)}const I=(0,W.op)({prelu_:x})},2351:function(st,ke,S){"use strict";S.d(ke,{S:()=>u});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u(he,R=!1){console.log(he.toString(R))}},2124:function(st,ke,S){"use strict";S.d(ke,{U:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y){const se={x:(0,R._1)(Y,"x","relu")};return u.BV.runKernel(he.qkr,se)}const I=(0,W.op)({relu_:x})},656:function(st,ke,S){"use strict";S.d(ke,{b:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y){const se={x:(0,R._1)(Y,"x","relu6")};return u.BV.runKernel(he.SbG,se)}const I=(0,W.op)({relu6_:x})},1067:function(st,ke,S){"use strict";S.d(ke,{X:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y,V){const J={x:(0,R._1)(Y,"x","reshape","string_or_numeric")},D={shape:V};return u.BV.runKernel(he.HZH,J,D)}const I=(0,W.op)({reshape_:x})},528:function(st,ke,S){"use strict";S.d(ke,{i:()=>R});var u=S(2891),he=S(9790);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R(W,x){if(((0,u.isTypedArray)(W)&&x!=="string"||Array.isArray(W))&&x!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(x==="string"&&(0,u.isTypedArray)(W)&&!(W instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const I=[],Y=[];return(0,he.H)(W,I,Y,x)}},1820:function(st,ke,S){"use strict";S.d(ke,{SU:()=>W,b0:()=>R,l5:()=>he});var u=S(9024);function he(x,I,Y){const V=I.rank>1?I.shape[I.rank-1]:1,se=I.rank>1?I.rank-1:1,J=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${Y.shape}, indices.shape: ${I.shape}, shape: ${x}, sliceDim: ${V}, and batchDim: ${se}.`;if(Y.rank<se)throw new Error(J+` update.rank < ${se}. `);if(x.length<V+(Y.rank-se))throw new Error(J+` Output shape length < ${V+(Y.rank-se)}`);if(Y.rank!==se+x.length-V)throw new Error(J+` update.rank != ${se+x.length-V}`);for(let D=0;D<se;++D)if(Y.shape[D]!==I.shape[D])throw new Error(J+` updates.shape[${D}] (${Y.shape[D]}) != indices.shape[${D}] (${I.shape[D]}).`);for(let D=0;D<Y.rank-se;++D)if(Y.shape[D+se]!==x[D+V])throw new Error(J+` updates.shape[${D+se}] (${Y.shape[D+se]}) != shape[${D+se}] (${x[D+se]})`)}function R(x,I,Y){if(I.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${I.rank}.`);if(x.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${x.rank}.`);if(I.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${I.dtype}`);if(Y.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${Y}`);if(Y.length===0){if(I.size===0)throw new Error(`Indices specified for empty output. indices shape: ${I.shape}`);if(x.size===0)throw new Error(`Updates specified for empty output. updates shape: ${x.shape}`)}he(Y,I,x)}function W(x,I,Y){const V=I.shape.length,se=V>1?I.shape[V-1]:1,J=Y.length;let D=1;for(let Fe=se;Fe<J;++Fe)D*=Y[Fe];const b=se<1?1:se,te=(0,u.NA)(I.shape)/b,ge=[...(0,u.e3)(Y.slice(0,se)),1],$e=(0,u.NA)(Y);return{sliceRank:se,numUpdates:te,sliceSize:D,strides:ge,outputSize:$e}}},5466:function(st,ke,S){"use strict";S.d(ke,{X:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y){const se={x:(0,R._1)(Y,"x","sigmoid","float32")};return u.BV.runKernel(he.a5O,se)}const I=(0,W.op)({sigmoid_:x})},6130:function(st,ke,S){"use strict";S.r(ke),S.d(ke,{assertParamsValid:()=>W,computeFlatOffset:()=>Ve,computeOutShape:()=>I,getNormalizedAxes:()=>J,isSliceContinous:()=>Fe,maskToAxes:()=>x,parseSliceParams:()=>Ge,sliceInfo:()=>qe,startForAxis:()=>ge,startIndicesWithElidedDims:()=>D,stopForAxis:()=>$e,stopIndicesWithElidedDims:()=>b,stridesForAxis:()=>te,stridesWithElidedDims:()=>Y});var u=S(9024);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const he=-2,R=-1;function W(ye,z,N){const P=ye.shape.length;u.hu(P===z.length,()=>`Error in slice${P}D: Length of begin ${z} must match the rank of the array (${P}).`),u.hu(P===N.length,()=>`Error in slice${P}D: Length of size ${N} must match the rank of the array (${P}).`);for(let C=0;C<P;++C)u.hu(z[C]+N[C]<=ye.shape[C],()=>`Error in slice${P}D: begin[${C}] + size[${C}] (${z[C]+N[C]}) would overflow input.shape[${C}] (${ye.shape[C]})`)}function x(ye){const z=[];let N=0;for(;ye>0;)ye&1&&z.push(N),ye/=2,N++;return z}function I(ye,z,N){const P=[];for(let C=0;C<ye.length;C++)P[C]=Math.ceil((z[C]-ye[C])/N[C]);return P}function Y(ye,z,N,P){const C=[...ye];for(let Z=C.length;Z<P.length;Z++)C.push(1);for(let Z=0;Z<N;Z++)Z===0?C[z]=1:(C.splice(z,0,1),C.pop());return C}function V(ye,z,N){return N<=ye?N:N-(z-1)}function se(ye,z){const N=[];for(let P=0;P<ye;P++)N.push(z+P);return N}function J(ye,z,N,P,C,Z,re,p,Se){const Re=ye.length;let M=new Array(Re),ee=new Array(Re),k=new Array(Re);if(z.length&&N>0){const X=z[0],H=N+1;M=D(re,X,H,P,ye),ee=b(p,X,H,C,ye),k=Y(Z,X,H,ye)}else for(let X=0;X<Re;X++)M[X]=ge(re,P,Z,ye,X,Se),ee[X]=$e(p,C,Z,ye,X,Se),k[X]=te(Z,X,Se);return{begin:M,end:ee,strides:k}}function D(ye,z,N,P,C){const Z=[...C],re=se(N,z);for(let p=0;p<Z.length;p++)if(re.indexOf(p)>-1)Z[p]=0;else{const Se=V(z,N,p);let Re=P[Se];ye&1<<Se&&(Re=0),Z[p]=Re}return Z}function b(ye,z,N,P,C){const Z=[...C],re=se(N,z);for(let p=0;p<Z.length;p++)if(re.indexOf(p)>-1)Z[p]=Number.MAX_SAFE_INTEGER;else{const Se=V(z,N,p);let Re=P[Se];ye&1<<Se&&(Re=Number.MAX_SAFE_INTEGER),Z[p]=Re}for(let p=0;p<Z.length;p++){const Se=C[p];Z[p]<0&&(Z[p]+=Se),Z[p]=u.uZ(0,Z[p],C[p])}return Z}function te(ye,z,N){let P=ye[z];return(N&1<<z||P==null)&&(P=1),P}function ge(ye,z,N,P,C,Z){let re=z[C];const p=N[C]||1;(ye&1<<C||Z&1<<C||re==null)&&(p>0?re=Number.MIN_SAFE_INTEGER:re=Number.MAX_SAFE_INTEGER);const Se=P[C];return re<0&&(re+=Se),re=u.uZ(0,re,Se-1),re}function $e(ye,z,N,P,C,Z){let re=z[C];const p=N[C]||1;(ye&1<<C||Z&1<<C||re==null)&&(p>0?re=Number.MAX_SAFE_INTEGER:re=Number.MIN_SAFE_INTEGER);const Se=P[C];return re<0&&(re+=Se),p>0?re=u.uZ(0,re,Se):re=u.uZ(-1,re,Se-1),re}function Fe(ye,z,N){let P=N.length;for(let C=0;C<N.length;C++)if(N[C]>1){P=C;break}for(let C=P+1;C<N.length;C++)if(z[C]>0||N[C]!==ye[C])return!1;return!0}function Ve(ye,z){let N=ye.length>0?ye[ye.length-1]:1;for(let P=0;P<ye.length-1;P++)N+=ye[P]*z[P];return N}function Ge(ye,z,N){let P;const C=ye.shape.length;typeof z=="number"?P=[z,...new Array(C-1).fill(0)]:z.length<C?P=z.concat(new Array(C-z.length).fill(0)):P=z.slice(),P.forEach(re=>{u.hu(re!==-1,()=>"slice() does not support negative begin indexing.")});let Z;return N==null?Z=new Array(C).fill(-1):typeof N=="number"?Z=[N,...new Array(C-1).fill(-1)]:N.length<C?Z=N.concat(new Array(C-N.length).fill(-1)):Z=N,Z=Z.map((re,p)=>re>=0?re:(u.hu(re===-1,()=>`Negative size values should be exactly -1 but got ${re} for the slice() size at index ${p}.`),ye.shape[p]-P[p])),[P,Z]}function qe(ye,z,N,P,C,Z,re,p,Se){let Re;if(P==null?(Re=new Array(z.length),Re.fill(1)):Re=P,re!=null&&(re&re-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let M=!1;const ee={dims:Re.length,numAddAxisAfterEllipsis:0,begin:z.slice(),end:N.slice(),strides:Re.slice(),beginMask:C,endMask:Z,ellipsisMask:re,newAxisMask:p,shrinkAxisMask:Se};for(let me=0;me<ee.dims;me++)M&&(1<<me&p)!==0&&ee.numAddAxisAfterEllipsis++,1<<me&re&&(M=!0);M||(ee.ellipsisMask|=1<<ee.dims,ee.dims++);const k={dims:ye.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};He(ee,k);let X=!0,H=!0,we=!0;const Pe=[],Ye=[];for(let me=0;me<ye.length;++me){if(k.strides[me]===0)throw Error(`strides[${me}] must be non-zero`);const Ue=!!(k.shrinkAxisMask&1<<me),je=ye[me];if(je===-1){Pe.push(Ue?1:-1);continue}const at=[k.beginMask&1<<me,k.endMask&1<<me],rt=[k.strides[me]>0?0:-1,k.strides[me]>0?je:je-1];if(Ue&&k.strides[me]<=0)throw Error("only stride 1 allowed on non-range indexing.");we=we&&k.strides[me]===1;const Qe=!!(k.beginMask&1<<me&&k.endMask&1<<me);if(k.beginValid&&k.endValid){if(Ue){const Be=k.begin[me]<0?je+k.begin[me]:k.begin[me];if(k.begin[me]=Be,k.end[me]=k.begin[me]+1,Be<0||Be>=je)throw Error(`slice index ${k.begin[me]} of dimension ${me} out of bounds.`)}else k.begin[me]=j(k.begin[me],0,k.strides[me],je,at,rt),k.end[me]=j(k.end[me],1,k.strides[me],je,at,rt);const oe=k.strides[me]===1&&k.begin[me]===0&&k.end[me]===je;X=X&&oe,H=H&&(me===0&&k.strides[me]===1||oe)}else X=X&&k.strides[me]===1&&Qe,H=H&&(me===0&&k.strides[me]===1||Qe);let mt,yt=!1;if(k.beginValid&&k.endValid?(mt=k.end[me]-k.begin[me],yt=!0):Ue?(mt=1,yt=!0):Qe&&je>=0&&(k.strides[me]<0?mt=-je:mt=je,yt=!0),yt){let oe;mt===0||mt<0!=k.strides[me]<0?oe=0:oe=Math.trunc(mt/k.strides[me])+(mt%k.strides[me]!==0?1:0),Pe.push(oe)}else Pe.push(-1)}for(let me=0;me<k.finalShapeGatherIndices.length;++me){const Ue=k.finalShapeGatherIndices[me];Ue>=0?Ye.push(Pe[Ue]):Ue===he&&Ye.push(1)}return{finalShapeSparse:Ye.filter((me,Ue)=>k.finalShapeGatherIndices[Ue]!==he),finalShape:Ye,isIdentity:X,sliceDim0:H,isSimpleSlice:we,begin:k.begin,end:k.end,strides:k.strides}}function He(ye,z){z.beginMask=0,z.endMask=0,z.shrinkAxisMask=0;let N=0;z.beginValid=ye.begin!=null,z.endValid=ye.end!=null,z.begin=new Array(z.dims),z.end=new Array(z.dims),z.strides=new Array(z.dims),z.finalShapeGatherIndices=[],z.finalShapeGatherIndicesSparse=[],z.inputShapeGatherIndicesSparse=new Array(z.dims);for(let P=0;P<ye.dims;P++)if(1<<P&ye.ellipsisMask){const C=Math.min(z.dims-(ye.dims-P)+1+ye.numAddAxisAfterEllipsis,z.dims);for(;N<C;N++)z.begin[N]=0,z.end[N]=0,z.strides[N]=1,z.beginMask|=1<<N,z.endMask|=1<<N,z.finalShapeGatherIndices.push(N),z.finalShapeGatherIndicesSparse.push(-1),z.inputShapeGatherIndicesSparse[N]=P}else if(1<<P&ye.newAxisMask)z.finalShapeGatherIndices.push(he),z.finalShapeGatherIndicesSparse.push(-1);else{if(N===z.begin.length)throw Error(`Index out of range using input dim ${N}; input has only ${z.dims} dims, ${z.begin.length}.`);ye.begin!=null&&(z.begin[N]=ye.begin[P]),ye.end!=null&&(z.end[N]=ye.end[P]),z.strides[N]=ye.strides[P],ye.beginMask&1<<P&&(z.beginMask|=1<<N),ye.endMask&1<<P&&(z.endMask|=1<<N),ye.shrinkAxisMask&1<<P?(z.finalShapeGatherIndices.push(R),z.finalShapeGatherIndicesSparse.push(-1),z.shrinkAxisMask|=1<<N):(z.finalShapeGatherIndices.push(N),z.finalShapeGatherIndicesSparse.push(P)),z.inputShapeGatherIndicesSparse[N]=P,N++}}function j(ye,z,N,P,C,Z){if(C[z])return N>0?Z[z]:Z[z+1&1];{const re=ye<0?P+ye:ye;return re<Z[0]?Z[0]:re>Z[1]?Z[1]:re}}},9896:function(st,ke,S){"use strict";S.d(ke,{_:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y){const se={x:(0,R._1)(Y,"x","sqrt","float32")};return u.BV.runKernel(he.FKq,se)}const I=(0,W.op)({sqrt_:x})},414:function(st,ke,S){"use strict";S.d(ke,{h:()=>x});var u=S(6201),he=S(6857),R=S(7264);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W(I){const Y=(0,he._1)(I,"x","square"),V={};return u.BV.runKernel("Square",{x:Y},V)}const x=(0,R.op)({square_:W})},1965:function(st,ke,S){"use strict";S.d(ke,{N:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y,V=0){const J={x:(0,R._1)(Y,"x","step")},D={alpha:V};return u.BV.runKernel(he.h8e,J,D)}const I=(0,W.op)({step_:x})},8712:function(st,ke,S){"use strict";S.d(ke,{l:()=>Y});var u=S(6201),he=S(4403),R=S(6802),W=S(6857),x=S(7264);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(V,se){let J=(0,W._1)(V,"a","sub"),D=(0,W._1)(se,"b","sub");[J,D]=(0,R.T_)(J,D);const b={a:J,b:D};return u.BV.runKernel(he.Tr8,b)}const Y=(0,x.op)({sub_:I})},5580:function(st,ke,S){"use strict";S.d(ke,{S:()=>Y});var u=S(6201),he=S(4403),R=S(6857),W=S(8341),x=S(7264);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(V,se=null,J=!1){let D=(0,R._1)(V,"x","sum");D.dtype==="bool"&&(D=(0,W.p)(D,"int32"));const b={x:D},te={axis:se,keepDims:J};return u.BV.runKernel(he.GBy,b,te)}const Y=(0,x.op)({sum_:I})},4594:function(st,ke,S){"use strict";S.d(ke,{X:()=>R});var u=S(6857),he=S(9790);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R(W,x,I){const Y=(0,u.C)(W,I);return(0,he.H)(W,x,Y,I)}},7158:function(st,ke,S){"use strict";S.d(ke,{w:()=>W});var u=S(6857),he=S(9024),R=S(9790);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W(x,I,Y){if((0,he.Cq)(x),I!=null&&I.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const V=(0,u.C)(x,Y);if(V.length!==3&&V.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(V.length===1&&I==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,R.H)(x,I,V,Y)}},9790:function(st,ke,S){"use strict";S.d(ke,{H:()=>x});var u=S(6201),he=S(6154),R=S(9024),W=S(2891);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(I,Y,V,se){if(se==null)se=(0,R.D2)(I);else if(se==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,he.$F)(I)||(0,he.Oq)(I)){if(se!=="float32"&&se!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${se}.`);return u.BV.backend.createTensorFromGPUData(I,Y||V,se)}if(!(0,W.isTypedArray)(I)&&!Array.isArray(I)&&typeof I!="number"&&typeof I!="boolean"&&typeof I!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(Y!=null){(0,R.Mu)(Y);const J=(0,R.NA)(Y),D=(0,R.NA)(V);(0,R.hu)(J===D,()=>`Based on the provided shape, [${Y}], the tensor should have ${J} values but has ${D}`);for(let b=0;b<V.length;++b){const te=V[b],ge=b===V.length-1?te!==(0,R.NA)(Y.slice(b)):!0;(0,R.hu)(V[b]===Y[b]||!ge,()=>`Error creating a new Tensor. Inferred shape (${V}) does not match the provided shape (${Y}). `)}}return!(0,W.isTypedArray)(I)&&!Array.isArray(I)&&(I=[I]),Y=Y||V,I=se!=="string"?(0,W.toTypedArray)(I,se):(0,W.flatten)(I,[],!0),u.BV.makeTensor(I,Y,se)}},9146:function(st,ke,S){"use strict";S.d(ke,{P:()=>I});var u=S(6201),he=S(4403),R=S(6857),W=S(7264);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x(Y){const se={x:(0,R._1)(Y,"x","zerosLike")};return u.BV.runKernel(he.RuY,se)}const I=(0,W.op)({zerosLike_:x})},4642:function(st,ke,S){"use strict";S.d(ke,{V:()=>M});var u=S(6201),he=S(4531),R=S(2364),W=S(8670),x=S(2107),I=S(9896),Y=S(414),V=S(9146),se=S(4233),J=S(528),D=S(9024);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b=new Map,te=new Map;class ge{getClassName(){return this.constructor.className}static fromConfig(k,X){return new k(X)}}class $e{constructor(){this.classNameMap={}}static getMap(){return $e.instance==null&&($e.instance=new $e),$e.instance}static register(k){$e.getMap().classNameMap[k.className]=[k,k.fromConfig]}}function Fe(ee,k,X){(0,D.hu)(ee.className!=null,()=>"Class being registered does not have the static className property defined."),(0,D.hu)(typeof ee.className=="string",()=>"className is required to be a string, but got type "+typeof ee.className),(0,D.hu)(ee.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof k>"u"&&(k="Custom"),typeof X>"u"&&(X=ee.className);const H=X,we=k+">"+H;return $e.register(ee),b.set(we,ee),te.set(ee,we),ee}function Ve(ee){return te.has(ee)?te.get(ee):ee.className}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ge extends ge{minimize(k,X=!1,H){const{value:we,grads:Pe}=this.computeGradients(k,H);if(H!=null){const Ye=H.map(Oe=>({name:Oe.name,tensor:Pe[Oe.name]}));this.applyGradients(Ye)}else this.applyGradients(Pe);return(0,he.B9)(Pe),X?we:(we.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(k,X){return(0,se.pn)(k,X)}dispose(){this.iterations_!=null&&(0,he.B9)(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:(0,J.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(k){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(k){return this.iterations_=(await k[0].tensor.data())[0],k.slice(1)}}Object.defineProperty(Ge,Symbol.hasInstance,{value:ee=>ee.minimize!=null&&ee.computeGradients!=null&&ee.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qe extends Ge{static get className(){return"Adadelta"}constructor(k,X,H=null){super(),this.learningRate=k,this.rho=X,this.epsilon=H,this.accumulatedGrads=[],this.accumulatedUpdates=[],H==null&&(this.epsilon=u.BV.backend.epsilon())}applyGradients(k){(Array.isArray(k)?k.map(H=>H.name):Object.keys(k)).forEach((H,we)=>{const Pe=u.BV.registeredVariables[H],Ye=!1;this.accumulatedGrads[we]==null&&(this.accumulatedGrads[we]={originalName:`${H}/accum_grad`,variable:(0,he.lu)(()=>(0,V.P)(Pe).variable(Ye))}),this.accumulatedUpdates[we]==null&&(this.accumulatedUpdates[we]={originalName:`${H}/accum_var`,variable:(0,he.lu)(()=>(0,V.P)(Pe).variable(Ye))});const Oe=Array.isArray(k)?k[we].tensor:k[H];if(Oe==null)return;const me=this.accumulatedGrads[we].variable,Ue=this.accumulatedUpdates[we].variable;(0,he.lu)(()=>{const je=(0,R.I)((0,x.d)(me,this.rho),(0,x.d)((0,Y.h)(Oe),1-this.rho)),at=(0,x.d)((0,W.h)((0,I._)((0,R.I)(Ue,this.epsilon)),(0,I._)((0,R.I)(me,this.epsilon))),Oe),rt=(0,R.I)((0,x.d)(Ue,this.rho),(0,x.d)((0,Y.h)(at),1-this.rho));me.assign(je),Ue.assign(rt);const Qe=(0,R.I)((0,x.d)(at,-this.learningRate),Pe);Pe.assign(Qe)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&((0,he.B9)(this.accumulatedGrads.map(k=>k.variable)),(0,he.B9)(this.accumulatedUpdates.map(k=>k.variable)))}async getWeights(){const k=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(k.map(X=>({name:X.originalName,tensor:X.variable})))}async setWeights(k){k=await this.extractIterations(k);const X=k.length/2,H=!1;this.accumulatedGrads=k.slice(0,X).map(we=>({originalName:we.name,variable:we.tensor.variable(H)})),this.accumulatedUpdates=k.slice(X,X*2).map(we=>({originalName:we.name,variable:we.tensor.variable(H)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(k,X){return new k(X.learningRate,X.rho,X.epsilon)}}var He=S(7809);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j extends Ge{static get className(){return"Adagrad"}constructor(k,X=.1){super(),this.learningRate=k,this.initialAccumulatorValue=X,this.accumulatedGrads=[]}applyGradients(k){(Array.isArray(k)?k.map(H=>H.name):Object.keys(k)).forEach((H,we)=>{const Pe=u.BV.registeredVariables[H];this.accumulatedGrads[we]==null&&(this.accumulatedGrads[we]={originalName:`${H}/accumulator`,variable:(0,he.lu)(()=>(0,He.h)(Pe.shape,this.initialAccumulatorValue).variable(!1))});const Ye=Array.isArray(k)?k[we].tensor:k[H];if(Ye==null)return;const Oe=this.accumulatedGrads[we].variable;(0,he.lu)(()=>{const me=(0,R.I)(Oe,(0,Y.h)(Ye));Oe.assign(me);const Ue=(0,R.I)((0,x.d)((0,W.h)(Ye,(0,I._)((0,R.I)(me,u.BV.backend.epsilon()))),-this.learningRate),Pe);Pe.assign(Ue)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&(0,he.B9)(this.accumulatedGrads.map(k=>k.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(k=>({name:k.originalName,tensor:k.variable})))}async setWeights(k){k=await this.extractIterations(k);const X=!1;this.accumulatedGrads=k.map(H=>({originalName:H.name,variable:H.tensor.variable(X)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(k,X){return new k(X.learningRate,X.initialAccumulatorValue)}}var ye=S(5650),z=S(8712);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N extends Ge{static get className(){return"Adam"}constructor(k,X,H,we=null){super(),this.learningRate=k,this.beta1=X,this.beta2=H,this.epsilon=we,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,he.lu)(()=>{this.accBeta1=(0,J.i)(X).variable(),this.accBeta2=(0,J.i)(H).variable()}),we==null&&(this.epsilon=u.BV.backend.epsilon())}applyGradients(k){const X=Array.isArray(k)?k.map(H=>H.name):Object.keys(k);(0,he.lu)(()=>{const H=(0,z.l)(1,this.accBeta1),we=(0,z.l)(1,this.accBeta2);X.forEach((Pe,Ye)=>{const Oe=u.BV.registeredVariables[Pe],me=!1;this.accumulatedFirstMoment[Ye]==null&&(this.accumulatedFirstMoment[Ye]={originalName:`${Pe}/m`,variable:(0,he.lu)(()=>(0,V.P)(Oe).variable(me))}),this.accumulatedSecondMoment[Ye]==null&&(this.accumulatedSecondMoment[Ye]={originalName:`${Pe}/v`,variable:(0,he.lu)(()=>(0,V.P)(Oe).variable(me))});const Ue=Array.isArray(k)?k[Ye].tensor:k[Pe];if(Ue==null)return;const je=this.accumulatedFirstMoment[Ye].variable,at=this.accumulatedSecondMoment[Ye].variable,rt=(0,R.I)((0,x.d)(je,this.beta1),(0,x.d)(Ue,1-this.beta1)),Qe=(0,R.I)((0,x.d)(at,this.beta2),(0,x.d)((0,Y.h)(Ue),1-this.beta2)),mt=(0,W.h)(rt,H),yt=(0,W.h)(Qe,we);je.assign(rt),at.assign(Qe);const oe=(0,R.I)((0,x.d)((0,W.h)(mt,(0,R.I)((0,I._)(yt),this.epsilon)),-this.learningRate),Oe);Oe.assign(oe)}),this.accBeta1.assign((0,x.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,x.d)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&(0,he.B9)(this.accumulatedFirstMoment.map(k=>k.variable)),this.accumulatedSecondMoment!=null&&(0,he.B9)(this.accumulatedSecondMoment.map(k=>k.variable))}async getWeights(){const k=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(k.map(X=>({name:X.originalName,tensor:X.variable})))}async setWeights(k){k=await this.extractIterations(k),(0,he.lu)(()=>{this.accBeta1.assign((0,ye.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,ye.s)(this.beta2,this.iterations_+1))});const X=k.length/2,H=!1;this.accumulatedFirstMoment=k.slice(0,X).map(we=>({originalName:we.name,variable:we.tensor.variable(H)})),this.accumulatedSecondMoment=k.slice(X,X*2).map(we=>({originalName:we.name,variable:we.tensor.variable(H)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(k,X){return new k(X.learningRate,X.beta1,X.beta2,X.epsilon)}}var P=S(5136),C=S(3624);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z extends Ge{static get className(){return"Adamax"}constructor(k,X,H,we=null,Pe=0){super(),this.learningRate=k,this.beta1=X,this.beta2=H,this.epsilon=we,this.decay=Pe,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,he.lu)(()=>{this.iteration=(0,J.i)(0).variable(),this.accBeta1=(0,J.i)(X).variable()}),we==null&&(this.epsilon=u.BV.backend.epsilon())}applyGradients(k){const X=Array.isArray(k)?k.map(H=>H.name):Object.keys(k);(0,he.lu)(()=>{const H=(0,z.l)(1,this.accBeta1),we=(0,W.h)(-this.learningRate,(0,R.I)((0,x.d)(this.iteration,this.decay),1));X.forEach((Pe,Ye)=>{const Oe=u.BV.registeredVariables[Pe],me=!1;this.accumulatedFirstMoment[Ye]==null&&(this.accumulatedFirstMoment[Ye]={originalName:`${Pe}/m`,variable:(0,V.P)(Oe).variable(me)}),this.accumulatedWeightedInfNorm[Ye]==null&&(this.accumulatedWeightedInfNorm[Ye]={originalName:`${Pe}/v`,variable:(0,V.P)(Oe).variable(me)});const Ue=Array.isArray(k)?k[Ye].tensor:k[Pe];if(Ue==null)return;const je=this.accumulatedFirstMoment[Ye].variable,at=this.accumulatedWeightedInfNorm[Ye].variable,rt=(0,R.I)((0,x.d)(je,this.beta1),(0,x.d)(Ue,1-this.beta1)),Qe=(0,x.d)(at,this.beta2),mt=(0,P.W)(Ue),yt=(0,C.g)(Qe,mt);je.assign(rt),at.assign(yt);const oe=(0,R.I)((0,x.d)((0,W.h)(we,H),(0,W.h)(rt,(0,R.I)(yt,this.epsilon))),Oe);Oe.assign(oe)}),this.iteration.assign((0,R.I)(this.iteration,1)),this.accBeta1.assign((0,x.d)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&(0,he.B9)(this.accumulatedFirstMoment.map(k=>k.variable)),this.accumulatedWeightedInfNorm!=null&&(0,he.B9)(this.accumulatedWeightedInfNorm.map(k=>k.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(k){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(k,X){return new k(X.learningRate,X.beta1,X.beta2,X.epsilon,X.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class re extends Ge{static get className(){return"SGD"}constructor(k){super(),this.learningRate=k,this.setLearningRate(k)}applyGradients(k){(Array.isArray(k)?k.map(H=>H.name):Object.keys(k)).forEach((H,we)=>{const Pe=Array.isArray(k)?k[we].tensor:k[H];if(Pe==null)return;const Ye=u.BV.registeredVariables[H];(0,he.lu)(()=>{const Oe=(0,R.I)((0,x.d)(this.c,Pe),Ye);Ye.assign(Oe)})}),this.incrementIterations()}setLearningRate(k){this.learningRate=k,this.c!=null&&this.c.dispose(),this.c=(0,he.Cn)((0,J.i)(-k))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(k){if(k=await this.extractIterations(k),k.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(k,X){return new k(X.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p extends re{static get className(){return"Momentum"}constructor(k,X,H=!1){super(k),this.learningRate=k,this.momentum=X,this.useNesterov=H,this.accumulations=[],this.m=(0,J.i)(this.momentum)}applyGradients(k){(Array.isArray(k)?k.map(H=>H.name):Object.keys(k)).forEach((H,we)=>{const Pe=u.BV.registeredVariables[H];this.accumulations[we]==null&&(this.accumulations[we]={originalName:`${H}/momentum`,variable:(0,he.lu)(()=>(0,V.P)(Pe).variable(!1))});const Ye=this.accumulations[we].variable,Oe=Array.isArray(k)?k[we].tensor:k[H];Oe!=null&&(0,he.lu)(()=>{let me;const Ue=(0,R.I)((0,x.d)(this.m,Ye),Oe);this.useNesterov?me=(0,R.I)((0,x.d)(this.c,(0,R.I)(Oe,(0,x.d)(Ue,this.m))),Pe):me=(0,R.I)((0,x.d)(this.c,Ue),Pe),Ye.assign(Ue),Pe.assign(me)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&(0,he.B9)(this.accumulations.map(k=>k.variable))}setMomentum(k){this.momentum=k}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(k=>({name:k.originalName,tensor:k.variable})))}async setWeights(k){k=await this.extractIterations(k);const X=!1;this.accumulations=k.map(H=>({originalName:H.name,variable:H.tensor.variable(X)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(k,X){return new k(X.learningRate,X.momentum,X.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Se extends Ge{static get className(){return"RMSProp"}constructor(k,X=.9,H=0,we=null,Pe=!1){if(super(),this.learningRate=k,this.decay=X,this.momentum=H,this.epsilon=we,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=Pe,we==null&&(this.epsilon=u.BV.backend.epsilon()),k==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(k){(Array.isArray(k)?k.map(H=>H.name):Object.keys(k)).forEach((H,we)=>{const Pe=u.BV.registeredVariables[H],Ye=!1;this.accumulatedMeanSquares[we]==null&&(this.accumulatedMeanSquares[we]={originalName:`${H}/rms`,variable:(0,he.lu)(()=>(0,V.P)(Pe).variable(Ye))}),this.accumulatedMoments[we]==null&&(this.accumulatedMoments[we]={originalName:`${H}/momentum`,variable:(0,he.lu)(()=>(0,V.P)(Pe).variable(Ye))}),this.accumulatedMeanGrads[we]==null&&this.centered&&(this.accumulatedMeanGrads[we]={originalName:`${H}/mg`,variable:(0,he.lu)(()=>(0,V.P)(Pe).variable(Ye))});const Oe=Array.isArray(k)?k[we].tensor:k[H];if(Oe==null)return;const me=this.accumulatedMeanSquares[we].variable,Ue=this.accumulatedMoments[we].variable;(0,he.lu)(()=>{const je=(0,R.I)((0,x.d)(me,this.decay),(0,x.d)((0,Y.h)(Oe),1-this.decay));if(this.centered){const at=this.accumulatedMeanGrads[we].variable,rt=(0,R.I)((0,x.d)(at,this.decay),(0,x.d)(Oe,1-this.decay)),Qe=(0,W.h)((0,x.d)(Oe,this.learningRate),(0,I._)((0,z.l)(je,(0,R.I)((0,Y.h)(rt),this.epsilon)))),mt=(0,R.I)((0,x.d)(Ue,this.momentum),Qe);me.assign(je),at.assign(rt),Ue.assign(mt);const yt=(0,z.l)(Pe,mt);Pe.assign(yt)}else{const at=(0,R.I)((0,x.d)(me,this.decay),(0,x.d)((0,Y.h)(Oe),1-this.decay)),rt=(0,R.I)((0,x.d)(Ue,this.momentum),(0,W.h)((0,x.d)(Oe,this.learningRate),(0,I._)((0,R.I)(at,this.epsilon))));me.assign(at),Ue.assign(rt);const Qe=(0,z.l)(Pe,rt);Pe.assign(Qe)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&(0,he.B9)(this.accumulatedMeanSquares.map(k=>k.variable)),this.accumulatedMeanGrads!=null&&this.centered&&(0,he.B9)(this.accumulatedMeanGrads.map(k=>k.variable)),this.accumulatedMoments!=null&&(0,he.B9)(this.accumulatedMoments.map(k=>k.variable))}async getWeights(){const k=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&k.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(k.map(X=>({name:X.originalName,tensor:X.variable})))}async setWeights(k){k=await this.extractIterations(k);const X=this.centered?k.length/3:k.length/2,H=!1;this.accumulatedMeanSquares=k.slice(0,X).map(we=>({originalName:we.name,variable:we.tensor.variable(H)})),this.accumulatedMoments=k.slice(X,X*2).map(we=>({originalName:we.name,variable:we.tensor.variable(H)})),this.centered&&(this.accumulatedMeanGrads=k.slice(X*2,X*3).map(we=>({originalName:we.name,variable:we.tensor.variable(H)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(k,X){return new k(X.learningRate,X.decay,X.momentum,X.epsilon,X.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Re=[qe,j,N,Z,p,Se,re];function M(){for(const ee of Re)Fe(ee)}},5830:function(st,ke,S){"use strict";S.d(ke,{j:()=>u});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u(he){return he instanceof Float32Array||he instanceof Int32Array||he instanceof Uint8Array||he instanceof Uint8ClampedArray}},9544:function(st,ke,S){"use strict";S.d(ke,{H:()=>x});var u=S(9024);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const he=20,R=3,W=7;function x(D,b,te,ge){const $e=(0,u.e3)(b),Fe=I(D,b,te,$e),Ve=b.length,Ge=se(D,b,te,$e,Fe),qe=["Tensor"];return ge&&(qe.push(`  dtype: ${te}`),qe.push(`  rank: ${Ve}`),qe.push(`  shape: [${b}]`),qe.push("  values:")),qe.push(Ge.map(He=>"    "+He).join(`
`)),qe.join(`
`)}function I(D,b,te,ge){const $e=(0,u.NA)(b),Fe=ge[ge.length-1],Ve=new Array(Fe).fill(0),Ge=b.length,qe=te==="complex64"?J(D):D;if(Ge>1)for(let He=0;He<$e/Fe;He++){const j=He*Fe;for(let ye=0;ye<Fe;ye++)Ve[ye]=Math.max(Ve[ye],Y(qe[j+ye],0,te).length)}return Ve}function Y(D,b,te){let ge;return Array.isArray(D)?ge=`${parseFloat(D[0].toFixed(W))} + ${parseFloat(D[1].toFixed(W))}j`:(0,u.HD)(D)?ge=`'${D}'`:te==="bool"?ge=V(D):ge=parseFloat(D.toFixed(W)).toString(),(0,u.oj)(ge,b)}function V(D){return D===0?"false":"true"}function se(D,b,te,ge,$e,Fe=!0){const Ve=te==="complex64"?2:1,Ge=b[0],qe=b.length;if(qe===0){if(te==="complex64"){const C=J(D);return[Y(C[0],0,te)]}return te==="bool"?[V(D[0])]:[D[0].toString()]}if(qe===1){if(Ge>he){const Z=R*Ve;let re=Array.from(D.slice(0,Z)),p=Array.from(D.slice((Ge-R)*Ve,Ge*Ve));return te==="complex64"&&(re=J(re),p=J(p)),["["+re.map((Se,Re)=>Y(Se,$e[Re],te)).join(", ")+", ..., "+p.map((Se,Re)=>Y(Se,$e[Ge-R+Re],te)).join(", ")+"]"]}return["["+(te==="complex64"?J(D):Array.from(D)).map((Z,re)=>Y(Z,$e[re],te)).join(", ")+"]"]}const He=b.slice(1),j=ge.slice(1),ye=ge[0]*Ve,z=[];if(Ge>he){for(let C=0;C<R;C++){const Z=C*ye,re=Z+ye;z.push(...se(D.slice(Z,re),He,te,j,$e,!1))}z.push("...");for(let C=Ge-R;C<Ge;C++){const Z=C*ye,re=Z+ye;z.push(...se(D.slice(Z,re),He,te,j,$e,C===Ge-1))}}else for(let C=0;C<Ge;C++){const Z=C*ye,re=Z+ye;z.push(...se(D.slice(Z,re),He,te,j,$e,C===Ge-1))}const N=qe===2?",":"";z[0]="["+(Ge>0?z[0]+N:"");for(let C=1;C<z.length-1;C++)z[C]=" "+z[C]+N;let P=`,
`;for(let C=2;C<qe;C++)P+=`
`;return z[z.length-1]=" "+z[z.length-1]+"]"+(Fe?"":P),z}function J(D){const b=[];for(let te=0;te<D.length;te+=2)b.push([D[te],D[te+1]]);return b}},6802:function(st,ke,S){"use strict";S.d(ke,{T_:()=>W,Vu:()=>Y,xg:()=>x});var u=S(1038),he=S(6154),R=S(9024);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W(J,D){if(J.dtype===D.dtype)return[J,D];const b=(0,he.x8)(J.dtype,D.dtype);return[J.cast(b),D.cast(b)]}function x(J,D){(0,R.hu)(J.dtype===D.dtype,()=>`The dtypes of the first(${J.dtype}) and second(${D.dtype}) input must match`)}function I(J,D){return D.some(b=>b.id===J.id)}function Y(J){const D=[];return V(J,D,new Set),D}function V(J,D,b){if(J==null)return;if(J instanceof u.es){D.push(J);return}if(!se(J))return;const te=J;for(const ge in te){const $e=te[ge];b.has($e)||(b.add($e),V($e,D,b))}}function se(J){return Array.isArray(J)||typeof J=="object"}},6857:function(st,ke,S){"use strict";S.d(ke,{C:()=>Y,_1:()=>J,sI:()=>D});var u=S(6201),he=S(6650),R=S(1038),W=S(6154),x=S(2891),I=S(9024);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y(b,te){let ge=b;if((0,x.isTypedArray)(b))return te==="string"?[]:[b.length];if((0,W.Oq)(b)){const Fe=b.channels||"RGBA";return[b.height,b.width*Fe.length]}else if((0,W.$F)(b))return[b.buffer.size/(te==null?4:(0,I.bT)(te))];if(!Array.isArray(b))return[];const $e=[];for(;Array.isArray(ge)||(0,x.isTypedArray)(ge)&&te!=="string";)$e.push(ge.length),ge=ge[0];return Array.isArray(b)&&(0,he.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&V(b,$e,[]),$e}function V(b,te,ge){if(ge=ge||[],!Array.isArray(b)&&!(0,x.isTypedArray)(b)){(0,I.hu)(te.length===0,()=>`Element arr[${ge.join("][")}] is a primitive, but should be an array/TypedArray of ${te[0]} elements`);return}(0,I.hu)(te.length>0,()=>`Element arr[${ge.join("][")}] should be a primitive, but is an array of ${b.length} elements`),(0,I.hu)(b.length===te[0],()=>`Element arr[${ge.join("][")}] should have ${te[0]} elements, but has ${b.length} elements`);const $e=te.slice(1);for(let Fe=0;Fe<b.length;++Fe)V(b[Fe],$e,ge.concat(Fe))}function se(b,te,ge,$e){if(b!=="string_or_numeric"){if(b==null)throw new Error("Expected dtype cannot be null.");if(b!=="numeric"&&b!==te||b==="numeric"&&te==="string")throw new Error(`Argument '${ge}' passed to '${$e}' must be ${b} tensor, but got ${te} tensor`)}}function J(b,te,ge,$e="numeric"){if(b instanceof(0,R.t3)())return se($e,b.dtype,te,ge),b;let Fe=(0,I.D2)(b);if(Fe!=="string"&&["bool","int32","float32"].indexOf($e)>=0&&(Fe=$e),se($e,Fe,te,ge),b==null||!(0,x.isTypedArray)(b)&&!Array.isArray(b)&&typeof b!="number"&&typeof b!="boolean"&&typeof b!="string"){const He=b==null?"null":b.constructor.name;throw new Error(`Argument '${te}' passed to '${ge}' must be a Tensor or TensorLike, but got '${He}'`)}const Ve=Y(b,Fe);!(0,x.isTypedArray)(b)&&!Array.isArray(b)&&(b=[b]);const qe=Fe!=="string"?(0,x.toTypedArray)(b,Fe):(0,x.flatten)(b,[],!0);return u.BV.makeTensor(qe,Ve,Fe)}function D(b,te,ge,$e="numeric"){if(!Array.isArray(b))throw new Error(`Argument ${te} passed to ${ge} must be a \`Tensor[]\` or \`TensorLike[]\``);return b.map((Ve,Ge)=>J(Ve,`${te}[${Ge}]`,ge,$e))}},6154:function(st,ke,S){"use strict";S.d(ke,{$F:()=>J,Oq:()=>se,x8:()=>Y,z4:()=>V});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var u;(function(D){D.R0="R0",D.R1="R1",D.R2="R2",D.R3="R3",D.R4="R4",D.R5="R5",D.R6="R6"})(u||(u={}));var he;(function(D){D.float32="float32",D.int32="int32",D.bool="int32",D.complex64="complex64"})(he||(he={}));var R;(function(D){D.float32="float32",D.int32="int32",D.bool="bool",D.complex64="complex64"})(R||(R={}));var W;(function(D){D.float32="float32",D.int32="float32",D.bool="float32",D.complex64="complex64"})(W||(W={}));var x;(function(D){D.float32="complex64",D.int32="complex64",D.bool="complex64",D.complex64="complex64"})(x||(x={}));const I={float32:W,int32:he,bool:R,complex64:x};function Y(D,b){if(D==="string"||b==="string"){if(D==="string"&&b==="string")return"string";throw new Error(`Can not upcast ${D} with ${b}`)}return I[D][b]}function V(D){return Y(D,"int32")}function se(D){return D!=null&&typeof D=="object"&&"texture"in D&&D.texture instanceof WebGLTexture}function J(D){return typeof GPUBuffer<"u"&&D!=null&&typeof D=="object"&&"buffer"in D&&D.buffer instanceof GPUBuffer}},2891:function(st,ke,S){"use strict";S.r(ke),S.d(ke,{hexToLong:()=>Y,decodeString:()=>p,arraysEqualWithNull:()=>R.DK,createShuffledIndices:()=>R.U$,squeezeShape:()=>R.bp,locToIndex:()=>R.qy,distSquared:()=>R.E7,nearestLargerEven:()=>R.nY,getTypedArrayFromDType:()=>R.WP,shuffleCombo:()=>R.d7,createScalarValue:()=>z,bytesFromStringArray:()=>R.Ub,shuffle:()=>R.TV,assert:()=>R.hu,inferFromImplicitShape:()=>R.JZ,toTypedArray:()=>P,isTypedArray:()=>Se,randUniform:()=>R.bj,convertBackendValuesAndArrayBuffer:()=>R.KS,indexToLoc:()=>R.NE,assertShapesMatch:()=>R.k5,sum:()=>R.Sm,parseAxisParam:()=>R.EC,isBoolean:()=>R.jn,sizeToSquarishShape:()=>R.YP,clamp:()=>R.uZ,isValidDtype:()=>R.LP,toNestedArray:()=>R.GX,getArrayFromDType:()=>R.rQ,fingerPrint64:()=>ye,makeOnesTypedArray:()=>R.p8,repeatedTry:()=>R.WD,swap:()=>R.LF,isFunction:()=>R.mf,isPromise:()=>R.tI,isNumber:()=>R.hj,assertNonNegativeIntegerDimensions:()=>R.Mu,isInt:()=>R.GN,encodeString:()=>re,tanh:()=>R.AE,nearestDivisor:()=>R.jP,fetch:()=>Z,isString:()=>R.HD,makeZerosNestedTypedArray:()=>R.l6,rightPad:()=>R.oj,bytesPerElement:()=>R.bT,makeZerosTypedArray:()=>R.wT,sizeFromShape:()=>R.NA,computeStrides:()=>R.e3,hasEncodingLoss:()=>R.QB,inferDtype:()=>R.D2,now:()=>C,isScalarShape:()=>R.xH,assertNonNull:()=>R.Cq,checkConversionForErrors:()=>R.D5,flatten:()=>Re,arraysEqual:()=>R.cO});var u=S(6650),he=S(5830),R=S(9024),W=S(6821),x=S.n(W);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I=x()||W;function Y(M){return I.fromString(M,!0,16)}const V=Y("c3a5c85c97cb3127"),se=Y("b492b66fbe98f273"),J=Y("9ae16a3b2f90404f");function D(M){return M.xor(M.shru(47))}function b(M,ee,k){const X=M.slice(ee,ee+k);return I.fromBytes(Array.from(X),!0,!0)}function te(M,ee){return b(M,ee,8)}function ge(M,ee){return b(M,ee,4)}function $e(M,ee){return ee===0?M:M.shru(ee).or(M.shl(64-ee))}function Fe(M,ee,k=Y("9ddfea08eb382d69")){let X=M.xor(ee).mul(k);X=X.xor(X.shru(47));let H=ee.xor(X).mul(k);return H=H.xor(H.shru(47)),H=H.mul(k),H}function Ve(M,ee,k,X,H,we){H=H.add(M),we=$e(we.add(H).add(X),21);const Pe=H;return H=H.add(ee),H=H.add(k),we=we.add($e(H,44)),[H.add(X),we.add(Pe)]}function Ge(M,ee,k,X){return Ve(te(M,ee),te(M,ee+8),te(M,ee+16),te(M,ee+24),k,X)}function qe(M,ee=M.length){if(ee>=8){const k=J.add(ee*2),X=te(M,0).add(J),H=te(M,ee-8),we=$e(H,37).mul(k).add(X),Pe=$e(X,25).add(H).mul(k);return Fe(we,Pe,k)}if(ee>=4){const k=J.add(ee*2),X=ge(M,0);return Fe(X.shl(3).add(ee),ge(M,ee-4),k)}if(ee>0){const k=M[0],X=M[ee>>1],H=M[ee-1],we=k+(X<<8),Pe=ee+(H<<2);return D(J.mul(we).xor(V.mul(Pe))).mul(J)}return J}function He(M,ee=M.length){const k=J.add(ee*2),X=te(M,0).mul(se),H=te(M,8),we=te(M,ee-8).mul(k),Pe=te(M,ee-16).mul(J);return Fe($e(X.add(H),43).add($e(we,30)).add(Pe),X.add($e(H.add(J),18)).add(we),k)}function j(M,ee=M.length){const k=J.add(ee*2),X=te(M,0).mul(J),H=te(M,8),we=te(M,ee-8).mul(k),Pe=te(M,ee-16).mul(J),Ye=$e(X.add(H),43).add($e(we,30)).add(Pe),Oe=Fe(Ye,X.add($e(H.add(J),18)).add(we),k),me=te(M,16).mul(k),Ue=te(M,24),je=Ye.add(te(M,ee-32)).mul(k),at=Oe.add(te(M,ee-24)).mul(k);return Fe($e(me.add(Ue),43).add($e(je,30)).add(at),me.add($e(Ue.add(X),18)).add(je),k)}function ye(M,ee=M.length){const k=I.fromNumber(81,!0);if(ee<=32)return ee<=16?qe(M,ee):He(M,ee);if(ee<=64)return j(M,ee);let X=k,H=k.mul(se).add(113),we=D(H.mul(J).add(113)).mul(J),Pe=[I.UZERO,I.UZERO],Ye=[I.UZERO,I.UZERO];X=X.mul(J).add(te(M,0));let Oe=0;const me=(ee-1>>6)*64,Ue=me+(ee-1&63)-63;do X=$e(X.add(H).add(Pe[0]).add(te(M,Oe+8)),37).mul(se),H=$e(H.add(Pe[1]).add(te(M,Oe+48)),42).mul(se),X=X.xor(Ye[1]),H=H.add(Pe[0]).add(te(M,Oe+40)),we=$e(we.add(Ye[0]),33).mul(se),Pe=Ge(M,Oe,Pe[1].mul(se),X.add(Ye[0])),Ye=Ge(M,Oe+32,we.add(Ye[1]),H.add(te(M,Oe+16))),[we,X]=[X,we],Oe+=64;while(Oe!==me);const je=se.add(we.and(255).shl(1));return Oe=Ue,Ye[0]=Ye[0].add(ee-1&63),Pe[0]=Pe[0].add(Ye[0]),Ye[0]=Ye[0].add(Pe[0]),X=$e(X.add(H).add(Pe[0]).add(te(M,Oe+8)),37).mul(je),H=$e(H.add(Pe[1]).add(te(M,Oe+48)),42).mul(je),X=X.xor(Ye[1].mul(9)),H=H.add(Pe[0].mul(9).add(te(M,Oe+40))),we=$e(we.add(Ye[0]),33).mul(je),Pe=Ge(M,Oe,Pe[1].mul(je),X.add(Ye[0])),Ye=Ge(M,Oe+32,we.add(Ye[1]),H.add(te(M,Oe+16))),[we,X]=[X,we],Fe(Fe(Pe[0],Ye[0],je).add(D(H).mul(V)).add(we),Fe(Pe[1],Ye[1],je).add(X),je)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z(M,ee){return ee==="string"?re(M):P([M],ee)}function N(M,ee){return M instanceof Float32Array&&ee==="float32"||M instanceof Int32Array&&ee==="int32"||M instanceof Uint8Array&&ee==="bool"}function P(M,ee){if(ee==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(M)&&(M=Re(M)),(0,u.OB)().getBool("DEBUG")&&R.D5(M,ee),N(M,ee))return M;if(ee==null||ee==="float32"||ee==="complex64")return new Float32Array(M);if(ee==="int32")return new Int32Array(M);if(ee==="bool"){const k=new Uint8Array(M.length);for(let X=0;X<k.length;++X)Math.round(M[X])!==0&&(k[X]=1);return k}else throw new Error(`Unknown data type ${ee}`)}function C(){return(0,u.OB)().platform.now()}function Z(M,ee){return(0,u.OB)().platform.fetch(M,ee)}function re(M,ee="utf-8"){return ee=ee||"utf-8",(0,u.OB)().platform.encode(M,ee)}function p(M,ee="utf-8"){return ee=ee||"utf-8",(0,u.OB)().platform.decode(M,ee)}function Se(M){return(0,u.OB)().platform.isTypedArray!=null?(0,u.OB)().platform.isTypedArray(M):(0,he.j)(M)}function Re(M,ee=[],k=!1){if(ee==null&&(ee=[]),typeof M=="boolean"||typeof M=="number"||typeof M=="string"||R.tI(M)||M==null||Se(M)&&k)ee.push(M);else if(Array.isArray(M)||Se(M))for(let X=0;X<M.length;++X)Re(M[X],ee,k);else{let X=-1;for(const H of Object.keys(M))/^([1-9]+[0-9]*|0)$/.test(H)&&(X=Math.max(X,Number(H)));for(let H=0;H<=X;H++)Re(M[H],ee,k)}return ee}},9024:function(st,ke,S){"use strict";S.d(ke,{AE:()=>Ve,Cq:()=>D,D2:()=>X,D5:()=>Z,DK:()=>ge,E7:()=>V,EC:()=>z,GN:()=>Fe,GX:()=>Oe,HD:()=>M,JZ:()=>ye,KS:()=>me,LF:()=>x,LP:()=>re,Mu:()=>rt,NA:()=>b,NE:()=>mt,QB:()=>p,Sm:()=>I,TV:()=>u,U$:()=>qe,Ub:()=>Re,WD:()=>j,WP:()=>P,YP:()=>Ge,bT:()=>Se,bj:()=>Y,bp:()=>N,cO:()=>$e,d7:()=>he,e3:()=>Pe,hj:()=>k,hu:()=>se,jP:()=>we,jn:()=>ee,k5:()=>J,l6:()=>at,mf:()=>H,nY:()=>W,oj:()=>He,p8:()=>Ue,qy:()=>Qe,rQ:()=>C,tI:()=>yt,uZ:()=>R,wT:()=>je,xH:()=>te});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u(oe){let Be=oe.length,Xe=0;for(;Be>0;)Xe=Math.random()*Be|0,Be--,x(oe,Be,Xe)}function he(oe,Be){if(oe.length!==Be.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${oe.length}Second array length was ${Be.length}`);let Xe=oe.length,ot=0;for(;Xe>0;)ot=Math.random()*Xe|0,Xe--,x(oe,Xe,ot),x(Be,Xe,ot)}function R(oe,Be,Xe){return Math.max(oe,Math.min(Be,Xe))}function W(oe){return oe%2===0?oe:oe+1}function x(oe,Be,Xe){const ot=oe[Be];oe[Be]=oe[Xe],oe[Xe]=ot}function I(oe){let Be=0;for(let Xe=0;Xe<oe.length;Xe++)Be+=oe[Xe];return Be}function Y(oe,Be){const Xe=Math.random();return Be*Xe+(1-Xe)*oe}function V(oe,Be){let Xe=0;for(let ot=0;ot<oe.length;ot++){const bt=Number(oe[ot])-Number(Be[ot]);Xe+=bt*bt}return Xe}function se(oe,Be){if(!oe)throw new Error(typeof Be=="string"?Be:Be())}function J(oe,Be,Xe=""){se($e(oe,Be),()=>Xe+` Shapes ${oe} and ${Be} must match`)}function D(oe){se(oe!=null,()=>"The input to the tensor constructor must be a non-null value.")}function b(oe){if(oe.length===0)return 1;let Be=oe[0];for(let Xe=1;Xe<oe.length;Xe++)Be*=oe[Xe];return Be}function te(oe){return oe.length===0}function ge(oe,Be){if(oe===Be)return!0;if(oe==null||Be==null||oe.length!==Be.length)return!1;for(let Xe=0;Xe<oe.length;Xe++)if(oe[Xe]!==null&&Be[Xe]!==null&&oe[Xe]!==Be[Xe])return!1;return!0}function $e(oe,Be){if(oe===Be)return!0;if(oe==null||Be==null||oe.length!==Be.length)return!1;for(let Xe=0;Xe<oe.length;Xe++)if(oe[Xe]!==Be[Xe])return!1;return!0}function Fe(oe){return oe%1===0}function Ve(oe){if(Math.tanh!=null)return Math.tanh(oe);if(oe===1/0)return 1;if(oe===-1/0)return-1;{const Be=Math.exp(2*oe);return(Be-1)/(Be+1)}}function Ge(oe){const Be=Math.ceil(Math.sqrt(oe));return[Be,Math.ceil(oe/Be)]}function qe(oe){const Be=new Uint32Array(oe);for(let Xe=0;Xe<oe;++Xe)Be[Xe]=Xe;return u(Be),Be}function He(oe,Be){return Be<=oe.length?oe:oe+" ".repeat(Be-oe.length)}function j(oe,Be=bt=>0,Xe,ot){return new Promise((bt,Ct)=>{let It=0;const Ot=()=>{if(oe()){bt();return}It++;const zt=Be(It);if(Xe!=null&&It>=Xe){Ct();return}ot!=null?ot(Ot,zt):setTimeout(Ot,zt)};Ot()})}function ye(oe,Be){let Xe=1,ot=-1;for(let Ct=0;Ct<oe.length;++Ct)if(oe[Ct]>=0)Xe*=oe[Ct];else if(oe[Ct]===-1){if(ot!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${ot} and dim ${Ct}`);ot=Ct}else if(oe[Ct]<0)throw Error(`Shapes can not be < 0. Found ${oe[Ct]} at dim ${Ct}`);if(ot===-1){if(Be>0&&Be!==Xe)throw Error(`Size(${Be}) must match the product of shape ${oe}`);return oe}if(Xe===0)throw Error(`Cannot infer the missing size in [${oe}] when there are 0 elements`);if(Be%Xe!==0)throw Error(`The implicit shape can't be a fractional number. Got ${Be} / ${Xe}`);const bt=oe.slice();return bt[ot]=Be/Xe,bt}function z(oe,Be){const Xe=Be.length;return oe=oe==null?Be.map((ot,bt)=>bt):[].concat(oe),se(oe.every(ot=>ot>=-Xe&&ot<Xe),()=>`All values in axis param must be in range [-${Xe}, ${Xe}) but got axis ${oe}`),se(oe.every(ot=>Fe(ot)),()=>`All values in axis param must be integers but got axis ${oe}`),oe.map(ot=>ot<0?Xe+ot:ot)}function N(oe,Be){const Xe=[],ot=[],bt=Be!=null&&Array.isArray(Be)&&Be.length===0,Ct=Be==null||bt?null:z(Be,oe).sort();let It=0;for(let Ot=0;Ot<oe.length;++Ot){if(Ct!=null){if(Ct[It]===Ot&&oe[Ot]!==1)throw new Error(`Can't squeeze axis ${Ot} since its dim '${oe[Ot]}' is not 1`);(Ct[It]==null||Ct[It]>Ot)&&oe[Ot]===1&&(Xe.push(oe[Ot]),ot.push(Ot)),Ct[It]<=Ot&&It++}oe[Ot]!==1&&(Xe.push(oe[Ot]),ot.push(Ot))}return{newShape:Xe,keptDims:ot}}function P(oe,Be){return C(oe,Be)}function C(oe,Be){let Xe=null;if(oe==null||oe==="float32")Xe=new Float32Array(Be);else if(oe==="int32")Xe=new Int32Array(Be);else if(oe==="bool")Xe=new Uint8Array(Be);else if(oe==="string")Xe=new Array(Be);else throw new Error(`Unknown data type ${oe}`);return Xe}function Z(oe,Be){for(let Xe=0;Xe<oe.length;Xe++){const ot=oe[Xe];if(isNaN(ot)||!isFinite(ot))throw Error(`A tensor of type ${Be} being uploaded contains ${ot}.`)}}function re(oe){return oe==="bool"||oe==="complex64"||oe==="float32"||oe==="int32"||oe==="string"}function p(oe,Be){return!(Be==="complex64"||Be==="float32"&&oe!=="complex64"||Be==="int32"&&oe!=="float32"&&oe!=="complex64"||Be==="bool"&&oe==="bool")}function Se(oe){if(oe==="float32"||oe==="int32")return 4;if(oe==="complex64")return 8;if(oe==="bool")return 1;throw new Error(`Unknown dtype ${oe}`)}function Re(oe){if(oe==null)return 0;let Be=0;return oe.forEach(Xe=>Be+=Xe.length),Be}function M(oe){return typeof oe=="string"||oe instanceof String}function ee(oe){return typeof oe=="boolean"}function k(oe){return typeof oe=="number"}function X(oe){return Array.isArray(oe)?X(oe[0]):oe instanceof Float32Array?"float32":oe instanceof Int32Array||oe instanceof Uint8Array||oe instanceof Uint8ClampedArray?"int32":k(oe)?"float32":M(oe)?"string":ee(oe)?"bool":"float32"}function H(oe){return!!(oe&&oe.constructor&&oe.call&&oe.apply)}function we(oe,Be){for(let Xe=Be;Xe<oe;++Xe)if(oe%Xe===0)return Xe;return oe}function Pe(oe){const Be=oe.length;if(Be<2)return[];const Xe=new Array(Be-1);Xe[Be-2]=oe[Be-1];for(let ot=Be-3;ot>=0;--ot)Xe[ot]=Xe[ot+1]*oe[ot+1];return Xe}function Ye(oe,Be,Xe,ot=!1){const bt=new Array;if(Be.length===1){const Ct=Be[0]*(ot?2:1);for(let It=0;It<Ct;It++)bt[It]=Xe[oe+It]}else{const Ct=Be[0],It=Be.slice(1),Ot=It.reduce((zt,Yt)=>zt*Yt)*(ot?2:1);for(let zt=0;zt<Ct;zt++)bt[zt]=Ye(oe+zt*Ot,It,Xe,ot)}return bt}function Oe(oe,Be,Xe=!1){if(oe.length===0)return Be[0];const ot=oe.reduce((bt,Ct)=>bt*Ct)*(Xe?2:1);if(ot===0)return[];if(ot!==Be.length)throw new Error(`[${oe}] does not match the input size ${Be.length}${Xe?" for a complex tensor":""}.`);return Ye(0,oe,Be,Xe)}function me(oe,Be){if(Array.isArray(oe))return oe;if(Be==="float32")return oe instanceof Float32Array?oe:new Float32Array(oe);if(Be==="int32")return oe instanceof Int32Array?oe:new Int32Array(oe);if(Be==="bool"||Be==="string")return Uint8Array.from(new Int32Array(oe));throw new Error(`Unknown dtype ${Be}`)}function Ue(oe,Be){const Xe=je(oe,Be);for(let ot=0;ot<Xe.length;ot++)Xe[ot]=1;return Xe}function je(oe,Be){if(Be==null||Be==="float32"||Be==="complex64")return new Float32Array(oe);if(Be==="int32")return new Int32Array(oe);if(Be==="bool")return new Uint8Array(oe);throw new Error(`Unknown data type ${Be}`)}function at(oe,Be){const Xe=oe.reduce((ot,bt)=>ot*bt,1);if(Be==null||Be==="float32")return Oe(oe,new Float32Array(Xe));if(Be==="int32")return Oe(oe,new Int32Array(Xe));if(Be==="bool")return Oe(oe,new Uint8Array(Xe));throw new Error(`Unknown data type ${Be}`)}function rt(oe){oe.forEach(Be=>{se(Number.isInteger(Be)&&Be>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${oe}].`)})}function Qe(oe,Be,Xe){if(Be===0)return 0;if(Be===1)return oe[0];let ot=oe[oe.length-1];for(let bt=0;bt<oe.length-1;++bt)ot+=Xe[bt]*oe[bt];return ot}function mt(oe,Be,Xe){if(Be===0)return[];if(Be===1)return[oe];const ot=new Array(Be);for(let bt=0;bt<ot.length-1;++bt)ot[bt]=Math.floor(oe/Xe[bt]),oe-=ot[bt]*Xe[bt];return ot[ot.length-1]=oe,ot}function yt(oe){return oe&&oe.then&&typeof oe.then=="function"}},6821:function(st){st.exports=S;var ke=null;try{ke=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function S(P,C,Z){this.low=P|0,this.high=C|0,this.unsigned=!!Z}S.prototype.__isLong__,Object.defineProperty(S.prototype,"__isLong__",{value:!0});function u(P){return(P&&P.__isLong__)===!0}S.isLong=u;var he={},R={};function W(P,C){var Z,re,p;return C?(P>>>=0,(p=0<=P&&P<256)&&(re=R[P],re)?re:(Z=I(P,(P|0)<0?-1:0,!0),p&&(R[P]=Z),Z)):(P|=0,(p=-128<=P&&P<128)&&(re=he[P],re)?re:(Z=I(P,P<0?-1:0,!1),p&&(he[P]=Z),Z))}S.fromInt=W;function x(P,C){if(isNaN(P))return C?Ve:Fe;if(C){if(P<0)return Ve;if(P>=te)return ye}else{if(P<=-ge)return z;if(P+1>=ge)return j}return P<0?x(-P,C).neg():I(P%b|0,P/b|0,C)}S.fromNumber=x;function I(P,C,Z){return new S(P,C,Z)}S.fromBits=I;var Y=Math.pow;function V(P,C,Z){if(P.length===0)throw Error("empty string");if(P==="NaN"||P==="Infinity"||P==="+Infinity"||P==="-Infinity")return Fe;if(typeof C=="number"?(Z=C,C=!1):C=!!C,Z=Z||10,Z<2||36<Z)throw RangeError("radix");var re;if((re=P.indexOf("-"))>0)throw Error("interior hyphen");if(re===0)return V(P.substring(1),C,Z).neg();for(var p=x(Y(Z,8)),Se=Fe,Re=0;Re<P.length;Re+=8){var M=Math.min(8,P.length-Re),ee=parseInt(P.substring(Re,Re+M),Z);if(M<8){var k=x(Y(Z,M));Se=Se.mul(k).add(x(ee))}else Se=Se.mul(p),Se=Se.add(x(ee))}return Se.unsigned=C,Se}S.fromString=V;function se(P,C){return typeof P=="number"?x(P,C):typeof P=="string"?V(P,C):I(P.low,P.high,typeof C=="boolean"?C:P.unsigned)}S.fromValue=se;var J=65536,D=1<<24,b=J*J,te=b*b,ge=te/2,$e=W(D),Fe=W(0);S.ZERO=Fe;var Ve=W(0,!0);S.UZERO=Ve;var Ge=W(1);S.ONE=Ge;var qe=W(1,!0);S.UONE=qe;var He=W(-1);S.NEG_ONE=He;var j=I(-1,2147483647,!1);S.MAX_VALUE=j;var ye=I(-1,-1,!0);S.MAX_UNSIGNED_VALUE=ye;var z=I(0,-2147483648,!1);S.MIN_VALUE=z;var N=S.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*b+(this.low>>>0):this.high*b+(this.low>>>0)},N.toString=function(C){if(C=C||10,C<2||36<C)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(z)){var Z=x(C),re=this.div(Z),p=re.mul(Z).sub(this);return re.toString(C)+p.toInt().toString(C)}else return"-"+this.neg().toString(C);for(var Se=x(Y(C,6),this.unsigned),Re=this,M="";;){var ee=Re.div(Se),k=Re.sub(ee.mul(Se)).toInt()>>>0,X=k.toString(C);if(Re=ee,Re.isZero())return X+M;for(;X.length<6;)X="0"+X;M=""+X+M}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(z)?64:this.neg().getNumBitsAbs();for(var C=this.high!=0?this.high:this.low,Z=31;Z>0&&(C&1<<Z)==0;Z--);return this.high!=0?Z+33:Z+1},N.isZero=function(){return this.high===0&&this.low===0},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return(this.low&1)===1},N.isEven=function(){return(this.low&1)===0},N.equals=function(C){return u(C)||(C=se(C)),this.unsigned!==C.unsigned&&this.high>>>31===1&&C.high>>>31===1?!1:this.high===C.high&&this.low===C.low},N.eq=N.equals,N.notEquals=function(C){return!this.eq(C)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(C){return this.comp(C)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(C){return this.comp(C)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(C){return this.comp(C)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(C){return this.comp(C)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(C){if(u(C)||(C=se(C)),this.eq(C))return 0;var Z=this.isNegative(),re=C.isNegative();return Z&&!re?-1:!Z&&re?1:this.unsigned?C.high>>>0>this.high>>>0||C.high===this.high&&C.low>>>0>this.low>>>0?-1:1:this.sub(C).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(z)?z:this.not().add(Ge)},N.neg=N.negate,N.add=function(C){u(C)||(C=se(C));var Z=this.high>>>16,re=this.high&65535,p=this.low>>>16,Se=this.low&65535,Re=C.high>>>16,M=C.high&65535,ee=C.low>>>16,k=C.low&65535,X=0,H=0,we=0,Pe=0;return Pe+=Se+k,we+=Pe>>>16,Pe&=65535,we+=p+ee,H+=we>>>16,we&=65535,H+=re+M,X+=H>>>16,H&=65535,X+=Z+Re,X&=65535,I(we<<16|Pe,X<<16|H,this.unsigned)},N.subtract=function(C){return u(C)||(C=se(C)),this.add(C.neg())},N.sub=N.subtract,N.multiply=function(C){if(this.isZero())return Fe;if(u(C)||(C=se(C)),ke){var Z=ke.mul(this.low,this.high,C.low,C.high);return I(Z,ke.get_high(),this.unsigned)}if(C.isZero())return Fe;if(this.eq(z))return C.isOdd()?z:Fe;if(C.eq(z))return this.isOdd()?z:Fe;if(this.isNegative())return C.isNegative()?this.neg().mul(C.neg()):this.neg().mul(C).neg();if(C.isNegative())return this.mul(C.neg()).neg();if(this.lt($e)&&C.lt($e))return x(this.toNumber()*C.toNumber(),this.unsigned);var re=this.high>>>16,p=this.high&65535,Se=this.low>>>16,Re=this.low&65535,M=C.high>>>16,ee=C.high&65535,k=C.low>>>16,X=C.low&65535,H=0,we=0,Pe=0,Ye=0;return Ye+=Re*X,Pe+=Ye>>>16,Ye&=65535,Pe+=Se*X,we+=Pe>>>16,Pe&=65535,Pe+=Re*k,we+=Pe>>>16,Pe&=65535,we+=p*X,H+=we>>>16,we&=65535,we+=Se*k,H+=we>>>16,we&=65535,we+=Re*ee,H+=we>>>16,we&=65535,H+=re*X+p*k+Se*ee+Re*M,H&=65535,I(Pe<<16|Ye,H<<16|we,this.unsigned)},N.mul=N.multiply,N.divide=function(C){if(u(C)||(C=se(C)),C.isZero())throw Error("division by zero");if(ke){if(!this.unsigned&&this.high===-2147483648&&C.low===-1&&C.high===-1)return this;var Z=(this.unsigned?ke.div_u:ke.div_s)(this.low,this.high,C.low,C.high);return I(Z,ke.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ve:Fe;var re,p,Se;if(this.unsigned){if(C.unsigned||(C=C.toUnsigned()),C.gt(this))return Ve;if(C.gt(this.shru(1)))return qe;Se=Ve}else{if(this.eq(z)){if(C.eq(Ge)||C.eq(He))return z;if(C.eq(z))return Ge;var Re=this.shr(1);return re=Re.div(C).shl(1),re.eq(Fe)?C.isNegative()?Ge:He:(p=this.sub(C.mul(re)),Se=re.add(p.div(C)),Se)}else if(C.eq(z))return this.unsigned?Ve:Fe;if(this.isNegative())return C.isNegative()?this.neg().div(C.neg()):this.neg().div(C).neg();if(C.isNegative())return this.div(C.neg()).neg();Se=Fe}for(p=this;p.gte(C);){re=Math.max(1,Math.floor(p.toNumber()/C.toNumber()));for(var M=Math.ceil(Math.log(re)/Math.LN2),ee=M<=48?1:Y(2,M-48),k=x(re),X=k.mul(C);X.isNegative()||X.gt(p);)re-=ee,k=x(re,this.unsigned),X=k.mul(C);k.isZero()&&(k=Ge),Se=Se.add(k),p=p.sub(X)}return Se},N.div=N.divide,N.modulo=function(C){if(u(C)||(C=se(C)),ke){var Z=(this.unsigned?ke.rem_u:ke.rem_s)(this.low,this.high,C.low,C.high);return I(Z,ke.get_high(),this.unsigned)}return this.sub(this.div(C).mul(C))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return I(~this.low,~this.high,this.unsigned)},N.and=function(C){return u(C)||(C=se(C)),I(this.low&C.low,this.high&C.high,this.unsigned)},N.or=function(C){return u(C)||(C=se(C)),I(this.low|C.low,this.high|C.high,this.unsigned)},N.xor=function(C){return u(C)||(C=se(C)),I(this.low^C.low,this.high^C.high,this.unsigned)},N.shiftLeft=function(C){return u(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?I(this.low<<C,this.high<<C|this.low>>>32-C,this.unsigned):I(0,this.low<<C-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(C){return u(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?I(this.low>>>C|this.high<<32-C,this.high>>C,this.unsigned):I(this.high>>C-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(C){if(u(C)&&(C=C.toInt()),C&=63,C===0)return this;var Z=this.high;if(C<32){var re=this.low;return I(re>>>C|Z<<32-C,Z>>>C,this.unsigned)}else return C===32?I(Z,0,this.unsigned):I(Z>>>C-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?I(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:I(this.low,this.high,!0)},N.toBytes=function(C){return C?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var C=this.high,Z=this.low;return[Z&255,Z>>>8&255,Z>>>16&255,Z>>>24,C&255,C>>>8&255,C>>>16&255,C>>>24]},N.toBytesBE=function(){var C=this.high,Z=this.low;return[C>>>24,C>>>16&255,C>>>8&255,C&255,Z>>>24,Z>>>16&255,Z>>>8&255,Z&255]},S.fromBytes=function(C,Z,re){return re?S.fromBytesLE(C,Z):S.fromBytesBE(C,Z)},S.fromBytesLE=function(C,Z){return new S(C[0]|C[1]<<8|C[2]<<16|C[3]<<24,C[4]|C[5]<<8|C[6]<<16|C[7]<<24,Z)},S.fromBytesBE=function(C,Z){return new S(C[4]<<24|C[5]<<16|C[6]<<8|C[7],C[0]<<24|C[1]<<16|C[2]<<8|C[3],Z)}},6963:function(st,ke,S){var u=S(9680),he=S(9598),R=S(6508),W=S(5839),x=S(6707),I=S(486),Y=S(912);Y.alea=u,Y.xor128=he,Y.xorwow=R,Y.xorshift7=W,Y.xor4096=x,Y.tychei=I,st.exports=Y},9680:function(st,ke,S){st=S.nmd(st),function(u,he,R){function W(V){var se=this,J=Y();se.next=function(){var D=2091639*se.s0+se.c*23283064365386963e-26;return se.s0=se.s1,se.s1=se.s2,se.s2=D-(se.c=D|0)},se.c=1,se.s0=J(" "),se.s1=J(" "),se.s2=J(" "),se.s0-=J(V),se.s0<0&&(se.s0+=1),se.s1-=J(V),se.s1<0&&(se.s1+=1),se.s2-=J(V),se.s2<0&&(se.s2+=1),J=null}function x(V,se){return se.c=V.c,se.s0=V.s0,se.s1=V.s1,se.s2=V.s2,se}function I(V,se){var J=new W(V),D=se&&se.state,b=J.next;return b.int32=function(){return J.next()*4294967296|0},b.double=function(){return b()+(b()*2097152|0)*11102230246251565e-32},b.quick=b,D&&(typeof D=="object"&&x(D,J),b.state=function(){return x(J,{})}),b}function Y(){var V=4022871197,se=function(J){J=String(J);for(var D=0;D<J.length;D++){V+=J.charCodeAt(D);var b=.02519603282416938*V;V=b>>>0,b-=V,b*=V,V=b>>>0,b-=V,V+=b*4294967296}return(V>>>0)*23283064365386963e-26};return se}he&&he.exports?he.exports=I:R&&R.amd?R(function(){return I}):this.alea=I}(this,st,typeof define=="function"&&define)},486:function(st,ke,S){st=S.nmd(st),function(u,he,R){function W(Y){var V=this,se="";V.next=function(){var D=V.b,b=V.c,te=V.d,ge=V.a;return D=D<<25^D>>>7^b,b=b-te|0,te=te<<24^te>>>8^ge,ge=ge-D|0,V.b=D=D<<20^D>>>12^b,V.c=b=b-te|0,V.d=te<<16^b>>>16^ge,V.a=ge-D|0},V.a=0,V.b=0,V.c=-1640531527,V.d=1367130551,Y===Math.floor(Y)?(V.a=Y/4294967296|0,V.b=Y|0):se+=Y;for(var J=0;J<se.length+20;J++)V.b^=se.charCodeAt(J)|0,V.next()}function x(Y,V){return V.a=Y.a,V.b=Y.b,V.c=Y.c,V.d=Y.d,V}function I(Y,V){var se=new W(Y),J=V&&V.state,D=function(){return(se.next()>>>0)/4294967296};return D.double=function(){do var b=se.next()>>>11,te=(se.next()>>>0)/4294967296,ge=(b+te)/(1<<21);while(ge===0);return ge},D.int32=se.next,D.quick=D,J&&(typeof J=="object"&&x(J,se),D.state=function(){return x(se,{})}),D}he&&he.exports?he.exports=I:R&&R.amd?R(function(){return I}):this.tychei=I}(this,st,typeof define=="function"&&define)},9598:function(st,ke,S){st=S.nmd(st),function(u,he,R){function W(Y){var V=this,se="";V.x=0,V.y=0,V.z=0,V.w=0,V.next=function(){var D=V.x^V.x<<11;return V.x=V.y,V.y=V.z,V.z=V.w,V.w^=V.w>>>19^D^D>>>8},Y===(Y|0)?V.x=Y:se+=Y;for(var J=0;J<se.length+64;J++)V.x^=se.charCodeAt(J)|0,V.next()}function x(Y,V){return V.x=Y.x,V.y=Y.y,V.z=Y.z,V.w=Y.w,V}function I(Y,V){var se=new W(Y),J=V&&V.state,D=function(){return(se.next()>>>0)/4294967296};return D.double=function(){do var b=se.next()>>>11,te=(se.next()>>>0)/4294967296,ge=(b+te)/(1<<21);while(ge===0);return ge},D.int32=se.next,D.quick=D,J&&(typeof J=="object"&&x(J,se),D.state=function(){return x(se,{})}),D}he&&he.exports?he.exports=I:R&&R.amd?R(function(){return I}):this.xor128=I}(this,st,typeof define=="function"&&define)},6707:function(st,ke,S){st=S.nmd(st),function(u,he,R){function W(Y){var V=this;V.next=function(){var J=V.w,D=V.X,b=V.i,te,ge;return V.w=J=J+1640531527|0,ge=D[b+34&127],te=D[b=b+1&127],ge^=ge<<13,te^=te<<17,ge^=ge>>>15,te^=te>>>12,ge=D[b]=ge^te,V.i=b,ge+(J^J>>>16)|0};function se(J,D){var b,te,ge,$e,Fe,Ve=[],Ge=128;for(D===(D|0)?(te=D,D=null):(D=D+"\0",te=0,Ge=Math.max(Ge,D.length)),ge=0,$e=-32;$e<Ge;++$e)D&&(te^=D.charCodeAt(($e+32)%D.length)),$e===0&&(Fe=te),te^=te<<10,te^=te>>>15,te^=te<<4,te^=te>>>13,$e>=0&&(Fe=Fe+1640531527|0,b=Ve[$e&127]^=te+Fe,ge=b==0?ge+1:0);for(ge>=128&&(Ve[(D&&D.length||0)&127]=-1),ge=127,$e=4*128;$e>0;--$e)te=Ve[ge+34&127],b=Ve[ge=ge+1&127],te^=te<<13,b^=b<<17,te^=te>>>15,b^=b>>>12,Ve[ge]=te^b;J.w=Fe,J.X=Ve,J.i=ge}se(V,Y)}function x(Y,V){return V.i=Y.i,V.w=Y.w,V.X=Y.X.slice(),V}function I(Y,V){Y==null&&(Y=+new Date);var se=new W(Y),J=V&&V.state,D=function(){return(se.next()>>>0)/4294967296};return D.double=function(){do var b=se.next()>>>11,te=(se.next()>>>0)/4294967296,ge=(b+te)/(1<<21);while(ge===0);return ge},D.int32=se.next,D.quick=D,J&&(J.X&&x(J,se),D.state=function(){return x(se,{})}),D}he&&he.exports?he.exports=I:R&&R.amd?R(function(){return I}):this.xor4096=I}(this,st,typeof define=="function"&&define)},5839:function(st,ke,S){st=S.nmd(st),function(u,he,R){function W(Y){var V=this;V.next=function(){var J=V.x,D=V.i,b,te,ge;return b=J[D],b^=b>>>7,te=b^b<<24,b=J[D+1&7],te^=b^b>>>10,b=J[D+3&7],te^=b^b>>>3,b=J[D+4&7],te^=b^b<<7,b=J[D+7&7],b=b^b<<13,te^=b^b<<9,J[D]=te,V.i=D+1&7,te};function se(J,D){var b,te,ge=[];if(D===(D|0))te=ge[0]=D;else for(D=""+D,b=0;b<D.length;++b)ge[b&7]=ge[b&7]<<15^D.charCodeAt(b)+ge[b+1&7]<<13;for(;ge.length<8;)ge.push(0);for(b=0;b<8&&ge[b]===0;++b);for(b==8?te=ge[7]=-1:te=ge[b],J.x=ge,J.i=0,b=256;b>0;--b)J.next()}se(V,Y)}function x(Y,V){return V.x=Y.x.slice(),V.i=Y.i,V}function I(Y,V){Y==null&&(Y=+new Date);var se=new W(Y),J=V&&V.state,D=function(){return(se.next()>>>0)/4294967296};return D.double=function(){do var b=se.next()>>>11,te=(se.next()>>>0)/4294967296,ge=(b+te)/(1<<21);while(ge===0);return ge},D.int32=se.next,D.quick=D,J&&(J.x&&x(J,se),D.state=function(){return x(se,{})}),D}he&&he.exports?he.exports=I:R&&R.amd?R(function(){return I}):this.xorshift7=I}(this,st,typeof define=="function"&&define)},6508:function(st,ke,S){st=S.nmd(st),function(u,he,R){function W(Y){var V=this,se="";V.next=function(){var D=V.x^V.x>>>2;return V.x=V.y,V.y=V.z,V.z=V.w,V.w=V.v,(V.d=V.d+362437|0)+(V.v=V.v^V.v<<4^(D^D<<1))|0},V.x=0,V.y=0,V.z=0,V.w=0,V.v=0,Y===(Y|0)?V.x=Y:se+=Y;for(var J=0;J<se.length+64;J++)V.x^=se.charCodeAt(J)|0,J==se.length&&(V.d=V.x<<10^V.x>>>4),V.next()}function x(Y,V){return V.x=Y.x,V.y=Y.y,V.z=Y.z,V.w=Y.w,V.v=Y.v,V.d=Y.d,V}function I(Y,V){var se=new W(Y),J=V&&V.state,D=function(){return(se.next()>>>0)/4294967296};return D.double=function(){do var b=se.next()>>>11,te=(se.next()>>>0)/4294967296,ge=(b+te)/(1<<21);while(ge===0);return ge},D.int32=se.next,D.quick=D,J&&(typeof J=="object"&&x(J,se),D.state=function(){return x(se,{})}),D}he&&he.exports?he.exports=I:R&&R.amd?R(function(){return I}):this.xorwow=I}(this,st,typeof define=="function"&&define)},912:function(st,ke,S){(function(u,he,R){var W=256,x=6,I=52,Y="random",V=R.pow(W,x),se=R.pow(2,I),J=se*2,D=W-1,b;function te(He,j,ye){var z=[];j=j==!0?{entropy:!0}:j||{};var N=Ve(Fe(j.entropy?[He,qe(he)]:He??Ge(),3),z),P=new ge(z),C=function(){for(var Z=P.g(x),re=V,p=0;Z<se;)Z=(Z+p)*W,re*=W,p=P.g(1);for(;Z>=J;)Z/=2,re/=2,p>>>=1;return(Z+p)/re};return C.int32=function(){return P.g(4)|0},C.quick=function(){return P.g(4)/4294967296},C.double=C,Ve(qe(P.S),he),(j.pass||ye||function(Z,re,p,Se){return Se&&(Se.S&&$e(Se,P),Z.state=function(){return $e(P,{})}),p?(R[Y]=Z,re):Z})(C,N,"global"in j?j.global:this==R,j.state)}function ge(He){var j,ye=He.length,z=this,N=0,P=z.i=z.j=0,C=z.S=[];for(ye||(He=[ye++]);N<W;)C[N]=N++;for(N=0;N<W;N++)C[N]=C[P=D&P+He[N%ye]+(j=C[N])],C[P]=j;(z.g=function(Z){for(var re,p=0,Se=z.i,Re=z.j,M=z.S;Z--;)re=M[Se=D&Se+1],p=p*W+M[D&(M[Se]=M[Re=D&Re+re])+(M[Re]=re)];return z.i=Se,z.j=Re,p})(W)}function $e(He,j){return j.i=He.i,j.j=He.j,j.S=He.S.slice(),j}function Fe(He,j){var ye=[],z=typeof He,N;if(j&&z=="object")for(N in He)try{ye.push(Fe(He[N],j-1))}catch{}return ye.length?ye:z=="string"?He:He+"\0"}function Ve(He,j){for(var ye=He+"",z,N=0;N<ye.length;)j[D&N]=D&(z^=j[D&N]*19)+ye.charCodeAt(N++);return qe(j)}function Ge(){try{var He;return b&&(He=b.randomBytes)?He=He(W):(He=new Uint8Array(W),(u.crypto||u.msCrypto).getRandomValues(He)),qe(He)}catch{var j=u.navigator,ye=j&&j.plugins;return[+new Date,u,ye,u.screen,qe(he)]}}function qe(He){return String.fromCharCode.apply(0,He)}if(Ve(R.random(),he),st.exports){st.exports=te;try{b=S(4487)}catch{}}else typeof define=="function"&&define.amd?define(function(){return te}):R["seed"+Y]=te})(typeof self<"u"?self:this,[],Math)}}]);
